name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request: {}
  workflow_dispatch: {}

env:
  GO_VERSION: '1.17'

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: golangci/golangci-lint-action@v3
        with:
          args: --verbose
          skip-pkg-cache: true
          skip-build-cache: true

  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dominikh/staticcheck-action@v1

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Check Go modules
        run: |
          go mod tidy && git add go.*
          git diff --cached --exit-code || (echo 'Please run "go mod tidy" to sync Go modules' && exit 1);
      - name: Check manifests
        run: |
          make manifests && git add config
          git diff --cached --exit-code || (echo 'Please run "make manifests" to generate manifests' && exit 1);
      - name: Check auto-generated codes
        run: |
          make generate && git add apis
          git diff --cached --exit-code || (echo 'Please run "make generate" to generate Go codes' && exit 1);
      - name: Verify gofmt
        run: |
          make fmt && git add pkg cmd
          git diff --cached --exit-code || (echo 'Please run "make fmt" to verify gofmt' && exit 1);
      - name: Verify govet
        run: |
          make vet && git add pkg cmd
          git diff --cached --exit-code || (echo 'Please run "make vet" to verify govet' && exit 1);
      - name: Run Go build
        run: make build-koordlet build-koord-manager build-koord-scheduler
      - name: Run Go test
        run: make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: unittests
          file: cover.out
          fail_ci_if_error: true
          verbose: true
