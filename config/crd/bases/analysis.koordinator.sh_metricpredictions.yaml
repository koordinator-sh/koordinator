---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: metricpredictions.analysis.koordinator.sh
spec:
  group: analysis.koordinator.sh
  names:
    kind: MetricPrediction
    listKind: MetricPredictionList
    plural: metricpredictions
    shortNames:
    - mp
    singular: metricprediction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.target.type
      name: Type
      type: string
    - jsonPath: .spec.target.workload.kind
      name: Kind
      type: string
    - jsonPath: .spec.target.workload.name
      name: Name
      type: string
    - jsonPath: .spec.metric.source
      name: Metric
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MetricPrediction is the Schema for the metricpredictions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricPredictionSpec defines the desired state of MetricPrediction
            properties:
              metric:
                description: Metric defines the source of metric, including resource
                  name, metric name and how to collect
                properties:
                  metricServer:
                    description: MetricServer defines the metric server source, which
                      is effective when source is metric server
                    properties:
                      names:
                        description: Resources defines the key to indicates the resources
                          to be analyzed, only cpu and memory supported for metric
                          server
                        items:
                          description: ResourceName is the name identifying various
                            resources in a ResourceList.
                          type: string
                        type: array
                    type: object
                  prometheus:
                    description: Prometheus defines the prometheus source, which is
                      effective when source is prometheus
                    properties:
                      metrics:
                        description: Metrics defines the prometheus metrics to be
                          analyzed
                        items:
                          description: PrometheusMetric defines the prometheus metric
                            to be analyzed
                          properties:
                            metric:
                              description: Metric is the name of prometheus metric,
                                such as container_cpu_usage
                              type: string
                            name:
                              description: Name defines the key of resource to be
                                analyzed
                              type: string
                          type: object
                        type: array
                    type: object
                  source:
                    description: Source defines the source of metric, which can be
                      metric server or prometheus
                    type: string
                required:
                - source
                type: object
              profilers:
                description: Profilers define multiple analysis models for metric
                  profiling
                items:
                  description: Profiler defines an analysis model for metric profiling
                  properties:
                    distribution:
                      description: Distribution is the setting of distribution model
                      type: object
                    model:
                      description: Model is the model of the profiler
                      type: string
                    name:
                      description: Name is the name of the profiler
                      type: string
                  required:
                  - name
                  type: object
                type: array
              target:
                description: Target is the object to be analyzed, which can be a workload
                  or a series of pods
                properties:
                  podSelector:
                    description: PodSelector indicates the target is a series of pods,
                      which is effective when Type is "podSelector"
                    properties:
                      hierarchy:
                        description: Hierarchy indicates the hierarchy of the target
                          for profiling
                        properties:
                          level:
                            description: Level indicates the level of the profile
                              target, which can be pod or container
                            type: string
                        type: object
                      selector:
                        description: Selector is a label query over pods
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    required:
                    - selector
                    type: object
                  type:
                    description: Type indicates the type of target
                    type: string
                  workload:
                    description: Workload indicates the target is a k8s workload,
                      which is effective when Type is "workload"
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      hierarchy:
                        description: Hierarchy indicates the hierarchy of the target
                          for profiling
                        properties:
                          level:
                            description: Level indicates the level of the profile
                              target, which can be pod or container
                            type: string
                        type: object
                      kind:
                        description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                        type: string
                      name:
                        description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                required:
                - type
                type: object
            required:
            - metric
            - profilers
            - target
            type: object
          status:
            description: MetricPredictionStatus defines the observed state of MetricPrediction
            properties:
              results:
                description: Results is the list of results for all profilers
                items:
                  description: ProfileResult is the result of metric profiling
                  properties:
                    distributionResult:
                      description: DistributionResult is the result of distribution
                        model, which is effective only when Model is Distribution
                      properties:
                        items:
                          description: Items is a list of distribution items of all
                            profiler hierarchy
                          items:
                            description: DistributionItem is the distribution of a
                              profiler hierarchy
                            properties:
                              id:
                                description: ID is the identifier of the profiler
                                  hierarchy
                                properties:
                                  level:
                                    description: Level is the level of the profiler
                                      hierarchy
                                    type: string
                                  name:
                                    description: Name is the name of the profiler
                                      hierarchy, such as pod name or container name
                                    type: string
                                type: object
                              resources:
                                description: Resources is a list of distribution items
                                  of all resources defined in MetricSpec
                                items:
                                  description: ResourceDistribution is the distribution
                                    result of a resource type
                                  properties:
                                    avg:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Avg is the average value of the
                                        resource
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    conditions:
                                      description: Conditions is the list of conditions
                                        representing the status of the distribution
                                      items:
                                        description: "Condition contains details for
                                          one aspect of the current state of this
                                          API Resource. --- This struct is intended
                                          for direct use as an array at the field
                                          path .status.conditions.  For example, \n
                                          type FooStatus struct{ // Represents the
                                          observations of a foo's current state. //
                                          Known .status.conditions.type are: \"Available\",
                                          \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                                          // +patchStrategy=merge // +listType=map
                                          // +listMapKey=type Conditions []metav1.Condition
                                          `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                          \n // other fields }"
                                        properties:
                                          lastTransitionTime:
                                            description: lastTransitionTime is the
                                              last time the condition transitioned
                                              from one status to another. This should
                                              be when the underlying condition changed.  If
                                              that is not known, then using the time
                                              when the API field changed is acceptable.
                                            format: date-time
                                            type: string
                                          message:
                                            description: message is a human readable
                                              message indicating details about the
                                              transition. This may be an empty string.
                                            maxLength: 32768
                                            type: string
                                          observedGeneration:
                                            description: observedGeneration represents
                                              the .metadata.generation that the condition
                                              was set based upon. For instance, if
                                              .metadata.generation is currently 12,
                                              but the .status.conditions[x].observedGeneration
                                              is 9, the condition is out of date with
                                              respect to the current state of the
                                              instance.
                                            format: int64
                                            minimum: 0
                                            type: integer
                                          reason:
                                            description: reason contains a programmatic
                                              identifier indicating the reason for
                                              the condition's last transition. Producers
                                              of specific condition types may define
                                              expected values and meanings for this
                                              field, and whether the values are considered
                                              a guaranteed API. The value should be
                                              a CamelCase string. This field may not
                                              be empty.
                                            maxLength: 1024
                                            minLength: 1
                                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                            type: string
                                          status:
                                            description: status of the condition,
                                              one of True, False, Unknown.
                                            enum:
                                            - "True"
                                            - "False"
                                            - Unknown
                                            type: string
                                          type:
                                            description: type of condition in CamelCase
                                              or in foo.example.com/CamelCase. ---
                                              Many .condition.type values are consistent
                                              across resources like Available, but
                                              because arbitrary conditions can be
                                              useful (see .node.status.conditions),
                                              the ability to deconflict is important.
                                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                            maxLength: 316
                                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                            type: string
                                        required:
                                        - lastTransitionTime
                                        - message
                                        - reason
                                        - status
                                        - type
                                        type: object
                                      type: array
                                    firstSampleTime:
                                      description: LastSampleTime is the start time
                                        of the first sample
                                      format: date-time
                                      type: string
                                    lastSampleTime:
                                      description: LastSampleTime is the start time
                                        of the last sample
                                      format: date-time
                                      type: string
                                    name:
                                      description: Name is the identifier defined
                                        in MetricSpec
                                      type: string
                                    quantiles:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: Quantiles is the quantiles of the
                                        resource
                                      type: object
                                    stdDev:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: StdDev is the standard deviation
                                        of the resource
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    totalSamplesCount:
                                      description: TotalSamplesCount is the total
                                        samples count
                                      format: int64
                                      type: integer
                                    updateTime:
                                      description: UpdateTime is the update time of
                                        the distribution
                                      format: date-time
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    model:
                      description: Model is the analysis model of the profiler
                      type: string
                    profilerName:
                      description: ProfilerName is the name of the profiler
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
