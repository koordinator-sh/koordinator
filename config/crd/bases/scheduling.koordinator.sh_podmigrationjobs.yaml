---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: podmigrationjobs.scheduling.koordinator.sh
spec:
  group: scheduling.koordinator.sh
  names:
    kind: PodMigrationJob
    listKind: PodMigrationJobList
    plural: podmigrationjobs
    singular: podmigrationjob
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The phase of PodMigrationJob
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: The status of PodMigrationJob
      jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.nodeName
      name: Node
      type: string
    - jsonPath: .spec.reservationOptions.reservationRef.name
      name: Reservation
      type: string
    - jsonPath: .spec.podRef.namespace
      name: PodNamespace
      type: string
    - jsonPath: .spec.podRef.name
      name: Pod
      type: string
    - jsonPath: .status.podRef.name
      name: NewPod
      type: string
    - jsonPath: .spec.ttl
      name: TTL
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              deleteOptions:
                description: DeleteOptions defines the deleting options for the migrated
                  Pod and preempted Pods
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  dryRun:
                    description: 'When present, indicates that modifications should
                      not be persisted. An invalid or unrecognized dryRun directive
                      will result in an error response and no further processing of
                      the request. Valid values are: - All: all dry run stages will
                      be processed'
                    items:
                      type: string
                    type: array
                  gracePeriodSeconds:
                    description: The duration in seconds before the object should
                      be deleted. Value must be non-negative integer. The value zero
                      indicates delete immediately. If this value is nil, the default
                      grace period for the specified type will be used. Defaults to
                      a per object value if not specified. zero means delete immediately.
                    format: int64
                    type: integer
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  orphanDependents:
                    description: 'Deprecated: please use the PropagationPolicy, this
                      field will be deprecated in 1.7. Should the dependent objects
                      be orphaned. If true/false, the "orphan" finalizer will be added
                      to/removed from the object''s finalizers list. Either this field
                      or PropagationPolicy may be set, but not both.'
                    type: boolean
                  preconditions:
                    description: Must be fulfilled before a deletion is carried out.
                      If not possible, a 409 Conflict status will be returned.
                    properties:
                      resourceVersion:
                        description: Specifies the target ResourceVersion
                        type: string
                      uid:
                        description: Specifies the target UID.
                        type: string
                    type: object
                  propagationPolicy:
                    description: 'Whether and how garbage collection will be performed.
                      Either this field or OrphanDependents may be set, but not both.
                      The default policy is decided by the existing finalizer set
                      in the metadata.finalizers and the resource-specific default
                      policy. Acceptable values are: ''Orphan'' - orphan the dependents;
                      ''Background'' - allow the garbage collector to delete the dependents
                      in the background; ''Foreground'' - a cascading policy that
                      deletes all dependents in the foreground.'
                    type: string
                type: object
              mode:
                description: Mode represents the operating mode of the Job Default
                  is PodMigrationJobModeReservationFirst
                type: string
              paused:
                description: Paused indicates whether the PodMigrationJob should to
                  work or not. Default is false
                type: boolean
              podRef:
                description: PodRef represents the Pod that be migrated
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              reservationOptions:
                description: ReservationOptions defines the Reservation options for
                  migrated Pod
                properties:
                  preemptionOptions:
                    description: PreemptionOption decides whether to preempt other
                      Pods. The preemption is safe and reserves resources for preempted
                      Pods.
                    type: object
                  reservationRef:
                    description: ReservationRef if specified, PodMigrationJob will
                      check if the status of Reservation is available. ReservationRef
                      if not specified, PodMigrationJob controller will create Reservation
                      by Template, and update the ReservationRef to reference the
                      Reservation
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  template:
                    description: Template is the object that describes the Reservation
                      that will be created if not specified ReservationRef
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              ttl:
                description: TTL controls the PodMigrationJob timeout duration.
                type: string
            required:
            - podRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions records the stats of PodMigrationJob
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      nullable: true
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      nullable: true
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message represents a human-readable message indicating
                  details about why the PodMigrationJob is in this state.
                type: string
              nodeName:
                description: NodeName represents the node's name of migrated Pod
                type: string
              phase:
                description: PodMigrationJobPhase represents the phase of a PodMigrationJob
                  is a simple, high-level summary of where the PodMigrationJob is
                  in its lifecycle. e.g. Pending/Running/Failed
                type: string
              podRef:
                description: PodRef represents the newly created Pod after being migrated
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              preemptedPodsRef:
                description: PreemptedPodsRef represents the Pods that be preempted
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              preemptedPodsReservation:
                description: PreemptedPodsReservations records information about Reservations
                  created due to preemption
                items:
                  properties:
                    name:
                      description: Name represents the name of Reservation
                      type: string
                    namespace:
                      description: Namespace represents the namespace of Reservation
                      type: string
                    nodeName:
                      description: NodeName represents the assigned node for Reservation
                        by scheduler
                      type: string
                    phase:
                      description: Phase represents the Phase of Reservation
                      type: string
                    podsRef:
                      description: PodsRef represents the newly created Pods after
                        being preempted
                      items:
                        description: 'ObjectReference contains enough information
                          to let you inspect or modify the referred object. --- New
                          uses of this type are discouraged because of difficulty
                          describing its usage when embedded in APIs. 1. Ignored fields.  It
                          includes many fields which are not generally honored.  For
                          instance, ResourceVersion and FieldPath are both very rarely
                          valid in actual usage. 2. Invalid usage help.  It is impossible
                          to add specific help for individual usage.  In most embedded
                          usages, there are particular restrictions like, "must refer
                          only to types A and B" or "UID not honored" or "name must
                          be restricted". Those cannot be well described when embedded.
                          3. Inconsistent validation.  Because the usages are different,
                          the validation rules are different by usage, which makes
                          it hard for users to predict what will happen. 4. The fields
                          are both imprecise and overly precise.  Kind is not a precise
                          mapping to a URL. This can produce ambiguity during interpretation
                          and require a REST mapping.  In most cases, the dependency
                          is on the group,resource tuple and the version of the actual
                          struct is irrelevant. 5. We cannot easily change it.  Because
                          this type is embedded in many locations, updates to this
                          type will affect numerous schemas.  Don''t make new APIs
                          embed an underspecified API type they do not control. Instead
                          of using this type, create a locally provided and used type
                          that is well-focused on your reference. For example, ServiceReferences
                          for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                          .'
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      type: array
                    preemptedPodRef:
                      description: PreemptedPodRef represents the Pod that be preempted
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                  type: object
                type: array
              reason:
                description: Reason represents a brief CamelCase message indicating
                  details about why the PodMigrationJob is in this state.
                type: string
              status:
                description: Status represents the current status of PodMigrationJob
                  e.g. ReservationCreated
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
