apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: koordinator
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manager
  namespace: system
  labels:
    koord-app: koord-manager
spec:
  replicas: 2
  selector:
    matchLabels:
      koord-app: koord-manager
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        koord-app: koord-manager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: koord-app
                      operator: In
                      values:
                        - koord-manager
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - --enable-leader-election
            - --metrics-addr=:8080
            - --health-probe-addr=:8000
            - --logtostderr=true
            - --leader-election-namespace=koordinator-system
            - --config-namespace=koordinator-system
            - --v=4
            - --feature-gates=AllAlpha=false,AllBeta=false
            - --sync-period=0
          command:
            - /koord-manager
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: WEBHOOK_PORT
              value: "9876"
            - name: WEBHOOK_CONFIGURATION_FAILURE_POLICY_PODS
              value: Ignore
          image: manager:latest
          imagePullPolicy: Always
          name: manager
          ports:
            - containerPort: 9876
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 8000
              name: health
              protocol: TCP
          readinessProbe:
            httpGet:
              path: metrics
              port: 8080
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 256Mi
      restartPolicy: Always
      serviceAccountName: manager
      terminationGracePeriodSeconds: 10
