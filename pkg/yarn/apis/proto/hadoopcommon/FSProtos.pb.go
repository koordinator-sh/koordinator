//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//*
// These .proto interfaces are private and stable.
// Please see http://wiki.apache.org/hadoop/Compatibility
// for what changes are allowed for a *stable* .proto interface.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.3
// source: FSProtos.proto

package hadoopcommon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileStatusProto_FileType int32

const (
	FileStatusProto_FT_DIR     FileStatusProto_FileType = 1
	FileStatusProto_FT_FILE    FileStatusProto_FileType = 2
	FileStatusProto_FT_SYMLINK FileStatusProto_FileType = 3
)

// Enum value maps for FileStatusProto_FileType.
var (
	FileStatusProto_FileType_name = map[int32]string{
		1: "FT_DIR",
		2: "FT_FILE",
		3: "FT_SYMLINK",
	}
	FileStatusProto_FileType_value = map[string]int32{
		"FT_DIR":     1,
		"FT_FILE":    2,
		"FT_SYMLINK": 3,
	}
)

func (x FileStatusProto_FileType) Enum() *FileStatusProto_FileType {
	p := new(FileStatusProto_FileType)
	*p = x
	return p
}

func (x FileStatusProto_FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileStatusProto_FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_FSProtos_proto_enumTypes[0].Descriptor()
}

func (FileStatusProto_FileType) Type() protoreflect.EnumType {
	return &file_FSProtos_proto_enumTypes[0]
}

func (x FileStatusProto_FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FileStatusProto_FileType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FileStatusProto_FileType(num)
	return nil
}

// Deprecated: Use FileStatusProto_FileType.Descriptor instead.
func (FileStatusProto_FileType) EnumDescriptor() ([]byte, []int) {
	return file_FSProtos_proto_rawDescGZIP(), []int{1, 0}
}

type FileStatusProto_Flags int32

const (
	FileStatusProto_HAS_ACL          FileStatusProto_Flags = 1 // has ACLs
	FileStatusProto_HAS_CRYPT        FileStatusProto_Flags = 2 // encrypted
	FileStatusProto_HAS_EC           FileStatusProto_Flags = 4 // erasure coded
	FileStatusProto_SNAPSHOT_ENABLED FileStatusProto_Flags = 8 // snapshot enabled
)

// Enum value maps for FileStatusProto_Flags.
var (
	FileStatusProto_Flags_name = map[int32]string{
		1: "HAS_ACL",
		2: "HAS_CRYPT",
		4: "HAS_EC",
		8: "SNAPSHOT_ENABLED",
	}
	FileStatusProto_Flags_value = map[string]int32{
		"HAS_ACL":          1,
		"HAS_CRYPT":        2,
		"HAS_EC":           4,
		"SNAPSHOT_ENABLED": 8,
	}
)

func (x FileStatusProto_Flags) Enum() *FileStatusProto_Flags {
	p := new(FileStatusProto_Flags)
	*p = x
	return p
}

func (x FileStatusProto_Flags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileStatusProto_Flags) Descriptor() protoreflect.EnumDescriptor {
	return file_FSProtos_proto_enumTypes[1].Descriptor()
}

func (FileStatusProto_Flags) Type() protoreflect.EnumType {
	return &file_FSProtos_proto_enumTypes[1]
}

func (x FileStatusProto_Flags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FileStatusProto_Flags) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FileStatusProto_Flags(num)
	return nil
}

// Deprecated: Use FileStatusProto_Flags.Descriptor instead.
func (FileStatusProto_Flags) EnumDescriptor() ([]byte, []int) {
	return file_FSProtos_proto_rawDescGZIP(), []int{1, 1}
}

type FsPermissionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perm *uint32 `protobuf:"varint,1,req,name=perm" json:"perm,omitempty"` // UNIX-style mode bits
}

func (x *FsPermissionProto) Reset() {
	*x = FsPermissionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSProtos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsPermissionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsPermissionProto) ProtoMessage() {}

func (x *FsPermissionProto) ProtoReflect() protoreflect.Message {
	mi := &file_FSProtos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsPermissionProto.ProtoReflect.Descriptor instead.
func (*FsPermissionProto) Descriptor() ([]byte, []int) {
	return file_FSProtos_proto_rawDescGZIP(), []int{0}
}

func (x *FsPermissionProto) GetPerm() uint32 {
	if x != nil && x.Perm != nil {
		return *x.Perm
	}
	return 0
}

//
// FileStatus encoding. Field IDs match those from HdfsFileStatusProto, but
// cross-serialization is not an explicitly supported use case. Unlike HDFS,
// most fields are optional and do not define defaults.
type FileStatusProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType         *FileStatusProto_FileType `protobuf:"varint,1,req,name=fileType,enum=hadoop.fs.FileStatusProto_FileType" json:"fileType,omitempty"`
	Path             *string                   `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`
	Length           *uint64                   `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	Permission       *FsPermissionProto        `protobuf:"bytes,4,opt,name=permission" json:"permission,omitempty"`
	Owner            *string                   `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	Group            *string                   `protobuf:"bytes,6,opt,name=group" json:"group,omitempty"`
	ModificationTime *uint64                   `protobuf:"varint,7,opt,name=modification_time,json=modificationTime" json:"modification_time,omitempty"`
	AccessTime       *uint64                   `protobuf:"varint,8,opt,name=access_time,json=accessTime" json:"access_time,omitempty"`
	Symlink          *string                   `protobuf:"bytes,9,opt,name=symlink" json:"symlink,omitempty"`
	BlockReplication *uint32                   `protobuf:"varint,10,opt,name=block_replication,json=blockReplication" json:"block_replication,omitempty"`
	BlockSize        *uint64                   `protobuf:"varint,11,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	// locations                          = 12
	// alias                              = 13
	// childrenNum                        = 14
	EncryptionData []byte `protobuf:"bytes,15,opt,name=encryption_data,json=encryptionData" json:"encryption_data,omitempty"`
	// storagePolicy                      = 16
	EcData []byte  `protobuf:"bytes,17,opt,name=ec_data,json=ecData" json:"ec_data,omitempty"`
	Flags  *uint32 `protobuf:"varint,18,opt,name=flags,def=0" json:"flags,omitempty"`
}

// Default values for FileStatusProto fields.
const (
	Default_FileStatusProto_Flags = uint32(0)
)

func (x *FileStatusProto) Reset() {
	*x = FileStatusProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSProtos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatusProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatusProto) ProtoMessage() {}

func (x *FileStatusProto) ProtoReflect() protoreflect.Message {
	mi := &file_FSProtos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatusProto.ProtoReflect.Descriptor instead.
func (*FileStatusProto) Descriptor() ([]byte, []int) {
	return file_FSProtos_proto_rawDescGZIP(), []int{1}
}

func (x *FileStatusProto) GetFileType() FileStatusProto_FileType {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return FileStatusProto_FT_DIR
}

func (x *FileStatusProto) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *FileStatusProto) GetLength() uint64 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *FileStatusProto) GetPermission() *FsPermissionProto {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *FileStatusProto) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *FileStatusProto) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *FileStatusProto) GetModificationTime() uint64 {
	if x != nil && x.ModificationTime != nil {
		return *x.ModificationTime
	}
	return 0
}

func (x *FileStatusProto) GetAccessTime() uint64 {
	if x != nil && x.AccessTime != nil {
		return *x.AccessTime
	}
	return 0
}

func (x *FileStatusProto) GetSymlink() string {
	if x != nil && x.Symlink != nil {
		return *x.Symlink
	}
	return ""
}

func (x *FileStatusProto) GetBlockReplication() uint32 {
	if x != nil && x.BlockReplication != nil {
		return *x.BlockReplication
	}
	return 0
}

func (x *FileStatusProto) GetBlockSize() uint64 {
	if x != nil && x.BlockSize != nil {
		return *x.BlockSize
	}
	return 0
}

func (x *FileStatusProto) GetEncryptionData() []byte {
	if x != nil {
		return x.EncryptionData
	}
	return nil
}

func (x *FileStatusProto) GetEcData() []byte {
	if x != nil {
		return x.EcData
	}
	return nil
}

func (x *FileStatusProto) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return Default_FileStatusProto_Flags
}

//*
// Placeholder type for consistent basic FileSystem operations.
type LocalFileSystemPathHandleProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mtime *uint64 `protobuf:"varint,1,opt,name=mtime" json:"mtime,omitempty"`
	Path  *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (x *LocalFileSystemPathHandleProto) Reset() {
	*x = LocalFileSystemPathHandleProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSProtos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalFileSystemPathHandleProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalFileSystemPathHandleProto) ProtoMessage() {}

func (x *LocalFileSystemPathHandleProto) ProtoReflect() protoreflect.Message {
	mi := &file_FSProtos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalFileSystemPathHandleProto.ProtoReflect.Descriptor instead.
func (*LocalFileSystemPathHandleProto) Descriptor() ([]byte, []int) {
	return file_FSProtos_proto_rawDescGZIP(), []int{2}
}

func (x *LocalFileSystemPathHandleProto) GetMtime() uint64 {
	if x != nil && x.Mtime != nil {
		return *x.Mtime
	}
	return 0
}

func (x *LocalFileSystemPathHandleProto) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

var File_FSProtos_proto protoreflect.FileDescriptor

var file_FSProtos_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x46, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x66, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x46,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x65, 0x72, 0x6d, 0x22, 0xf3, 0x04, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3f, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x66, 0x73, 0x2e, 0x46, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2b, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07,
	0x65, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x33,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x54,
	0x5f, 0x44, 0x49, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x54, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x54, 0x5f, 0x53, 0x59, 0x4d, 0x4c, 0x49, 0x4e,
	0x4b, 0x10, 0x03, 0x22, 0x45, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x48, 0x41, 0x53, 0x5f, 0x41, 0x43, 0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x53,
	0x5f, 0x43, 0x52, 0x59, 0x50, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x41, 0x53, 0x5f,
	0x45, 0x43, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54,
	0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x22, 0x4a, 0x0a, 0x1e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74,
	0x68, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x26, 0x0a, 0x14, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x66, 0x73, 0x42, 0x08,
	0x46, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01,
}

var (
	file_FSProtos_proto_rawDescOnce sync.Once
	file_FSProtos_proto_rawDescData = file_FSProtos_proto_rawDesc
)

func file_FSProtos_proto_rawDescGZIP() []byte {
	file_FSProtos_proto_rawDescOnce.Do(func() {
		file_FSProtos_proto_rawDescData = protoimpl.X.CompressGZIP(file_FSProtos_proto_rawDescData)
	})
	return file_FSProtos_proto_rawDescData
}

var file_FSProtos_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_FSProtos_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_FSProtos_proto_goTypes = []interface{}{
	(FileStatusProto_FileType)(0),          // 0: hadoop.fs.FileStatusProto.FileType
	(FileStatusProto_Flags)(0),             // 1: hadoop.fs.FileStatusProto.Flags
	(*FsPermissionProto)(nil),              // 2: hadoop.fs.FsPermissionProto
	(*FileStatusProto)(nil),                // 3: hadoop.fs.FileStatusProto
	(*LocalFileSystemPathHandleProto)(nil), // 4: hadoop.fs.LocalFileSystemPathHandleProto
}
var file_FSProtos_proto_depIdxs = []int32{
	0, // 0: hadoop.fs.FileStatusProto.fileType:type_name -> hadoop.fs.FileStatusProto.FileType
	2, // 1: hadoop.fs.FileStatusProto.permission:type_name -> hadoop.fs.FsPermissionProto
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_FSProtos_proto_init() }
func file_FSProtos_proto_init() {
	if File_FSProtos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_FSProtos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsPermissionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FSProtos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatusProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FSProtos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalFileSystemPathHandleProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FSProtos_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FSProtos_proto_goTypes,
		DependencyIndexes: file_FSProtos_proto_depIdxs,
		EnumInfos:         file_FSProtos_proto_enumTypes,
		MessageInfos:      file_FSProtos_proto_msgTypes,
	}.Build()
	File_FSProtos_proto = out.File
	file_FSProtos_proto_rawDesc = nil
	file_FSProtos_proto_goTypes = nil
	file_FSProtos_proto_depIdxs = nil
}
