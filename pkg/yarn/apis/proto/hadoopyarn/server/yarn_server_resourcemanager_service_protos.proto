/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * These .proto interfaces are private and stable.
 * Please see http://wiki.apache.org/hadoop/Compatibility
 * for what changes are allowed for a *stable* .proto interface.
 */

syntax = "proto2";
option java_package = "org.apache.hadoop.yarn.proto";
option java_outer_classname = "YarnServerResourceManagerServiceProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package hadoop.yarn;

import "yarn_protos.proto";

message RefreshQueuesRequestProto {
}
message RefreshQueuesResponseProto {
}

message RefreshNodesRequestProto {
  optional DecommissionTypeProto decommissionType = 1 [default = NORMAL];
  optional int32 decommissionTimeout = 2;
}
message RefreshNodesResponseProto {
}

message RefreshSuperUserGroupsConfigurationRequestProto {
}
message RefreshSuperUserGroupsConfigurationResponseProto {
}

message RefreshUserToGroupsMappingsRequestProto {
}
message RefreshUserToGroupsMappingsResponseProto {
}

message RefreshAdminAclsRequestProto {
}
message RefreshAdminAclsResponseProto {
}

message RefreshServiceAclsRequestProto {
}
message RefreshServiceAclsResponseProto {
}

message GetGroupsForUserRequestProto {
  required string user = 1;
}

message GetGroupsForUserResponseProto {
  repeated string groups = 1;
}

message UpdateNodeResourceRequestProto {
  repeated NodeResourceMapProto node_resource_map = 1;
}

message UpdateNodeResourceResponseProto {
}

message RefreshNodesResourcesRequestProto {
}

message RefreshNodesResourcesResponseProto {
}

message AddToClusterNodeLabelsRequestProto {
  repeated string deprecatedNodeLabels = 1;
  repeated NodeLabelProto nodeLabels = 2;
}

message AddToClusterNodeLabelsResponseProto {
}

message RemoveFromClusterNodeLabelsRequestProto {
  repeated string nodeLabels = 1;
}

message RemoveFromClusterNodeLabelsResponseProto {
}

message ReplaceLabelsOnNodeRequestProto {
  repeated NodeIdToLabelsProto nodeToLabels = 1;
  optional bool failOnUnknownNodes = 2;
}

message ReplaceLabelsOnNodeResponseProto {
}

message UpdateNodeLabelsResponseProto {
}

message CheckForDecommissioningNodesRequestProto {
}
message CheckForDecommissioningNodesResponseProto {
  repeated NodeIdProto decommissioningNodes = 1;
}

message RefreshClusterMaxPriorityRequestProto {
}
message RefreshClusterMaxPriorityResponseProto {
}

message NodeIdToLabelsNameProto {
  optional NodeIdProto nodeId = 1;
  repeated string nodeLabels = 2;
}

enum DecommissionTypeProto {
  NORMAL = 1;
  GRACEFUL = 2;
  FORCEFUL = 3;
}


enum AttributeMappingOperationTypeProto {
  REPLACE = 1;
  ADD = 2;
  REMOVE = 3;
}

message NodesToAttributesMappingRequestProto {
  optional AttributeMappingOperationTypeProto operation = 1 [default = REPLACE];
  repeated NodeToAttributesProto nodeToAttributes = 2;
  optional bool failOnUnknownNodes = 3;
}

message NodesToAttributesMappingResponseProto {
}
//////////////////////////////////////////////////////////////////
///////////// RM Failover related records ////////////////////////
//////////////////////////////////////////////////////////////////
message ActiveRMInfoProto {
  optional string clusterId = 1;
  optional string rmId = 2;
}
