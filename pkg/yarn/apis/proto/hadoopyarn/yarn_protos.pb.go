//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//*
// These .proto interfaces are public and stable.
// Please see http://wiki.apache.org/hadoop/Compatibility
// for what changes are allowed for a *stable* .proto interface.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.3
// source: yarn_protos.proto

package hadoopyarn

import (
	hadoopcommon "github.com/koordinator-sh/koordinator/pkg/yarn/apis/proto/hadoopcommon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceTypesProto int32

const (
	ResourceTypesProto_COUNTABLE ResourceTypesProto = 0
)

// Enum value maps for ResourceTypesProto.
var (
	ResourceTypesProto_name = map[int32]string{
		0: "COUNTABLE",
	}
	ResourceTypesProto_value = map[string]int32{
		"COUNTABLE": 0,
	}
)

func (x ResourceTypesProto) Enum() *ResourceTypesProto {
	p := new(ResourceTypesProto)
	*p = x
	return p
}

func (x ResourceTypesProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceTypesProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[0].Descriptor()
}

func (ResourceTypesProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[0]
}

func (x ResourceTypesProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ResourceTypesProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ResourceTypesProto(num)
	return nil
}

// Deprecated: Use ResourceTypesProto.Descriptor instead.
func (ResourceTypesProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{0}
}

type ContainerStateProto int32

const (
	ContainerStateProto_C_NEW      ContainerStateProto = 1
	ContainerStateProto_C_RUNNING  ContainerStateProto = 2
	ContainerStateProto_C_COMPLETE ContainerStateProto = 3
)

// Enum value maps for ContainerStateProto.
var (
	ContainerStateProto_name = map[int32]string{
		1: "C_NEW",
		2: "C_RUNNING",
		3: "C_COMPLETE",
	}
	ContainerStateProto_value = map[string]int32{
		"C_NEW":      1,
		"C_RUNNING":  2,
		"C_COMPLETE": 3,
	}
)

func (x ContainerStateProto) Enum() *ContainerStateProto {
	p := new(ContainerStateProto)
	*p = x
	return p
}

func (x ContainerStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[1].Descriptor()
}

func (ContainerStateProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[1]
}

func (x ContainerStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContainerStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContainerStateProto(num)
	return nil
}

// Deprecated: Use ContainerStateProto.Descriptor instead.
func (ContainerStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{1}
}

type ContainerSubStateProto int32

const (
	//*
	// NEW, LOCALIZING, SCHEDULED,
	// REINITIALIZING_AWAITING_KILL, RELAUNCHING,
	ContainerSubStateProto_CSS_SCHEDULED ContainerSubStateProto = 1
	//*
	// RUNNING, REINITIALIZING, PAUSING, KILLING
	ContainerSubStateProto_CSS_RUNNING ContainerSubStateProto = 2
	//*
	// PAUSED, RESUMING
	ContainerSubStateProto_CSS_PAUSED ContainerSubStateProto = 3
	//*
	// LOCALIZATION_FAILED, EXITED_WITH_SUCCESS,
	// EXITED_WITH_FAILURE,
	// CONTAINER_CLEANEDUP_AFTER_KILL,
	// CONTAINER_RESOURCES_CLEANINGUP
	ContainerSubStateProto_CSS_COMPLETING ContainerSubStateProto = 4
	//*
	// DONE
	ContainerSubStateProto_CSS_DONE ContainerSubStateProto = 5
)

// Enum value maps for ContainerSubStateProto.
var (
	ContainerSubStateProto_name = map[int32]string{
		1: "CSS_SCHEDULED",
		2: "CSS_RUNNING",
		3: "CSS_PAUSED",
		4: "CSS_COMPLETING",
		5: "CSS_DONE",
	}
	ContainerSubStateProto_value = map[string]int32{
		"CSS_SCHEDULED":  1,
		"CSS_RUNNING":    2,
		"CSS_PAUSED":     3,
		"CSS_COMPLETING": 4,
		"CSS_DONE":       5,
	}
)

func (x ContainerSubStateProto) Enum() *ContainerSubStateProto {
	p := new(ContainerSubStateProto)
	*p = x
	return p
}

func (x ContainerSubStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerSubStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[2].Descriptor()
}

func (ContainerSubStateProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[2]
}

func (x ContainerSubStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContainerSubStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContainerSubStateProto(num)
	return nil
}

// Deprecated: Use ContainerSubStateProto.Descriptor instead.
func (ContainerSubStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{2}
}

type YarnApplicationStateProto int32

const (
	YarnApplicationStateProto_NEW        YarnApplicationStateProto = 1
	YarnApplicationStateProto_NEW_SAVING YarnApplicationStateProto = 2
	YarnApplicationStateProto_SUBMITTED  YarnApplicationStateProto = 3
	YarnApplicationStateProto_ACCEPTED   YarnApplicationStateProto = 4
	YarnApplicationStateProto_RUNNING    YarnApplicationStateProto = 5
	YarnApplicationStateProto_FINISHED   YarnApplicationStateProto = 6
	YarnApplicationStateProto_FAILED     YarnApplicationStateProto = 7
	YarnApplicationStateProto_KILLED     YarnApplicationStateProto = 8
)

// Enum value maps for YarnApplicationStateProto.
var (
	YarnApplicationStateProto_name = map[int32]string{
		1: "NEW",
		2: "NEW_SAVING",
		3: "SUBMITTED",
		4: "ACCEPTED",
		5: "RUNNING",
		6: "FINISHED",
		7: "FAILED",
		8: "KILLED",
	}
	YarnApplicationStateProto_value = map[string]int32{
		"NEW":        1,
		"NEW_SAVING": 2,
		"SUBMITTED":  3,
		"ACCEPTED":   4,
		"RUNNING":    5,
		"FINISHED":   6,
		"FAILED":     7,
		"KILLED":     8,
	}
)

func (x YarnApplicationStateProto) Enum() *YarnApplicationStateProto {
	p := new(YarnApplicationStateProto)
	*p = x
	return p
}

func (x YarnApplicationStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YarnApplicationStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[3].Descriptor()
}

func (YarnApplicationStateProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[3]
}

func (x YarnApplicationStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *YarnApplicationStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = YarnApplicationStateProto(num)
	return nil
}

// Deprecated: Use YarnApplicationStateProto.Descriptor instead.
func (YarnApplicationStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{3}
}

type YarnApplicationAttemptStateProto int32

const (
	YarnApplicationAttemptStateProto_APP_ATTEMPT_NEW              YarnApplicationAttemptStateProto = 1
	YarnApplicationAttemptStateProto_APP_ATTEMPT_SUBMITTED        YarnApplicationAttemptStateProto = 2
	YarnApplicationAttemptStateProto_APP_ATTEMPT_SCHEDULED        YarnApplicationAttemptStateProto = 3
	YarnApplicationAttemptStateProto_APP_ATTEMPT_ALLOCATED_SAVING YarnApplicationAttemptStateProto = 4
	YarnApplicationAttemptStateProto_APP_ATTEMPT_ALLOCATED        YarnApplicationAttemptStateProto = 5
	YarnApplicationAttemptStateProto_APP_ATTEMPT_LAUNCHED         YarnApplicationAttemptStateProto = 6
	YarnApplicationAttemptStateProto_APP_ATTEMPT_FAILED           YarnApplicationAttemptStateProto = 7
	YarnApplicationAttemptStateProto_APP_ATTEMPT_RUNNING          YarnApplicationAttemptStateProto = 8
	YarnApplicationAttemptStateProto_APP_ATTEMPT_FINISHING        YarnApplicationAttemptStateProto = 9
	YarnApplicationAttemptStateProto_APP_ATTEMPT_FINISHED         YarnApplicationAttemptStateProto = 10
	YarnApplicationAttemptStateProto_APP_ATTEMPT_KILLED           YarnApplicationAttemptStateProto = 11
)

// Enum value maps for YarnApplicationAttemptStateProto.
var (
	YarnApplicationAttemptStateProto_name = map[int32]string{
		1:  "APP_ATTEMPT_NEW",
		2:  "APP_ATTEMPT_SUBMITTED",
		3:  "APP_ATTEMPT_SCHEDULED",
		4:  "APP_ATTEMPT_ALLOCATED_SAVING",
		5:  "APP_ATTEMPT_ALLOCATED",
		6:  "APP_ATTEMPT_LAUNCHED",
		7:  "APP_ATTEMPT_FAILED",
		8:  "APP_ATTEMPT_RUNNING",
		9:  "APP_ATTEMPT_FINISHING",
		10: "APP_ATTEMPT_FINISHED",
		11: "APP_ATTEMPT_KILLED",
	}
	YarnApplicationAttemptStateProto_value = map[string]int32{
		"APP_ATTEMPT_NEW":              1,
		"APP_ATTEMPT_SUBMITTED":        2,
		"APP_ATTEMPT_SCHEDULED":        3,
		"APP_ATTEMPT_ALLOCATED_SAVING": 4,
		"APP_ATTEMPT_ALLOCATED":        5,
		"APP_ATTEMPT_LAUNCHED":         6,
		"APP_ATTEMPT_FAILED":           7,
		"APP_ATTEMPT_RUNNING":          8,
		"APP_ATTEMPT_FINISHING":        9,
		"APP_ATTEMPT_FINISHED":         10,
		"APP_ATTEMPT_KILLED":           11,
	}
)

func (x YarnApplicationAttemptStateProto) Enum() *YarnApplicationAttemptStateProto {
	p := new(YarnApplicationAttemptStateProto)
	*p = x
	return p
}

func (x YarnApplicationAttemptStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YarnApplicationAttemptStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[4].Descriptor()
}

func (YarnApplicationAttemptStateProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[4]
}

func (x YarnApplicationAttemptStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *YarnApplicationAttemptStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = YarnApplicationAttemptStateProto(num)
	return nil
}

// Deprecated: Use YarnApplicationAttemptStateProto.Descriptor instead.
func (YarnApplicationAttemptStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{4}
}

type FinalApplicationStatusProto int32

const (
	FinalApplicationStatusProto_APP_UNDEFINED FinalApplicationStatusProto = 0
	FinalApplicationStatusProto_APP_SUCCEEDED FinalApplicationStatusProto = 1
	FinalApplicationStatusProto_APP_FAILED    FinalApplicationStatusProto = 2
	FinalApplicationStatusProto_APP_KILLED    FinalApplicationStatusProto = 3
	FinalApplicationStatusProto_APP_ENDED     FinalApplicationStatusProto = 4
)

// Enum value maps for FinalApplicationStatusProto.
var (
	FinalApplicationStatusProto_name = map[int32]string{
		0: "APP_UNDEFINED",
		1: "APP_SUCCEEDED",
		2: "APP_FAILED",
		3: "APP_KILLED",
		4: "APP_ENDED",
	}
	FinalApplicationStatusProto_value = map[string]int32{
		"APP_UNDEFINED": 0,
		"APP_SUCCEEDED": 1,
		"APP_FAILED":    2,
		"APP_KILLED":    3,
		"APP_ENDED":     4,
	}
)

func (x FinalApplicationStatusProto) Enum() *FinalApplicationStatusProto {
	p := new(FinalApplicationStatusProto)
	*p = x
	return p
}

func (x FinalApplicationStatusProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FinalApplicationStatusProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[5].Descriptor()
}

func (FinalApplicationStatusProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[5]
}

func (x FinalApplicationStatusProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FinalApplicationStatusProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FinalApplicationStatusProto(num)
	return nil
}

// Deprecated: Use FinalApplicationStatusProto.Descriptor instead.
func (FinalApplicationStatusProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{5}
}

type LocalResourceVisibilityProto int32

const (
	LocalResourceVisibilityProto_PUBLIC      LocalResourceVisibilityProto = 1
	LocalResourceVisibilityProto_PRIVATE     LocalResourceVisibilityProto = 2
	LocalResourceVisibilityProto_APPLICATION LocalResourceVisibilityProto = 3
)

// Enum value maps for LocalResourceVisibilityProto.
var (
	LocalResourceVisibilityProto_name = map[int32]string{
		1: "PUBLIC",
		2: "PRIVATE",
		3: "APPLICATION",
	}
	LocalResourceVisibilityProto_value = map[string]int32{
		"PUBLIC":      1,
		"PRIVATE":     2,
		"APPLICATION": 3,
	}
)

func (x LocalResourceVisibilityProto) Enum() *LocalResourceVisibilityProto {
	p := new(LocalResourceVisibilityProto)
	*p = x
	return p
}

func (x LocalResourceVisibilityProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocalResourceVisibilityProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[6].Descriptor()
}

func (LocalResourceVisibilityProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[6]
}

func (x LocalResourceVisibilityProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LocalResourceVisibilityProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LocalResourceVisibilityProto(num)
	return nil
}

// Deprecated: Use LocalResourceVisibilityProto.Descriptor instead.
func (LocalResourceVisibilityProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{6}
}

type LocalResourceTypeProto int32

const (
	LocalResourceTypeProto_ARCHIVE LocalResourceTypeProto = 1
	LocalResourceTypeProto_FILE    LocalResourceTypeProto = 2
	LocalResourceTypeProto_PATTERN LocalResourceTypeProto = 3
)

// Enum value maps for LocalResourceTypeProto.
var (
	LocalResourceTypeProto_name = map[int32]string{
		1: "ARCHIVE",
		2: "FILE",
		3: "PATTERN",
	}
	LocalResourceTypeProto_value = map[string]int32{
		"ARCHIVE": 1,
		"FILE":    2,
		"PATTERN": 3,
	}
)

func (x LocalResourceTypeProto) Enum() *LocalResourceTypeProto {
	p := new(LocalResourceTypeProto)
	*p = x
	return p
}

func (x LocalResourceTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocalResourceTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[7].Descriptor()
}

func (LocalResourceTypeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[7]
}

func (x LocalResourceTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LocalResourceTypeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LocalResourceTypeProto(num)
	return nil
}

// Deprecated: Use LocalResourceTypeProto.Descriptor instead.
func (LocalResourceTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{7}
}

type LogAggregationStatusProto int32

const (
	LogAggregationStatusProto_LOG_DISABLED             LogAggregationStatusProto = 1
	LogAggregationStatusProto_LOG_NOT_START            LogAggregationStatusProto = 2
	LogAggregationStatusProto_LOG_RUNNING              LogAggregationStatusProto = 3
	LogAggregationStatusProto_LOG_SUCCEEDED            LogAggregationStatusProto = 4
	LogAggregationStatusProto_LOG_FAILED               LogAggregationStatusProto = 5
	LogAggregationStatusProto_LOG_TIME_OUT             LogAggregationStatusProto = 6
	LogAggregationStatusProto_LOG_RUNNING_WITH_FAILURE LogAggregationStatusProto = 7
)

// Enum value maps for LogAggregationStatusProto.
var (
	LogAggregationStatusProto_name = map[int32]string{
		1: "LOG_DISABLED",
		2: "LOG_NOT_START",
		3: "LOG_RUNNING",
		4: "LOG_SUCCEEDED",
		5: "LOG_FAILED",
		6: "LOG_TIME_OUT",
		7: "LOG_RUNNING_WITH_FAILURE",
	}
	LogAggregationStatusProto_value = map[string]int32{
		"LOG_DISABLED":             1,
		"LOG_NOT_START":            2,
		"LOG_RUNNING":              3,
		"LOG_SUCCEEDED":            4,
		"LOG_FAILED":               5,
		"LOG_TIME_OUT":             6,
		"LOG_RUNNING_WITH_FAILURE": 7,
	}
)

func (x LogAggregationStatusProto) Enum() *LogAggregationStatusProto {
	p := new(LogAggregationStatusProto)
	*p = x
	return p
}

func (x LogAggregationStatusProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogAggregationStatusProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[8].Descriptor()
}

func (LogAggregationStatusProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[8]
}

func (x LogAggregationStatusProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LogAggregationStatusProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LogAggregationStatusProto(num)
	return nil
}

// Deprecated: Use LogAggregationStatusProto.Descriptor instead.
func (LogAggregationStatusProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{8}
}

type NodeStateProto int32

const (
	NodeStateProto_NS_NEW             NodeStateProto = 1
	NodeStateProto_NS_RUNNING         NodeStateProto = 2
	NodeStateProto_NS_UNHEALTHY       NodeStateProto = 3
	NodeStateProto_NS_DECOMMISSIONED  NodeStateProto = 4
	NodeStateProto_NS_LOST            NodeStateProto = 5
	NodeStateProto_NS_REBOOTED        NodeStateProto = 6
	NodeStateProto_NS_DECOMMISSIONING NodeStateProto = 7
	NodeStateProto_NS_SHUTDOWN        NodeStateProto = 8
)

// Enum value maps for NodeStateProto.
var (
	NodeStateProto_name = map[int32]string{
		1: "NS_NEW",
		2: "NS_RUNNING",
		3: "NS_UNHEALTHY",
		4: "NS_DECOMMISSIONED",
		5: "NS_LOST",
		6: "NS_REBOOTED",
		7: "NS_DECOMMISSIONING",
		8: "NS_SHUTDOWN",
	}
	NodeStateProto_value = map[string]int32{
		"NS_NEW":             1,
		"NS_RUNNING":         2,
		"NS_UNHEALTHY":       3,
		"NS_DECOMMISSIONED":  4,
		"NS_LOST":            5,
		"NS_REBOOTED":        6,
		"NS_DECOMMISSIONING": 7,
		"NS_SHUTDOWN":        8,
	}
)

func (x NodeStateProto) Enum() *NodeStateProto {
	p := new(NodeStateProto)
	*p = x
	return p
}

func (x NodeStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[9].Descriptor()
}

func (NodeStateProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[9]
}

func (x NodeStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NodeStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NodeStateProto(num)
	return nil
}

// Deprecated: Use NodeStateProto.Descriptor instead.
func (NodeStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{9}
}

type NodeUpdateTypeProto int32

const (
	NodeUpdateTypeProto_NODE_USABLE          NodeUpdateTypeProto = 0
	NodeUpdateTypeProto_NODE_UNUSABLE        NodeUpdateTypeProto = 1
	NodeUpdateTypeProto_NODE_DECOMMISSIONING NodeUpdateTypeProto = 2
)

// Enum value maps for NodeUpdateTypeProto.
var (
	NodeUpdateTypeProto_name = map[int32]string{
		0: "NODE_USABLE",
		1: "NODE_UNUSABLE",
		2: "NODE_DECOMMISSIONING",
	}
	NodeUpdateTypeProto_value = map[string]int32{
		"NODE_USABLE":          0,
		"NODE_UNUSABLE":        1,
		"NODE_DECOMMISSIONING": 2,
	}
)

func (x NodeUpdateTypeProto) Enum() *NodeUpdateTypeProto {
	p := new(NodeUpdateTypeProto)
	*p = x
	return p
}

func (x NodeUpdateTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeUpdateTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[10].Descriptor()
}

func (NodeUpdateTypeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[10]
}

func (x NodeUpdateTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NodeUpdateTypeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NodeUpdateTypeProto(num)
	return nil
}

// Deprecated: Use NodeUpdateTypeProto.Descriptor instead.
func (NodeUpdateTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{10}
}

type NodeAttributeTypeProto int32

const (
	NodeAttributeTypeProto_STRING NodeAttributeTypeProto = 1
)

// Enum value maps for NodeAttributeTypeProto.
var (
	NodeAttributeTypeProto_name = map[int32]string{
		1: "STRING",
	}
	NodeAttributeTypeProto_value = map[string]int32{
		"STRING": 1,
	}
)

func (x NodeAttributeTypeProto) Enum() *NodeAttributeTypeProto {
	p := new(NodeAttributeTypeProto)
	*p = x
	return p
}

func (x NodeAttributeTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeAttributeTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[11].Descriptor()
}

func (NodeAttributeTypeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[11]
}

func (x NodeAttributeTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NodeAttributeTypeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NodeAttributeTypeProto(num)
	return nil
}

// Deprecated: Use NodeAttributeTypeProto.Descriptor instead.
func (NodeAttributeTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{11}
}

type ContainerTypeProto int32

const (
	ContainerTypeProto_APPLICATION_MASTER ContainerTypeProto = 1
	ContainerTypeProto_TASK               ContainerTypeProto = 2
)

// Enum value maps for ContainerTypeProto.
var (
	ContainerTypeProto_name = map[int32]string{
		1: "APPLICATION_MASTER",
		2: "TASK",
	}
	ContainerTypeProto_value = map[string]int32{
		"APPLICATION_MASTER": 1,
		"TASK":               2,
	}
)

func (x ContainerTypeProto) Enum() *ContainerTypeProto {
	p := new(ContainerTypeProto)
	*p = x
	return p
}

func (x ContainerTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[12].Descriptor()
}

func (ContainerTypeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[12]
}

func (x ContainerTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContainerTypeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContainerTypeProto(num)
	return nil
}

// Deprecated: Use ContainerTypeProto.Descriptor instead.
func (ContainerTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{12}
}

type ExecutionTypeProto int32

const (
	ExecutionTypeProto_GUARANTEED    ExecutionTypeProto = 1
	ExecutionTypeProto_OPPORTUNISTIC ExecutionTypeProto = 2
)

// Enum value maps for ExecutionTypeProto.
var (
	ExecutionTypeProto_name = map[int32]string{
		1: "GUARANTEED",
		2: "OPPORTUNISTIC",
	}
	ExecutionTypeProto_value = map[string]int32{
		"GUARANTEED":    1,
		"OPPORTUNISTIC": 2,
	}
)

func (x ExecutionTypeProto) Enum() *ExecutionTypeProto {
	p := new(ExecutionTypeProto)
	*p = x
	return p
}

func (x ExecutionTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[13].Descriptor()
}

func (ExecutionTypeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[13]
}

func (x ExecutionTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ExecutionTypeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ExecutionTypeProto(num)
	return nil
}

// Deprecated: Use ExecutionTypeProto.Descriptor instead.
func (ExecutionTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{13}
}

type AMCommandProto int32

const (
	AMCommandProto_AM_RESYNC   AMCommandProto = 1
	AMCommandProto_AM_SHUTDOWN AMCommandProto = 2
)

// Enum value maps for AMCommandProto.
var (
	AMCommandProto_name = map[int32]string{
		1: "AM_RESYNC",
		2: "AM_SHUTDOWN",
	}
	AMCommandProto_value = map[string]int32{
		"AM_RESYNC":   1,
		"AM_SHUTDOWN": 2,
	}
)

func (x AMCommandProto) Enum() *AMCommandProto {
	p := new(AMCommandProto)
	*p = x
	return p
}

func (x AMCommandProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AMCommandProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[14].Descriptor()
}

func (AMCommandProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[14]
}

func (x AMCommandProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AMCommandProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AMCommandProto(num)
	return nil
}

// Deprecated: Use AMCommandProto.Descriptor instead.
func (AMCommandProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{14}
}

type RejectionReasonProto int32

const (
	RejectionReasonProto_RRP_COULD_NOT_PLACE_ON_NODE    RejectionReasonProto = 1
	RejectionReasonProto_RRP_COULD_NOT_SCHEDULE_ON_NODE RejectionReasonProto = 2
)

// Enum value maps for RejectionReasonProto.
var (
	RejectionReasonProto_name = map[int32]string{
		1: "RRP_COULD_NOT_PLACE_ON_NODE",
		2: "RRP_COULD_NOT_SCHEDULE_ON_NODE",
	}
	RejectionReasonProto_value = map[string]int32{
		"RRP_COULD_NOT_PLACE_ON_NODE":    1,
		"RRP_COULD_NOT_SCHEDULE_ON_NODE": 2,
	}
)

func (x RejectionReasonProto) Enum() *RejectionReasonProto {
	p := new(RejectionReasonProto)
	*p = x
	return p
}

func (x RejectionReasonProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RejectionReasonProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[15].Descriptor()
}

func (RejectionReasonProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[15]
}

func (x RejectionReasonProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RejectionReasonProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RejectionReasonProto(num)
	return nil
}

// Deprecated: Use RejectionReasonProto.Descriptor instead.
func (RejectionReasonProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{15}
}

type ApplicationTimeoutTypeProto int32

const (
	ApplicationTimeoutTypeProto_APP_TIMEOUT_LIFETIME ApplicationTimeoutTypeProto = 1
)

// Enum value maps for ApplicationTimeoutTypeProto.
var (
	ApplicationTimeoutTypeProto_name = map[int32]string{
		1: "APP_TIMEOUT_LIFETIME",
	}
	ApplicationTimeoutTypeProto_value = map[string]int32{
		"APP_TIMEOUT_LIFETIME": 1,
	}
)

func (x ApplicationTimeoutTypeProto) Enum() *ApplicationTimeoutTypeProto {
	p := new(ApplicationTimeoutTypeProto)
	*p = x
	return p
}

func (x ApplicationTimeoutTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationTimeoutTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[16].Descriptor()
}

func (ApplicationTimeoutTypeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[16]
}

func (x ApplicationTimeoutTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ApplicationTimeoutTypeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ApplicationTimeoutTypeProto(num)
	return nil
}

// Deprecated: Use ApplicationTimeoutTypeProto.Descriptor instead.
func (ApplicationTimeoutTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{16}
}

type ApplicationAccessTypeProto int32

const (
	ApplicationAccessTypeProto_APPACCESS_VIEW_APP   ApplicationAccessTypeProto = 1
	ApplicationAccessTypeProto_APPACCESS_MODIFY_APP ApplicationAccessTypeProto = 2
)

// Enum value maps for ApplicationAccessTypeProto.
var (
	ApplicationAccessTypeProto_name = map[int32]string{
		1: "APPACCESS_VIEW_APP",
		2: "APPACCESS_MODIFY_APP",
	}
	ApplicationAccessTypeProto_value = map[string]int32{
		"APPACCESS_VIEW_APP":   1,
		"APPACCESS_MODIFY_APP": 2,
	}
)

func (x ApplicationAccessTypeProto) Enum() *ApplicationAccessTypeProto {
	p := new(ApplicationAccessTypeProto)
	*p = x
	return p
}

func (x ApplicationAccessTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationAccessTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[17].Descriptor()
}

func (ApplicationAccessTypeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[17]
}

func (x ApplicationAccessTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ApplicationAccessTypeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ApplicationAccessTypeProto(num)
	return nil
}

// Deprecated: Use ApplicationAccessTypeProto.Descriptor instead.
func (ApplicationAccessTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{17}
}

type QueueStateProto int32

const (
	QueueStateProto_Q_STOPPED  QueueStateProto = 1
	QueueStateProto_Q_RUNNING  QueueStateProto = 2
	QueueStateProto_Q_DRAINING QueueStateProto = 3
)

// Enum value maps for QueueStateProto.
var (
	QueueStateProto_name = map[int32]string{
		1: "Q_STOPPED",
		2: "Q_RUNNING",
		3: "Q_DRAINING",
	}
	QueueStateProto_value = map[string]int32{
		"Q_STOPPED":  1,
		"Q_RUNNING":  2,
		"Q_DRAINING": 3,
	}
)

func (x QueueStateProto) Enum() *QueueStateProto {
	p := new(QueueStateProto)
	*p = x
	return p
}

func (x QueueStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[18].Descriptor()
}

func (QueueStateProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[18]
}

func (x QueueStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *QueueStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = QueueStateProto(num)
	return nil
}

// Deprecated: Use QueueStateProto.Descriptor instead.
func (QueueStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{18}
}

type QueueACLProto int32

const (
	QueueACLProto_QACL_SUBMIT_APPLICATIONS QueueACLProto = 1
	QueueACLProto_QACL_ADMINISTER_QUEUE    QueueACLProto = 2
)

// Enum value maps for QueueACLProto.
var (
	QueueACLProto_name = map[int32]string{
		1: "QACL_SUBMIT_APPLICATIONS",
		2: "QACL_ADMINISTER_QUEUE",
	}
	QueueACLProto_value = map[string]int32{
		"QACL_SUBMIT_APPLICATIONS": 1,
		"QACL_ADMINISTER_QUEUE":    2,
	}
)

func (x QueueACLProto) Enum() *QueueACLProto {
	p := new(QueueACLProto)
	*p = x
	return p
}

func (x QueueACLProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueACLProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[19].Descriptor()
}

func (QueueACLProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[19]
}

func (x QueueACLProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *QueueACLProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = QueueACLProto(num)
	return nil
}

// Deprecated: Use QueueACLProto.Descriptor instead.
func (QueueACLProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{19}
}

type SignalContainerCommandProto int32

const (
	SignalContainerCommandProto_OUTPUT_THREAD_DUMP SignalContainerCommandProto = 1
	SignalContainerCommandProto_GRACEFUL_SHUTDOWN  SignalContainerCommandProto = 2
	SignalContainerCommandProto_FORCEFUL_SHUTDOWN  SignalContainerCommandProto = 3
)

// Enum value maps for SignalContainerCommandProto.
var (
	SignalContainerCommandProto_name = map[int32]string{
		1: "OUTPUT_THREAD_DUMP",
		2: "GRACEFUL_SHUTDOWN",
		3: "FORCEFUL_SHUTDOWN",
	}
	SignalContainerCommandProto_value = map[string]int32{
		"OUTPUT_THREAD_DUMP": 1,
		"GRACEFUL_SHUTDOWN":  2,
		"FORCEFUL_SHUTDOWN":  3,
	}
)

func (x SignalContainerCommandProto) Enum() *SignalContainerCommandProto {
	p := new(SignalContainerCommandProto)
	*p = x
	return p
}

func (x SignalContainerCommandProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalContainerCommandProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[20].Descriptor()
}

func (SignalContainerCommandProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[20]
}

func (x SignalContainerCommandProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SignalContainerCommandProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SignalContainerCommandProto(num)
	return nil
}

// Deprecated: Use SignalContainerCommandProto.Descriptor instead.
func (SignalContainerCommandProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{20}
}

type NodeAttributeOpCodeProto int32

const (
	NodeAttributeOpCodeProto_NO_OP NodeAttributeOpCodeProto = 1
	NodeAttributeOpCodeProto_EQ    NodeAttributeOpCodeProto = 2
	NodeAttributeOpCodeProto_NE    NodeAttributeOpCodeProto = 3
)

// Enum value maps for NodeAttributeOpCodeProto.
var (
	NodeAttributeOpCodeProto_name = map[int32]string{
		1: "NO_OP",
		2: "EQ",
		3: "NE",
	}
	NodeAttributeOpCodeProto_value = map[string]int32{
		"NO_OP": 1,
		"EQ":    2,
		"NE":    3,
	}
)

func (x NodeAttributeOpCodeProto) Enum() *NodeAttributeOpCodeProto {
	p := new(NodeAttributeOpCodeProto)
	*p = x
	return p
}

func (x NodeAttributeOpCodeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeAttributeOpCodeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[21].Descriptor()
}

func (NodeAttributeOpCodeProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[21]
}

func (x NodeAttributeOpCodeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NodeAttributeOpCodeProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NodeAttributeOpCodeProto(num)
	return nil
}

// Deprecated: Use NodeAttributeOpCodeProto.Descriptor instead.
func (NodeAttributeOpCodeProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{21}
}

type ReservationRequestInterpreterProto int32

const (
	ReservationRequestInterpreterProto_R_ANY          ReservationRequestInterpreterProto = 0
	ReservationRequestInterpreterProto_R_ALL          ReservationRequestInterpreterProto = 1
	ReservationRequestInterpreterProto_R_ORDER        ReservationRequestInterpreterProto = 2
	ReservationRequestInterpreterProto_R_ORDER_NO_GAP ReservationRequestInterpreterProto = 3
)

// Enum value maps for ReservationRequestInterpreterProto.
var (
	ReservationRequestInterpreterProto_name = map[int32]string{
		0: "R_ANY",
		1: "R_ALL",
		2: "R_ORDER",
		3: "R_ORDER_NO_GAP",
	}
	ReservationRequestInterpreterProto_value = map[string]int32{
		"R_ANY":          0,
		"R_ALL":          1,
		"R_ORDER":        2,
		"R_ORDER_NO_GAP": 3,
	}
)

func (x ReservationRequestInterpreterProto) Enum() *ReservationRequestInterpreterProto {
	p := new(ReservationRequestInterpreterProto)
	*p = x
	return p
}

func (x ReservationRequestInterpreterProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReservationRequestInterpreterProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[22].Descriptor()
}

func (ReservationRequestInterpreterProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[22]
}

func (x ReservationRequestInterpreterProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ReservationRequestInterpreterProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ReservationRequestInterpreterProto(num)
	return nil
}

// Deprecated: Use ReservationRequestInterpreterProto.Descriptor instead.
func (ReservationRequestInterpreterProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{22}
}

type ContainerExitStatusProto int32

const (
	ContainerExitStatusProto_SUCCESS      ContainerExitStatusProto = 0
	ContainerExitStatusProto_INVALID      ContainerExitStatusProto = -1000
	ContainerExitStatusProto_ABORTED      ContainerExitStatusProto = -100
	ContainerExitStatusProto_DISKS_FAILED ContainerExitStatusProto = -101
)

// Enum value maps for ContainerExitStatusProto.
var (
	ContainerExitStatusProto_name = map[int32]string{
		0:     "SUCCESS",
		-1000: "INVALID",
		-100:  "ABORTED",
		-101:  "DISKS_FAILED",
	}
	ContainerExitStatusProto_value = map[string]int32{
		"SUCCESS":      0,
		"INVALID":      -1000,
		"ABORTED":      -100,
		"DISKS_FAILED": -101,
	}
)

func (x ContainerExitStatusProto) Enum() *ContainerExitStatusProto {
	p := new(ContainerExitStatusProto)
	*p = x
	return p
}

func (x ContainerExitStatusProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerExitStatusProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[23].Descriptor()
}

func (ContainerExitStatusProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[23]
}

func (x ContainerExitStatusProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContainerExitStatusProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContainerExitStatusProto(num)
	return nil
}

// Deprecated: Use ContainerExitStatusProto.Descriptor instead.
func (ContainerExitStatusProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{23}
}

type ContainerRetryPolicyProto int32

const (
	ContainerRetryPolicyProto_NEVER_RETRY                   ContainerRetryPolicyProto = 0
	ContainerRetryPolicyProto_RETRY_ON_ALL_ERRORS           ContainerRetryPolicyProto = 1
	ContainerRetryPolicyProto_RETRY_ON_SPECIFIC_ERROR_CODES ContainerRetryPolicyProto = 2
)

// Enum value maps for ContainerRetryPolicyProto.
var (
	ContainerRetryPolicyProto_name = map[int32]string{
		0: "NEVER_RETRY",
		1: "RETRY_ON_ALL_ERRORS",
		2: "RETRY_ON_SPECIFIC_ERROR_CODES",
	}
	ContainerRetryPolicyProto_value = map[string]int32{
		"NEVER_RETRY":                   0,
		"RETRY_ON_ALL_ERRORS":           1,
		"RETRY_ON_SPECIFIC_ERROR_CODES": 2,
	}
)

func (x ContainerRetryPolicyProto) Enum() *ContainerRetryPolicyProto {
	p := new(ContainerRetryPolicyProto)
	*p = x
	return p
}

func (x ContainerRetryPolicyProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerRetryPolicyProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[24].Descriptor()
}

func (ContainerRetryPolicyProto) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[24]
}

func (x ContainerRetryPolicyProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContainerRetryPolicyProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContainerRetryPolicyProto(num)
	return nil
}

// Deprecated: Use ContainerRetryPolicyProto.Descriptor instead.
func (ContainerRetryPolicyProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{24}
}

type PlacementConstraintTargetProto_TargetType int32

const (
	PlacementConstraintTargetProto_NODE_ATTRIBUTE PlacementConstraintTargetProto_TargetType = 1
	PlacementConstraintTargetProto_ALLOCATION_TAG PlacementConstraintTargetProto_TargetType = 2
	PlacementConstraintTargetProto_SELF           PlacementConstraintTargetProto_TargetType = 3
)

// Enum value maps for PlacementConstraintTargetProto_TargetType.
var (
	PlacementConstraintTargetProto_TargetType_name = map[int32]string{
		1: "NODE_ATTRIBUTE",
		2: "ALLOCATION_TAG",
		3: "SELF",
	}
	PlacementConstraintTargetProto_TargetType_value = map[string]int32{
		"NODE_ATTRIBUTE": 1,
		"ALLOCATION_TAG": 2,
		"SELF":           3,
	}
)

func (x PlacementConstraintTargetProto_TargetType) Enum() *PlacementConstraintTargetProto_TargetType {
	p := new(PlacementConstraintTargetProto_TargetType)
	*p = x
	return p
}

func (x PlacementConstraintTargetProto_TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlacementConstraintTargetProto_TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[25].Descriptor()
}

func (PlacementConstraintTargetProto_TargetType) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[25]
}

func (x PlacementConstraintTargetProto_TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PlacementConstraintTargetProto_TargetType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PlacementConstraintTargetProto_TargetType(num)
	return nil
}

// Deprecated: Use PlacementConstraintTargetProto_TargetType.Descriptor instead.
func (PlacementConstraintTargetProto_TargetType) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{58, 0}
}

type TimedPlacementConstraintProto_DelayUnit int32

const (
	TimedPlacementConstraintProto_MILLISECONDS  TimedPlacementConstraintProto_DelayUnit = 1
	TimedPlacementConstraintProto_OPPORTUNITIES TimedPlacementConstraintProto_DelayUnit = 2
)

// Enum value maps for TimedPlacementConstraintProto_DelayUnit.
var (
	TimedPlacementConstraintProto_DelayUnit_name = map[int32]string{
		1: "MILLISECONDS",
		2: "OPPORTUNITIES",
	}
	TimedPlacementConstraintProto_DelayUnit_value = map[string]int32{
		"MILLISECONDS":  1,
		"OPPORTUNITIES": 2,
	}
)

func (x TimedPlacementConstraintProto_DelayUnit) Enum() *TimedPlacementConstraintProto_DelayUnit {
	p := new(TimedPlacementConstraintProto_DelayUnit)
	*p = x
	return p
}

func (x TimedPlacementConstraintProto_DelayUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimedPlacementConstraintProto_DelayUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[26].Descriptor()
}

func (TimedPlacementConstraintProto_DelayUnit) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[26]
}

func (x TimedPlacementConstraintProto_DelayUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TimedPlacementConstraintProto_DelayUnit) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TimedPlacementConstraintProto_DelayUnit(num)
	return nil
}

// Deprecated: Use TimedPlacementConstraintProto_DelayUnit.Descriptor instead.
func (TimedPlacementConstraintProto_DelayUnit) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{59, 0}
}

type CompositePlacementConstraintProto_CompositeType int32

const (
	// All children constraints have to be satisfied.
	CompositePlacementConstraintProto_AND CompositePlacementConstraintProto_CompositeType = 1
	// One of the children constraints has to be satisfied.
	CompositePlacementConstraintProto_OR CompositePlacementConstraintProto_CompositeType = 2
	// Attempt to satisfy the first child constraint for delays[0] units (e.g.,
	// millisec or heartbeats). If this fails, try to satisfy the second child
	// constraint for delays[1] units and so on.
	CompositePlacementConstraintProto_DELAYED_OR CompositePlacementConstraintProto_CompositeType = 3
)

// Enum value maps for CompositePlacementConstraintProto_CompositeType.
var (
	CompositePlacementConstraintProto_CompositeType_name = map[int32]string{
		1: "AND",
		2: "OR",
		3: "DELAYED_OR",
	}
	CompositePlacementConstraintProto_CompositeType_value = map[string]int32{
		"AND":        1,
		"OR":         2,
		"DELAYED_OR": 3,
	}
)

func (x CompositePlacementConstraintProto_CompositeType) Enum() *CompositePlacementConstraintProto_CompositeType {
	p := new(CompositePlacementConstraintProto_CompositeType)
	*p = x
	return p
}

func (x CompositePlacementConstraintProto_CompositeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompositePlacementConstraintProto_CompositeType) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_protos_proto_enumTypes[27].Descriptor()
}

func (CompositePlacementConstraintProto_CompositeType) Type() protoreflect.EnumType {
	return &file_yarn_protos_proto_enumTypes[27]
}

func (x CompositePlacementConstraintProto_CompositeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CompositePlacementConstraintProto_CompositeType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CompositePlacementConstraintProto_CompositeType(num)
	return nil
}

// Deprecated: Use CompositePlacementConstraintProto_CompositeType.Descriptor instead.
func (CompositePlacementConstraintProto_CompositeType) EnumDescriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{60, 0}
}

type SerializedExceptionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   *string                   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Trace     *string                   `protobuf:"bytes,2,opt,name=trace" json:"trace,omitempty"`
	ClassName *string                   `protobuf:"bytes,3,opt,name=class_name,json=className" json:"class_name,omitempty"`
	Cause     *SerializedExceptionProto `protobuf:"bytes,4,opt,name=cause" json:"cause,omitempty"`
}

func (x *SerializedExceptionProto) Reset() {
	*x = SerializedExceptionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedExceptionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedExceptionProto) ProtoMessage() {}

func (x *SerializedExceptionProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedExceptionProto.ProtoReflect.Descriptor instead.
func (*SerializedExceptionProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{0}
}

func (x *SerializedExceptionProto) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *SerializedExceptionProto) GetTrace() string {
	if x != nil && x.Trace != nil {
		return *x.Trace
	}
	return ""
}

func (x *SerializedExceptionProto) GetClassName() string {
	if x != nil && x.ClassName != nil {
		return *x.ClassName
	}
	return ""
}

func (x *SerializedExceptionProto) GetCause() *SerializedExceptionProto {
	if x != nil {
		return x.Cause
	}
	return nil
}

type ApplicationIdProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ClusterTimestamp *int64 `protobuf:"varint,2,opt,name=cluster_timestamp,json=clusterTimestamp" json:"cluster_timestamp,omitempty"`
}

func (x *ApplicationIdProto) Reset() {
	*x = ApplicationIdProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationIdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationIdProto) ProtoMessage() {}

func (x *ApplicationIdProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationIdProto.ProtoReflect.Descriptor instead.
func (*ApplicationIdProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationIdProto) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ApplicationIdProto) GetClusterTimestamp() int64 {
	if x != nil && x.ClusterTimestamp != nil {
		return *x.ClusterTimestamp
	}
	return 0
}

type ApplicationAttemptIdProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId *ApplicationIdProto `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	AttemptId     *int32              `protobuf:"varint,2,opt,name=attemptId" json:"attemptId,omitempty"`
}

func (x *ApplicationAttemptIdProto) Reset() {
	*x = ApplicationAttemptIdProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttemptIdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttemptIdProto) ProtoMessage() {}

func (x *ApplicationAttemptIdProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttemptIdProto.ProtoReflect.Descriptor instead.
func (*ApplicationAttemptIdProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationAttemptIdProto) GetApplicationId() *ApplicationIdProto {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *ApplicationAttemptIdProto) GetAttemptId() int32 {
	if x != nil && x.AttemptId != nil {
		return *x.AttemptId
	}
	return 0
}

type ContainerIdProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        *ApplicationIdProto        `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppAttemptId *ApplicationAttemptIdProto `protobuf:"bytes,2,opt,name=app_attempt_id,json=appAttemptId" json:"app_attempt_id,omitempty"`
	Id           *int64                     `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
}

func (x *ContainerIdProto) Reset() {
	*x = ContainerIdProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerIdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerIdProto) ProtoMessage() {}

func (x *ContainerIdProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerIdProto.ProtoReflect.Descriptor instead.
func (*ContainerIdProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{3}
}

func (x *ContainerIdProto) GetAppId() *ApplicationIdProto {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *ContainerIdProto) GetAppAttemptId() *ApplicationAttemptIdProto {
	if x != nil {
		return x.AppAttemptId
	}
	return nil
}

func (x *ContainerIdProto) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type ResourceInformationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string             `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value *int64              `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Units *string             `protobuf:"bytes,3,opt,name=units" json:"units,omitempty"`
	Type  *ResourceTypesProto `protobuf:"varint,4,opt,name=type,enum=hadoop.yarn.ResourceTypesProto" json:"type,omitempty"`
}

func (x *ResourceInformationProto) Reset() {
	*x = ResourceInformationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInformationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInformationProto) ProtoMessage() {}

func (x *ResourceInformationProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInformationProto.ProtoReflect.Descriptor instead.
func (*ResourceInformationProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceInformationProto) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *ResourceInformationProto) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ResourceInformationProto) GetUnits() string {
	if x != nil && x.Units != nil {
		return *x.Units
	}
	return ""
}

func (x *ResourceInformationProto) GetType() ResourceTypesProto {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ResourceTypesProto_COUNTABLE
}

type ResourceTypeInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string             `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Units *string             `protobuf:"bytes,2,opt,name=units" json:"units,omitempty"`
	Type  *ResourceTypesProto `protobuf:"varint,3,opt,name=type,enum=hadoop.yarn.ResourceTypesProto" json:"type,omitempty"`
}

func (x *ResourceTypeInfoProto) Reset() {
	*x = ResourceTypeInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTypeInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTypeInfoProto) ProtoMessage() {}

func (x *ResourceTypeInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTypeInfoProto.ProtoReflect.Descriptor instead.
func (*ResourceTypeInfoProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceTypeInfoProto) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceTypeInfoProto) GetUnits() string {
	if x != nil && x.Units != nil {
		return *x.Units
	}
	return ""
}

func (x *ResourceTypeInfoProto) GetType() ResourceTypesProto {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ResourceTypesProto_COUNTABLE
}

type ResourceProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory           *int64                      `protobuf:"varint,1,opt,name=memory" json:"memory,omitempty"`
	VirtualCores     *int32                      `protobuf:"varint,2,opt,name=virtual_cores,json=virtualCores" json:"virtual_cores,omitempty"`
	ResourceValueMap []*ResourceInformationProto `protobuf:"bytes,3,rep,name=resource_value_map,json=resourceValueMap" json:"resource_value_map,omitempty"`
}

func (x *ResourceProto) Reset() {
	*x = ResourceProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceProto) ProtoMessage() {}

func (x *ResourceProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceProto.ProtoReflect.Descriptor instead.
func (*ResourceProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceProto) GetMemory() int64 {
	if x != nil && x.Memory != nil {
		return *x.Memory
	}
	return 0
}

func (x *ResourceProto) GetVirtualCores() int32 {
	if x != nil && x.VirtualCores != nil {
		return *x.VirtualCores
	}
	return 0
}

func (x *ResourceProto) GetResourceValueMap() []*ResourceInformationProto {
	if x != nil {
		return x.ResourceValueMap
	}
	return nil
}

type ResourceUtilizationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pmem *int32   `protobuf:"varint,1,opt,name=pmem" json:"pmem,omitempty"`
	Vmem *int32   `protobuf:"varint,2,opt,name=vmem" json:"vmem,omitempty"`
	Cpu  *float32 `protobuf:"fixed32,3,opt,name=cpu" json:"cpu,omitempty"`
}

func (x *ResourceUtilizationProto) Reset() {
	*x = ResourceUtilizationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceUtilizationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUtilizationProto) ProtoMessage() {}

func (x *ResourceUtilizationProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUtilizationProto.ProtoReflect.Descriptor instead.
func (*ResourceUtilizationProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceUtilizationProto) GetPmem() int32 {
	if x != nil && x.Pmem != nil {
		return *x.Pmem
	}
	return 0
}

func (x *ResourceUtilizationProto) GetVmem() int32 {
	if x != nil && x.Vmem != nil {
		return *x.Vmem
	}
	return 0
}

func (x *ResourceUtilizationProto) GetCpu() float32 {
	if x != nil && x.Cpu != nil {
		return *x.Cpu
	}
	return 0
}

type ResourceOptionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource          *ResourceProto `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	OverCommitTimeout *int32         `protobuf:"varint,2,opt,name=over_commit_timeout,json=overCommitTimeout" json:"over_commit_timeout,omitempty"`
}

func (x *ResourceOptionProto) Reset() {
	*x = ResourceOptionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceOptionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceOptionProto) ProtoMessage() {}

func (x *ResourceOptionProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceOptionProto.ProtoReflect.Descriptor instead.
func (*ResourceOptionProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceOptionProto) GetResource() *ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ResourceOptionProto) GetOverCommitTimeout() int32 {
	if x != nil && x.OverCommitTimeout != nil {
		return *x.OverCommitTimeout
	}
	return 0
}

type ResourceProfileEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string        `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Resources *ResourceProto `protobuf:"bytes,2,req,name=resources" json:"resources,omitempty"`
}

func (x *ResourceProfileEntry) Reset() {
	*x = ResourceProfileEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceProfileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceProfileEntry) ProtoMessage() {}

func (x *ResourceProfileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceProfileEntry.ProtoReflect.Descriptor instead.
func (*ResourceProfileEntry) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceProfileEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceProfileEntry) GetResources() *ResourceProto {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ResourceProfilesProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceProfilesMap []*ResourceProfileEntry `protobuf:"bytes,1,rep,name=resource_profiles_map,json=resourceProfilesMap" json:"resource_profiles_map,omitempty"`
}

func (x *ResourceProfilesProto) Reset() {
	*x = ResourceProfilesProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceProfilesProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceProfilesProto) ProtoMessage() {}

func (x *ResourceProfilesProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceProfilesProto.ProtoReflect.Descriptor instead.
func (*ResourceProfilesProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceProfilesProto) GetResourceProfilesMap() []*ResourceProfileEntry {
	if x != nil {
		return x.ResourceProfilesMap
	}
	return nil
}

type NodeResourceMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId         *NodeIdProto         `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ResourceOption *ResourceOptionProto `protobuf:"bytes,2,opt,name=resource_option,json=resourceOption" json:"resource_option,omitempty"`
}

func (x *NodeResourceMapProto) Reset() {
	*x = NodeResourceMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeResourceMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResourceMapProto) ProtoMessage() {}

func (x *NodeResourceMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResourceMapProto.ProtoReflect.Descriptor instead.
func (*NodeResourceMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{11}
}

func (x *NodeResourceMapProto) GetNodeId() *NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *NodeResourceMapProto) GetResourceOption() *ResourceOptionProto {
	if x != nil {
		return x.ResourceOption
	}
	return nil
}

type PriorityProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority *int32 `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
}

func (x *PriorityProto) Reset() {
	*x = PriorityProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriorityProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriorityProto) ProtoMessage() {}

func (x *PriorityProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriorityProto.ProtoReflect.Descriptor instead.
func (*PriorityProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{12}
}

func (x *PriorityProto) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

type ContainerProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  *ContainerIdProto        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	NodeId              *NodeIdProto             `protobuf:"bytes,2,opt,name=nodeId" json:"nodeId,omitempty"`
	NodeHttpAddress     *string                  `protobuf:"bytes,3,opt,name=node_http_address,json=nodeHttpAddress" json:"node_http_address,omitempty"`
	Resource            *ResourceProto           `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	Priority            *PriorityProto           `protobuf:"bytes,5,opt,name=priority" json:"priority,omitempty"`
	ContainerToken      *hadoopcommon.TokenProto `protobuf:"bytes,6,opt,name=container_token,json=containerToken" json:"container_token,omitempty"`
	ExecutionType       *ExecutionTypeProto      `protobuf:"varint,7,opt,name=execution_type,json=executionType,enum=hadoop.yarn.ExecutionTypeProto,def=1" json:"execution_type,omitempty"`
	AllocationRequestId *int64                   `protobuf:"varint,8,opt,name=allocation_request_id,json=allocationRequestId,def=-1" json:"allocation_request_id,omitempty"`
	Version             *int32                   `protobuf:"varint,9,opt,name=version,def=0" json:"version,omitempty"`
	AllocationTags      []string                 `protobuf:"bytes,10,rep,name=allocation_tags,json=allocationTags" json:"allocation_tags,omitempty"`
}

// Default values for ContainerProto fields.
const (
	Default_ContainerProto_ExecutionType       = ExecutionTypeProto_GUARANTEED
	Default_ContainerProto_AllocationRequestId = int64(-1)
	Default_ContainerProto_Version             = int32(0)
)

func (x *ContainerProto) Reset() {
	*x = ContainerProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerProto) ProtoMessage() {}

func (x *ContainerProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerProto.ProtoReflect.Descriptor instead.
func (*ContainerProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{13}
}

func (x *ContainerProto) GetId() *ContainerIdProto {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ContainerProto) GetNodeId() *NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *ContainerProto) GetNodeHttpAddress() string {
	if x != nil && x.NodeHttpAddress != nil {
		return *x.NodeHttpAddress
	}
	return ""
}

func (x *ContainerProto) GetResource() *ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ContainerProto) GetPriority() *PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ContainerProto) GetContainerToken() *hadoopcommon.TokenProto {
	if x != nil {
		return x.ContainerToken
	}
	return nil
}

func (x *ContainerProto) GetExecutionType() ExecutionTypeProto {
	if x != nil && x.ExecutionType != nil {
		return *x.ExecutionType
	}
	return Default_ContainerProto_ExecutionType
}

func (x *ContainerProto) GetAllocationRequestId() int64 {
	if x != nil && x.AllocationRequestId != nil {
		return *x.AllocationRequestId
	}
	return Default_ContainerProto_AllocationRequestId
}

func (x *ContainerProto) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_ContainerProto_Version
}

func (x *ContainerProto) GetAllocationTags() []string {
	if x != nil {
		return x.AllocationTags
	}
	return nil
}

type ContainerReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId         *ContainerIdProto    `protobuf:"bytes,1,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	Resource            *ResourceProto       `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
	NodeId              *NodeIdProto         `protobuf:"bytes,3,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Priority            *PriorityProto       `protobuf:"bytes,4,opt,name=priority" json:"priority,omitempty"`
	CreationTime        *int64               `protobuf:"varint,5,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	FinishTime          *int64               `protobuf:"varint,6,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	DiagnosticsInfo     *string              `protobuf:"bytes,7,opt,name=diagnostics_info,json=diagnosticsInfo,def=N/A" json:"diagnostics_info,omitempty"`
	LogUrl              *string              `protobuf:"bytes,8,opt,name=log_url,json=logUrl" json:"log_url,omitempty"`
	ContainerExitStatus *int32               `protobuf:"varint,9,opt,name=container_exit_status,json=containerExitStatus" json:"container_exit_status,omitempty"`
	ContainerState      *ContainerStateProto `protobuf:"varint,10,opt,name=container_state,json=containerState,enum=hadoop.yarn.ContainerStateProto" json:"container_state,omitempty"`
	NodeHttpAddress     *string              `protobuf:"bytes,11,opt,name=node_http_address,json=nodeHttpAddress" json:"node_http_address,omitempty"`
	ExecutionType       *ExecutionTypeProto  `protobuf:"varint,12,opt,name=executionType,enum=hadoop.yarn.ExecutionTypeProto,def=1" json:"executionType,omitempty"`
}

// Default values for ContainerReportProto fields.
const (
	Default_ContainerReportProto_DiagnosticsInfo = string("N/A")
	Default_ContainerReportProto_ExecutionType   = ExecutionTypeProto_GUARANTEED
)

func (x *ContainerReportProto) Reset() {
	*x = ContainerReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerReportProto) ProtoMessage() {}

func (x *ContainerReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerReportProto.ProtoReflect.Descriptor instead.
func (*ContainerReportProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{14}
}

func (x *ContainerReportProto) GetContainerId() *ContainerIdProto {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *ContainerReportProto) GetResource() *ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ContainerReportProto) GetNodeId() *NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *ContainerReportProto) GetPriority() *PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ContainerReportProto) GetCreationTime() int64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *ContainerReportProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ContainerReportProto) GetDiagnosticsInfo() string {
	if x != nil && x.DiagnosticsInfo != nil {
		return *x.DiagnosticsInfo
	}
	return Default_ContainerReportProto_DiagnosticsInfo
}

func (x *ContainerReportProto) GetLogUrl() string {
	if x != nil && x.LogUrl != nil {
		return *x.LogUrl
	}
	return ""
}

func (x *ContainerReportProto) GetContainerExitStatus() int32 {
	if x != nil && x.ContainerExitStatus != nil {
		return *x.ContainerExitStatus
	}
	return 0
}

func (x *ContainerReportProto) GetContainerState() ContainerStateProto {
	if x != nil && x.ContainerState != nil {
		return *x.ContainerState
	}
	return ContainerStateProto_C_NEW
}

func (x *ContainerReportProto) GetNodeHttpAddress() string {
	if x != nil && x.NodeHttpAddress != nil {
		return *x.NodeHttpAddress
	}
	return ""
}

func (x *ContainerReportProto) GetExecutionType() ExecutionTypeProto {
	if x != nil && x.ExecutionType != nil {
		return *x.ExecutionType
	}
	return Default_ContainerReportProto_ExecutionType
}

type URLProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scheme   *string `protobuf:"bytes,1,opt,name=scheme" json:"scheme,omitempty"`
	Host     *string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port     *int32  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	File     *string `protobuf:"bytes,4,opt,name=file" json:"file,omitempty"`
	UserInfo *string `protobuf:"bytes,5,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (x *URLProto) Reset() {
	*x = URLProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLProto) ProtoMessage() {}

func (x *URLProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLProto.ProtoReflect.Descriptor instead.
func (*URLProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{15}
}

func (x *URLProto) GetScheme() string {
	if x != nil && x.Scheme != nil {
		return *x.Scheme
	}
	return ""
}

func (x *URLProto) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *URLProto) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *URLProto) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

func (x *URLProto) GetUserInfo() string {
	if x != nil && x.UserInfo != nil {
		return *x.UserInfo
	}
	return ""
}

type LocalResourceProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource                      *URLProto                     `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	Size                          *int64                        `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Timestamp                     *int64                        `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Type                          *LocalResourceTypeProto       `protobuf:"varint,4,opt,name=type,enum=hadoop.yarn.LocalResourceTypeProto" json:"type,omitempty"`
	Visibility                    *LocalResourceVisibilityProto `protobuf:"varint,5,opt,name=visibility,enum=hadoop.yarn.LocalResourceVisibilityProto" json:"visibility,omitempty"`
	Pattern                       *string                       `protobuf:"bytes,6,opt,name=pattern" json:"pattern,omitempty"`
	ShouldBeUploadedToSharedCache *bool                         `protobuf:"varint,7,opt,name=should_be_uploaded_to_shared_cache,json=shouldBeUploadedToSharedCache" json:"should_be_uploaded_to_shared_cache,omitempty"`
}

func (x *LocalResourceProto) Reset() {
	*x = LocalResourceProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalResourceProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalResourceProto) ProtoMessage() {}

func (x *LocalResourceProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalResourceProto.ProtoReflect.Descriptor instead.
func (*LocalResourceProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{16}
}

func (x *LocalResourceProto) GetResource() *URLProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *LocalResourceProto) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *LocalResourceProto) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *LocalResourceProto) GetType() LocalResourceTypeProto {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return LocalResourceTypeProto_ARCHIVE
}

func (x *LocalResourceProto) GetVisibility() LocalResourceVisibilityProto {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return LocalResourceVisibilityProto_PUBLIC
}

func (x *LocalResourceProto) GetPattern() string {
	if x != nil && x.Pattern != nil {
		return *x.Pattern
	}
	return ""
}

func (x *LocalResourceProto) GetShouldBeUploadedToSharedCache() bool {
	if x != nil && x.ShouldBeUploadedToSharedCache != nil {
		return *x.ShouldBeUploadedToSharedCache
	}
	return false
}

type StringLongMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value *int64  `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
}

func (x *StringLongMapProto) Reset() {
	*x = StringLongMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringLongMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringLongMapProto) ProtoMessage() {}

func (x *StringLongMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringLongMapProto.ProtoReflect.Descriptor instead.
func (*StringLongMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{17}
}

func (x *StringLongMapProto) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *StringLongMapProto) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ApplicationResourceUsageReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumUsedContainers                    *int32                `protobuf:"varint,1,opt,name=num_used_containers,json=numUsedContainers" json:"num_used_containers,omitempty"`
	NumReservedContainers                *int32                `protobuf:"varint,2,opt,name=num_reserved_containers,json=numReservedContainers" json:"num_reserved_containers,omitempty"`
	UsedResources                        *ResourceProto        `protobuf:"bytes,3,opt,name=used_resources,json=usedResources" json:"used_resources,omitempty"`
	ReservedResources                    *ResourceProto        `protobuf:"bytes,4,opt,name=reserved_resources,json=reservedResources" json:"reserved_resources,omitempty"`
	NeededResources                      *ResourceProto        `protobuf:"bytes,5,opt,name=needed_resources,json=neededResources" json:"needed_resources,omitempty"`
	MemorySeconds                        *int64                `protobuf:"varint,6,opt,name=memory_seconds,json=memorySeconds" json:"memory_seconds,omitempty"`
	VcoreSeconds                         *int64                `protobuf:"varint,7,opt,name=vcore_seconds,json=vcoreSeconds" json:"vcore_seconds,omitempty"`
	QueueUsagePercentage                 *float32              `protobuf:"fixed32,8,opt,name=queue_usage_percentage,json=queueUsagePercentage" json:"queue_usage_percentage,omitempty"`
	ClusterUsagePercentage               *float32              `protobuf:"fixed32,9,opt,name=cluster_usage_percentage,json=clusterUsagePercentage" json:"cluster_usage_percentage,omitempty"`
	PreemptedMemorySeconds               *int64                `protobuf:"varint,10,opt,name=preempted_memory_seconds,json=preemptedMemorySeconds" json:"preempted_memory_seconds,omitempty"`
	PreemptedVcoreSeconds                *int64                `protobuf:"varint,11,opt,name=preempted_vcore_seconds,json=preemptedVcoreSeconds" json:"preempted_vcore_seconds,omitempty"`
	ApplicationResourceUsageMap          []*StringLongMapProto `protobuf:"bytes,12,rep,name=application_resource_usage_map,json=applicationResourceUsageMap" json:"application_resource_usage_map,omitempty"`
	ApplicationPreemptedResourceUsageMap []*StringLongMapProto `protobuf:"bytes,13,rep,name=application_preempted_resource_usage_map,json=applicationPreemptedResourceUsageMap" json:"application_preempted_resource_usage_map,omitempty"`
}

func (x *ApplicationResourceUsageReportProto) Reset() {
	*x = ApplicationResourceUsageReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationResourceUsageReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationResourceUsageReportProto) ProtoMessage() {}

func (x *ApplicationResourceUsageReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationResourceUsageReportProto.ProtoReflect.Descriptor instead.
func (*ApplicationResourceUsageReportProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{18}
}

func (x *ApplicationResourceUsageReportProto) GetNumUsedContainers() int32 {
	if x != nil && x.NumUsedContainers != nil {
		return *x.NumUsedContainers
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetNumReservedContainers() int32 {
	if x != nil && x.NumReservedContainers != nil {
		return *x.NumReservedContainers
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetUsedResources() *ResourceProto {
	if x != nil {
		return x.UsedResources
	}
	return nil
}

func (x *ApplicationResourceUsageReportProto) GetReservedResources() *ResourceProto {
	if x != nil {
		return x.ReservedResources
	}
	return nil
}

func (x *ApplicationResourceUsageReportProto) GetNeededResources() *ResourceProto {
	if x != nil {
		return x.NeededResources
	}
	return nil
}

func (x *ApplicationResourceUsageReportProto) GetMemorySeconds() int64 {
	if x != nil && x.MemorySeconds != nil {
		return *x.MemorySeconds
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetVcoreSeconds() int64 {
	if x != nil && x.VcoreSeconds != nil {
		return *x.VcoreSeconds
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetQueueUsagePercentage() float32 {
	if x != nil && x.QueueUsagePercentage != nil {
		return *x.QueueUsagePercentage
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetClusterUsagePercentage() float32 {
	if x != nil && x.ClusterUsagePercentage != nil {
		return *x.ClusterUsagePercentage
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetPreemptedMemorySeconds() int64 {
	if x != nil && x.PreemptedMemorySeconds != nil {
		return *x.PreemptedMemorySeconds
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetPreemptedVcoreSeconds() int64 {
	if x != nil && x.PreemptedVcoreSeconds != nil {
		return *x.PreemptedVcoreSeconds
	}
	return 0
}

func (x *ApplicationResourceUsageReportProto) GetApplicationResourceUsageMap() []*StringLongMapProto {
	if x != nil {
		return x.ApplicationResourceUsageMap
	}
	return nil
}

func (x *ApplicationResourceUsageReportProto) GetApplicationPreemptedResourceUsageMap() []*StringLongMapProto {
	if x != nil {
		return x.ApplicationPreemptedResourceUsageMap
	}
	return nil
}

type ApplicationReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId               *ApplicationIdProto                  `protobuf:"bytes,1,opt,name=applicationId" json:"applicationId,omitempty"`
	User                        *string                              `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Queue                       *string                              `protobuf:"bytes,3,opt,name=queue" json:"queue,omitempty"`
	Name                        *string                              `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Host                        *string                              `protobuf:"bytes,5,opt,name=host" json:"host,omitempty"`
	RpcPort                     *int32                               `protobuf:"varint,6,opt,name=rpc_port,json=rpcPort" json:"rpc_port,omitempty"`
	ClientToAmToken             *hadoopcommon.TokenProto             `protobuf:"bytes,7,opt,name=client_to_am_token,json=clientToAmToken" json:"client_to_am_token,omitempty"`
	YarnApplicationState        *YarnApplicationStateProto           `protobuf:"varint,8,opt,name=yarn_application_state,json=yarnApplicationState,enum=hadoop.yarn.YarnApplicationStateProto" json:"yarn_application_state,omitempty"`
	TrackingUrl                 *string                              `protobuf:"bytes,9,opt,name=trackingUrl" json:"trackingUrl,omitempty"`
	Diagnostics                 *string                              `protobuf:"bytes,10,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	StartTime                   *int64                               `protobuf:"varint,11,opt,name=startTime" json:"startTime,omitempty"`
	FinishTime                  *int64                               `protobuf:"varint,12,opt,name=finishTime" json:"finishTime,omitempty"`
	FinalApplicationStatus      *FinalApplicationStatusProto         `protobuf:"varint,13,opt,name=final_application_status,json=finalApplicationStatus,enum=hadoop.yarn.FinalApplicationStatusProto" json:"final_application_status,omitempty"`
	AppResource_Usage           *ApplicationResourceUsageReportProto `protobuf:"bytes,14,opt,name=app_resource_Usage,json=appResourceUsage" json:"app_resource_Usage,omitempty"`
	OriginalTrackingUrl         *string                              `protobuf:"bytes,15,opt,name=originalTrackingUrl" json:"originalTrackingUrl,omitempty"`
	CurrentApplicationAttemptId *ApplicationAttemptIdProto           `protobuf:"bytes,16,opt,name=currentApplicationAttemptId" json:"currentApplicationAttemptId,omitempty"`
	Progress                    *float32                             `protobuf:"fixed32,17,opt,name=progress" json:"progress,omitempty"`
	ApplicationType             *string                              `protobuf:"bytes,18,opt,name=applicationType" json:"applicationType,omitempty"`
	AmRmToken                   *hadoopcommon.TokenProto             `protobuf:"bytes,19,opt,name=am_rm_token,json=amRmToken" json:"am_rm_token,omitempty"`
	ApplicationTags             []string                             `protobuf:"bytes,20,rep,name=applicationTags" json:"applicationTags,omitempty"`
	LogAggregationStatus        *LogAggregationStatusProto           `protobuf:"varint,21,opt,name=log_aggregation_status,json=logAggregationStatus,enum=hadoop.yarn.LogAggregationStatusProto" json:"log_aggregation_status,omitempty"`
	UnmanagedApplication        *bool                                `protobuf:"varint,22,opt,name=unmanaged_application,json=unmanagedApplication,def=0" json:"unmanaged_application,omitempty"`
	Priority                    *PriorityProto                       `protobuf:"bytes,23,opt,name=priority" json:"priority,omitempty"`
	AppNodeLabelExpression      *string                              `protobuf:"bytes,24,opt,name=appNodeLabelExpression" json:"appNodeLabelExpression,omitempty"`
	AmNodeLabelExpression       *string                              `protobuf:"bytes,25,opt,name=amNodeLabelExpression" json:"amNodeLabelExpression,omitempty"`
	AppTimeouts                 []*AppTimeoutsMapProto               `protobuf:"bytes,26,rep,name=appTimeouts" json:"appTimeouts,omitempty"`
	LaunchTime                  *int64                               `protobuf:"varint,27,opt,name=launchTime" json:"launchTime,omitempty"`
	SubmitTime                  *int64                               `protobuf:"varint,28,opt,name=submitTime" json:"submitTime,omitempty"`
}

// Default values for ApplicationReportProto fields.
const (
	Default_ApplicationReportProto_Diagnostics          = string("N/A")
	Default_ApplicationReportProto_UnmanagedApplication = bool(false)
)

func (x *ApplicationReportProto) Reset() {
	*x = ApplicationReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationReportProto) ProtoMessage() {}

func (x *ApplicationReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationReportProto.ProtoReflect.Descriptor instead.
func (*ApplicationReportProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{19}
}

func (x *ApplicationReportProto) GetApplicationId() *ApplicationIdProto {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *ApplicationReportProto) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *ApplicationReportProto) GetQueue() string {
	if x != nil && x.Queue != nil {
		return *x.Queue
	}
	return ""
}

func (x *ApplicationReportProto) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ApplicationReportProto) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *ApplicationReportProto) GetRpcPort() int32 {
	if x != nil && x.RpcPort != nil {
		return *x.RpcPort
	}
	return 0
}

func (x *ApplicationReportProto) GetClientToAmToken() *hadoopcommon.TokenProto {
	if x != nil {
		return x.ClientToAmToken
	}
	return nil
}

func (x *ApplicationReportProto) GetYarnApplicationState() YarnApplicationStateProto {
	if x != nil && x.YarnApplicationState != nil {
		return *x.YarnApplicationState
	}
	return YarnApplicationStateProto_NEW
}

func (x *ApplicationReportProto) GetTrackingUrl() string {
	if x != nil && x.TrackingUrl != nil {
		return *x.TrackingUrl
	}
	return ""
}

func (x *ApplicationReportProto) GetDiagnostics() string {
	if x != nil && x.Diagnostics != nil {
		return *x.Diagnostics
	}
	return Default_ApplicationReportProto_Diagnostics
}

func (x *ApplicationReportProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ApplicationReportProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ApplicationReportProto) GetFinalApplicationStatus() FinalApplicationStatusProto {
	if x != nil && x.FinalApplicationStatus != nil {
		return *x.FinalApplicationStatus
	}
	return FinalApplicationStatusProto_APP_UNDEFINED
}

func (x *ApplicationReportProto) GetAppResource_Usage() *ApplicationResourceUsageReportProto {
	if x != nil {
		return x.AppResource_Usage
	}
	return nil
}

func (x *ApplicationReportProto) GetOriginalTrackingUrl() string {
	if x != nil && x.OriginalTrackingUrl != nil {
		return *x.OriginalTrackingUrl
	}
	return ""
}

func (x *ApplicationReportProto) GetCurrentApplicationAttemptId() *ApplicationAttemptIdProto {
	if x != nil {
		return x.CurrentApplicationAttemptId
	}
	return nil
}

func (x *ApplicationReportProto) GetProgress() float32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *ApplicationReportProto) GetApplicationType() string {
	if x != nil && x.ApplicationType != nil {
		return *x.ApplicationType
	}
	return ""
}

func (x *ApplicationReportProto) GetAmRmToken() *hadoopcommon.TokenProto {
	if x != nil {
		return x.AmRmToken
	}
	return nil
}

func (x *ApplicationReportProto) GetApplicationTags() []string {
	if x != nil {
		return x.ApplicationTags
	}
	return nil
}

func (x *ApplicationReportProto) GetLogAggregationStatus() LogAggregationStatusProto {
	if x != nil && x.LogAggregationStatus != nil {
		return *x.LogAggregationStatus
	}
	return LogAggregationStatusProto_LOG_DISABLED
}

func (x *ApplicationReportProto) GetUnmanagedApplication() bool {
	if x != nil && x.UnmanagedApplication != nil {
		return *x.UnmanagedApplication
	}
	return Default_ApplicationReportProto_UnmanagedApplication
}

func (x *ApplicationReportProto) GetPriority() *PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ApplicationReportProto) GetAppNodeLabelExpression() string {
	if x != nil && x.AppNodeLabelExpression != nil {
		return *x.AppNodeLabelExpression
	}
	return ""
}

func (x *ApplicationReportProto) GetAmNodeLabelExpression() string {
	if x != nil && x.AmNodeLabelExpression != nil {
		return *x.AmNodeLabelExpression
	}
	return ""
}

func (x *ApplicationReportProto) GetAppTimeouts() []*AppTimeoutsMapProto {
	if x != nil {
		return x.AppTimeouts
	}
	return nil
}

func (x *ApplicationReportProto) GetLaunchTime() int64 {
	if x != nil && x.LaunchTime != nil {
		return *x.LaunchTime
	}
	return 0
}

func (x *ApplicationReportProto) GetSubmitTime() int64 {
	if x != nil && x.SubmitTime != nil {
		return *x.SubmitTime
	}
	return 0
}

type AppTimeoutsMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationTimeoutType *ApplicationTimeoutTypeProto `protobuf:"varint,1,opt,name=application_timeout_type,json=applicationTimeoutType,enum=hadoop.yarn.ApplicationTimeoutTypeProto" json:"application_timeout_type,omitempty"`
	ApplicationTimeout     *ApplicationTimeoutProto     `protobuf:"bytes,2,opt,name=application_timeout,json=applicationTimeout" json:"application_timeout,omitempty"`
}

func (x *AppTimeoutsMapProto) Reset() {
	*x = AppTimeoutsMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTimeoutsMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTimeoutsMapProto) ProtoMessage() {}

func (x *AppTimeoutsMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTimeoutsMapProto.ProtoReflect.Descriptor instead.
func (*AppTimeoutsMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{20}
}

func (x *AppTimeoutsMapProto) GetApplicationTimeoutType() ApplicationTimeoutTypeProto {
	if x != nil && x.ApplicationTimeoutType != nil {
		return *x.ApplicationTimeoutType
	}
	return ApplicationTimeoutTypeProto_APP_TIMEOUT_LIFETIME
}

func (x *AppTimeoutsMapProto) GetApplicationTimeout() *ApplicationTimeoutProto {
	if x != nil {
		return x.ApplicationTimeout
	}
	return nil
}

type ApplicationTimeoutProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationTimeoutType *ApplicationTimeoutTypeProto `protobuf:"varint,1,req,name=application_timeout_type,json=applicationTimeoutType,enum=hadoop.yarn.ApplicationTimeoutTypeProto" json:"application_timeout_type,omitempty"`
	ExpireTime             *string                      `protobuf:"bytes,2,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
	RemainingTime          *int64                       `protobuf:"varint,3,opt,name=remaining_time,json=remainingTime" json:"remaining_time,omitempty"`
}

func (x *ApplicationTimeoutProto) Reset() {
	*x = ApplicationTimeoutProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationTimeoutProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationTimeoutProto) ProtoMessage() {}

func (x *ApplicationTimeoutProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationTimeoutProto.ProtoReflect.Descriptor instead.
func (*ApplicationTimeoutProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{21}
}

func (x *ApplicationTimeoutProto) GetApplicationTimeoutType() ApplicationTimeoutTypeProto {
	if x != nil && x.ApplicationTimeoutType != nil {
		return *x.ApplicationTimeoutType
	}
	return ApplicationTimeoutTypeProto_APP_TIMEOUT_LIFETIME
}

func (x *ApplicationTimeoutProto) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *ApplicationTimeoutProto) GetRemainingTime() int64 {
	if x != nil && x.RemainingTime != nil {
		return *x.RemainingTime
	}
	return 0
}

type ApplicationAttemptReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationAttemptId        *ApplicationAttemptIdProto        `protobuf:"bytes,1,opt,name=application_attempt_id,json=applicationAttemptId" json:"application_attempt_id,omitempty"`
	Host                        *string                           `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	RpcPort                     *int32                            `protobuf:"varint,3,opt,name=rpc_port,json=rpcPort" json:"rpc_port,omitempty"`
	TrackingUrl                 *string                           `protobuf:"bytes,4,opt,name=tracking_url,json=trackingUrl" json:"tracking_url,omitempty"`
	Diagnostics                 *string                           `protobuf:"bytes,5,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	YarnApplicationAttemptState *YarnApplicationAttemptStateProto `protobuf:"varint,6,opt,name=yarn_application_attempt_state,json=yarnApplicationAttemptState,enum=hadoop.yarn.YarnApplicationAttemptStateProto" json:"yarn_application_attempt_state,omitempty"`
	AmContainerId               *ContainerIdProto                 `protobuf:"bytes,7,opt,name=am_container_id,json=amContainerId" json:"am_container_id,omitempty"`
	OriginalTrackingUrl         *string                           `protobuf:"bytes,8,opt,name=original_tracking_url,json=originalTrackingUrl" json:"original_tracking_url,omitempty"`
	StartTime                   *int64                            `protobuf:"varint,9,opt,name=startTime" json:"startTime,omitempty"`
	FinishTime                  *int64                            `protobuf:"varint,10,opt,name=finishTime" json:"finishTime,omitempty"`
}

// Default values for ApplicationAttemptReportProto fields.
const (
	Default_ApplicationAttemptReportProto_Diagnostics = string("N/A")
)

func (x *ApplicationAttemptReportProto) Reset() {
	*x = ApplicationAttemptReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttemptReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttemptReportProto) ProtoMessage() {}

func (x *ApplicationAttemptReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttemptReportProto.ProtoReflect.Descriptor instead.
func (*ApplicationAttemptReportProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{22}
}

func (x *ApplicationAttemptReportProto) GetApplicationAttemptId() *ApplicationAttemptIdProto {
	if x != nil {
		return x.ApplicationAttemptId
	}
	return nil
}

func (x *ApplicationAttemptReportProto) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *ApplicationAttemptReportProto) GetRpcPort() int32 {
	if x != nil && x.RpcPort != nil {
		return *x.RpcPort
	}
	return 0
}

func (x *ApplicationAttemptReportProto) GetTrackingUrl() string {
	if x != nil && x.TrackingUrl != nil {
		return *x.TrackingUrl
	}
	return ""
}

func (x *ApplicationAttemptReportProto) GetDiagnostics() string {
	if x != nil && x.Diagnostics != nil {
		return *x.Diagnostics
	}
	return Default_ApplicationAttemptReportProto_Diagnostics
}

func (x *ApplicationAttemptReportProto) GetYarnApplicationAttemptState() YarnApplicationAttemptStateProto {
	if x != nil && x.YarnApplicationAttemptState != nil {
		return *x.YarnApplicationAttemptState
	}
	return YarnApplicationAttemptStateProto_APP_ATTEMPT_NEW
}

func (x *ApplicationAttemptReportProto) GetAmContainerId() *ContainerIdProto {
	if x != nil {
		return x.AmContainerId
	}
	return nil
}

func (x *ApplicationAttemptReportProto) GetOriginalTrackingUrl() string {
	if x != nil && x.OriginalTrackingUrl != nil {
		return *x.OriginalTrackingUrl
	}
	return ""
}

func (x *ApplicationAttemptReportProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ApplicationAttemptReportProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

type NodeIdProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port *int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (x *NodeIdProto) Reset() {
	*x = NodeIdProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeIdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeIdProto) ProtoMessage() {}

func (x *NodeIdProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeIdProto.ProtoReflect.Descriptor instead.
func (*NodeIdProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{23}
}

func (x *NodeIdProto) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *NodeIdProto) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

type NodeReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId                 *NodeIdProto              `protobuf:"bytes,1,opt,name=nodeId" json:"nodeId,omitempty"`
	HttpAddress            *string                   `protobuf:"bytes,2,opt,name=httpAddress" json:"httpAddress,omitempty"`
	RackName               *string                   `protobuf:"bytes,3,opt,name=rackName" json:"rackName,omitempty"`
	Used                   *ResourceProto            `protobuf:"bytes,4,opt,name=used" json:"used,omitempty"`
	Capability             *ResourceProto            `protobuf:"bytes,5,opt,name=capability" json:"capability,omitempty"`
	NumContainers          *int32                    `protobuf:"varint,6,opt,name=numContainers" json:"numContainers,omitempty"`
	NodeState              *NodeStateProto           `protobuf:"varint,7,opt,name=node_state,json=nodeState,enum=hadoop.yarn.NodeStateProto" json:"node_state,omitempty"`
	HealthReport           *string                   `protobuf:"bytes,8,opt,name=health_report,json=healthReport" json:"health_report,omitempty"`
	LastHealthReportTime   *int64                    `protobuf:"varint,9,opt,name=last_health_report_time,json=lastHealthReportTime" json:"last_health_report_time,omitempty"`
	NodeLabels             []string                  `protobuf:"bytes,10,rep,name=node_labels,json=nodeLabels" json:"node_labels,omitempty"`
	ContainersUtilization  *ResourceUtilizationProto `protobuf:"bytes,11,opt,name=containers_utilization,json=containersUtilization" json:"containers_utilization,omitempty"`
	NodeUtilization        *ResourceUtilizationProto `protobuf:"bytes,12,opt,name=node_utilization,json=nodeUtilization" json:"node_utilization,omitempty"`
	DecommissioningTimeout *uint32                   `protobuf:"varint,13,opt,name=decommissioning_timeout,json=decommissioningTimeout" json:"decommissioning_timeout,omitempty"`
	NodeUpdateType         *NodeUpdateTypeProto      `protobuf:"varint,14,opt,name=node_update_type,json=nodeUpdateType,enum=hadoop.yarn.NodeUpdateTypeProto" json:"node_update_type,omitempty"`
	NodeAttributes         []*NodeAttributeProto     `protobuf:"bytes,15,rep,name=node_attributes,json=nodeAttributes" json:"node_attributes,omitempty"`
}

func (x *NodeReportProto) Reset() {
	*x = NodeReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeReportProto) ProtoMessage() {}

func (x *NodeReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeReportProto.ProtoReflect.Descriptor instead.
func (*NodeReportProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{24}
}

func (x *NodeReportProto) GetNodeId() *NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *NodeReportProto) GetHttpAddress() string {
	if x != nil && x.HttpAddress != nil {
		return *x.HttpAddress
	}
	return ""
}

func (x *NodeReportProto) GetRackName() string {
	if x != nil && x.RackName != nil {
		return *x.RackName
	}
	return ""
}

func (x *NodeReportProto) GetUsed() *ResourceProto {
	if x != nil {
		return x.Used
	}
	return nil
}

func (x *NodeReportProto) GetCapability() *ResourceProto {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *NodeReportProto) GetNumContainers() int32 {
	if x != nil && x.NumContainers != nil {
		return *x.NumContainers
	}
	return 0
}

func (x *NodeReportProto) GetNodeState() NodeStateProto {
	if x != nil && x.NodeState != nil {
		return *x.NodeState
	}
	return NodeStateProto_NS_NEW
}

func (x *NodeReportProto) GetHealthReport() string {
	if x != nil && x.HealthReport != nil {
		return *x.HealthReport
	}
	return ""
}

func (x *NodeReportProto) GetLastHealthReportTime() int64 {
	if x != nil && x.LastHealthReportTime != nil {
		return *x.LastHealthReportTime
	}
	return 0
}

func (x *NodeReportProto) GetNodeLabels() []string {
	if x != nil {
		return x.NodeLabels
	}
	return nil
}

func (x *NodeReportProto) GetContainersUtilization() *ResourceUtilizationProto {
	if x != nil {
		return x.ContainersUtilization
	}
	return nil
}

func (x *NodeReportProto) GetNodeUtilization() *ResourceUtilizationProto {
	if x != nil {
		return x.NodeUtilization
	}
	return nil
}

func (x *NodeReportProto) GetDecommissioningTimeout() uint32 {
	if x != nil && x.DecommissioningTimeout != nil {
		return *x.DecommissioningTimeout
	}
	return 0
}

func (x *NodeReportProto) GetNodeUpdateType() NodeUpdateTypeProto {
	if x != nil && x.NodeUpdateType != nil {
		return *x.NodeUpdateType
	}
	return NodeUpdateTypeProto_NODE_USABLE
}

func (x *NodeReportProto) GetNodeAttributes() []*NodeAttributeProto {
	if x != nil {
		return x.NodeAttributes
	}
	return nil
}

type NodeIdToLabelsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     *NodeIdProto `protobuf:"bytes,1,opt,name=nodeId" json:"nodeId,omitempty"`
	NodeLabels []string     `protobuf:"bytes,2,rep,name=nodeLabels" json:"nodeLabels,omitempty"`
}

func (x *NodeIdToLabelsProto) Reset() {
	*x = NodeIdToLabelsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeIdToLabelsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeIdToLabelsProto) ProtoMessage() {}

func (x *NodeIdToLabelsProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeIdToLabelsProto.ProtoReflect.Descriptor instead.
func (*NodeIdToLabelsProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{25}
}

func (x *NodeIdToLabelsProto) GetNodeId() *NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *NodeIdToLabelsProto) GetNodeLabels() []string {
	if x != nil {
		return x.NodeLabels
	}
	return nil
}

type LabelsToNodeIdsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeLabels *string        `protobuf:"bytes,1,opt,name=nodeLabels" json:"nodeLabels,omitempty"`
	NodeId     []*NodeIdProto `protobuf:"bytes,2,rep,name=nodeId" json:"nodeId,omitempty"`
}

func (x *LabelsToNodeIdsProto) Reset() {
	*x = LabelsToNodeIdsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelsToNodeIdsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelsToNodeIdsProto) ProtoMessage() {}

func (x *LabelsToNodeIdsProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelsToNodeIdsProto.ProtoReflect.Descriptor instead.
func (*LabelsToNodeIdsProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{26}
}

func (x *LabelsToNodeIdsProto) GetNodeLabels() string {
	if x != nil && x.NodeLabels != nil {
		return *x.NodeLabels
	}
	return ""
}

func (x *LabelsToNodeIdsProto) GetNodeId() []*NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type NodeLabelProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	IsExclusive *bool   `protobuf:"varint,2,opt,name=isExclusive,def=1" json:"isExclusive,omitempty"`
}

// Default values for NodeLabelProto fields.
const (
	Default_NodeLabelProto_IsExclusive = bool(true)
)

func (x *NodeLabelProto) Reset() {
	*x = NodeLabelProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeLabelProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLabelProto) ProtoMessage() {}

func (x *NodeLabelProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLabelProto.ProtoReflect.Descriptor instead.
func (*NodeLabelProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{27}
}

func (x *NodeLabelProto) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NodeLabelProto) GetIsExclusive() bool {
	if x != nil && x.IsExclusive != nil {
		return *x.IsExclusive
	}
	return Default_NodeLabelProto_IsExclusive
}

type NodeAttributeKeyProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributePrefix *string `protobuf:"bytes,1,opt,name=attributePrefix,def=rm.yarn.io" json:"attributePrefix,omitempty"`
	AttributeName   *string `protobuf:"bytes,2,req,name=attributeName" json:"attributeName,omitempty"`
}

// Default values for NodeAttributeKeyProto fields.
const (
	Default_NodeAttributeKeyProto_AttributePrefix = string("rm.yarn.io")
)

func (x *NodeAttributeKeyProto) Reset() {
	*x = NodeAttributeKeyProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAttributeKeyProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAttributeKeyProto) ProtoMessage() {}

func (x *NodeAttributeKeyProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAttributeKeyProto.ProtoReflect.Descriptor instead.
func (*NodeAttributeKeyProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{28}
}

func (x *NodeAttributeKeyProto) GetAttributePrefix() string {
	if x != nil && x.AttributePrefix != nil {
		return *x.AttributePrefix
	}
	return Default_NodeAttributeKeyProto_AttributePrefix
}

func (x *NodeAttributeKeyProto) GetAttributeName() string {
	if x != nil && x.AttributeName != nil {
		return *x.AttributeName
	}
	return ""
}

type NodeAttributeProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeKey   *NodeAttributeKeyProto  `protobuf:"bytes,1,req,name=attributeKey" json:"attributeKey,omitempty"`
	AttributeType  *NodeAttributeTypeProto `protobuf:"varint,2,opt,name=attributeType,enum=hadoop.yarn.NodeAttributeTypeProto,def=1" json:"attributeType,omitempty"`
	AttributeValue *string                 `protobuf:"bytes,3,opt,name=attributeValue,def=" json:"attributeValue,omitempty"`
}

// Default values for NodeAttributeProto fields.
const (
	Default_NodeAttributeProto_AttributeType  = NodeAttributeTypeProto_STRING
	Default_NodeAttributeProto_AttributeValue = string("")
)

func (x *NodeAttributeProto) Reset() {
	*x = NodeAttributeProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAttributeProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAttributeProto) ProtoMessage() {}

func (x *NodeAttributeProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAttributeProto.ProtoReflect.Descriptor instead.
func (*NodeAttributeProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{29}
}

func (x *NodeAttributeProto) GetAttributeKey() *NodeAttributeKeyProto {
	if x != nil {
		return x.AttributeKey
	}
	return nil
}

func (x *NodeAttributeProto) GetAttributeType() NodeAttributeTypeProto {
	if x != nil && x.AttributeType != nil {
		return *x.AttributeType
	}
	return Default_NodeAttributeProto_AttributeType
}

func (x *NodeAttributeProto) GetAttributeValue() string {
	if x != nil && x.AttributeValue != nil {
		return *x.AttributeValue
	}
	return Default_NodeAttributeProto_AttributeValue
}

type NodeAttributeInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeKey  *NodeAttributeKeyProto  `protobuf:"bytes,1,req,name=attributeKey" json:"attributeKey,omitempty"`
	AttributeType *NodeAttributeTypeProto `protobuf:"varint,2,req,name=attributeType,enum=hadoop.yarn.NodeAttributeTypeProto" json:"attributeType,omitempty"`
}

func (x *NodeAttributeInfoProto) Reset() {
	*x = NodeAttributeInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAttributeInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAttributeInfoProto) ProtoMessage() {}

func (x *NodeAttributeInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAttributeInfoProto.ProtoReflect.Descriptor instead.
func (*NodeAttributeInfoProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{30}
}

func (x *NodeAttributeInfoProto) GetAttributeKey() *NodeAttributeKeyProto {
	if x != nil {
		return x.AttributeKey
	}
	return nil
}

func (x *NodeAttributeInfoProto) GetAttributeType() NodeAttributeTypeProto {
	if x != nil && x.AttributeType != nil {
		return *x.AttributeType
	}
	return NodeAttributeTypeProto_STRING
}

type NodeToAttributeValueProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname       *string `protobuf:"bytes,1,req,name=hostname" json:"hostname,omitempty"`
	AttributeValue *string `protobuf:"bytes,2,req,name=attributeValue" json:"attributeValue,omitempty"`
}

func (x *NodeToAttributeValueProto) Reset() {
	*x = NodeToAttributeValueProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeToAttributeValueProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeToAttributeValueProto) ProtoMessage() {}

func (x *NodeToAttributeValueProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeToAttributeValueProto.ProtoReflect.Descriptor instead.
func (*NodeToAttributeValueProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{31}
}

func (x *NodeToAttributeValueProto) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *NodeToAttributeValueProto) GetAttributeValue() string {
	if x != nil && x.AttributeValue != nil {
		return *x.AttributeValue
	}
	return ""
}

type AttributeToNodesProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAttribute *NodeAttributeKeyProto       `protobuf:"bytes,1,req,name=nodeAttribute" json:"nodeAttribute,omitempty"`
	NodeValueMap  []*NodeToAttributeValueProto `protobuf:"bytes,2,rep,name=nodeValueMap" json:"nodeValueMap,omitempty"`
}

func (x *AttributeToNodesProto) Reset() {
	*x = AttributeToNodesProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeToNodesProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeToNodesProto) ProtoMessage() {}

func (x *AttributeToNodesProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeToNodesProto.ProtoReflect.Descriptor instead.
func (*AttributeToNodesProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{32}
}

func (x *AttributeToNodesProto) GetNodeAttribute() *NodeAttributeKeyProto {
	if x != nil {
		return x.NodeAttribute
	}
	return nil
}

func (x *AttributeToNodesProto) GetNodeValueMap() []*NodeToAttributeValueProto {
	if x != nil {
		return x.NodeValueMap
	}
	return nil
}

type NodeToAttributesProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node           *string               `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	NodeAttributes []*NodeAttributeProto `protobuf:"bytes,2,rep,name=nodeAttributes" json:"nodeAttributes,omitempty"`
}

func (x *NodeToAttributesProto) Reset() {
	*x = NodeToAttributesProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeToAttributesProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeToAttributesProto) ProtoMessage() {}

func (x *NodeToAttributesProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeToAttributesProto.ProtoReflect.Descriptor instead.
func (*NodeToAttributesProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{33}
}

func (x *NodeToAttributesProto) GetNode() string {
	if x != nil && x.Node != nil {
		return *x.Node
	}
	return ""
}

func (x *NodeToAttributesProto) GetNodeAttributes() []*NodeAttributeProto {
	if x != nil {
		return x.NodeAttributes
	}
	return nil
}

////////////////////////////////////////////////////////////////////////
////// From AM_RM_Protocol /////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
type ResourceRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority             *PriorityProto             `protobuf:"bytes,1,opt,name=priority" json:"priority,omitempty"`
	ResourceName         *string                    `protobuf:"bytes,2,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	Capability           *ResourceProto             `protobuf:"bytes,3,opt,name=capability" json:"capability,omitempty"`
	NumContainers        *int32                     `protobuf:"varint,4,opt,name=num_containers,json=numContainers" json:"num_containers,omitempty"`
	RelaxLocality        *bool                      `protobuf:"varint,5,opt,name=relax_locality,json=relaxLocality,def=1" json:"relax_locality,omitempty"`
	NodeLabelExpression  *string                    `protobuf:"bytes,6,opt,name=node_label_expression,json=nodeLabelExpression" json:"node_label_expression,omitempty"`
	ExecutionTypeRequest *ExecutionTypeRequestProto `protobuf:"bytes,7,opt,name=execution_type_request,json=executionTypeRequest" json:"execution_type_request,omitempty"`
	AllocationRequestId  *int64                     `protobuf:"varint,8,opt,name=allocation_request_id,json=allocationRequestId,def=-1" json:"allocation_request_id,omitempty"`
}

// Default values for ResourceRequestProto fields.
const (
	Default_ResourceRequestProto_RelaxLocality       = bool(true)
	Default_ResourceRequestProto_AllocationRequestId = int64(-1)
)

func (x *ResourceRequestProto) Reset() {
	*x = ResourceRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequestProto) ProtoMessage() {}

func (x *ResourceRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequestProto.ProtoReflect.Descriptor instead.
func (*ResourceRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{34}
}

func (x *ResourceRequestProto) GetPriority() *PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ResourceRequestProto) GetResourceName() string {
	if x != nil && x.ResourceName != nil {
		return *x.ResourceName
	}
	return ""
}

func (x *ResourceRequestProto) GetCapability() *ResourceProto {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *ResourceRequestProto) GetNumContainers() int32 {
	if x != nil && x.NumContainers != nil {
		return *x.NumContainers
	}
	return 0
}

func (x *ResourceRequestProto) GetRelaxLocality() bool {
	if x != nil && x.RelaxLocality != nil {
		return *x.RelaxLocality
	}
	return Default_ResourceRequestProto_RelaxLocality
}

func (x *ResourceRequestProto) GetNodeLabelExpression() string {
	if x != nil && x.NodeLabelExpression != nil {
		return *x.NodeLabelExpression
	}
	return ""
}

func (x *ResourceRequestProto) GetExecutionTypeRequest() *ExecutionTypeRequestProto {
	if x != nil {
		return x.ExecutionTypeRequest
	}
	return nil
}

func (x *ResourceRequestProto) GetAllocationRequestId() int64 {
	if x != nil && x.AllocationRequestId != nil {
		return *x.AllocationRequestId
	}
	return Default_ResourceRequestProto_AllocationRequestId
}

type ExecutionTypeRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionType        *ExecutionTypeProto `protobuf:"varint,1,opt,name=execution_type,json=executionType,enum=hadoop.yarn.ExecutionTypeProto,def=1" json:"execution_type,omitempty"`
	EnforceExecutionType *bool               `protobuf:"varint,2,opt,name=enforce_execution_type,json=enforceExecutionType,def=0" json:"enforce_execution_type,omitempty"`
}

// Default values for ExecutionTypeRequestProto fields.
const (
	Default_ExecutionTypeRequestProto_ExecutionType        = ExecutionTypeProto_GUARANTEED
	Default_ExecutionTypeRequestProto_EnforceExecutionType = bool(false)
)

func (x *ExecutionTypeRequestProto) Reset() {
	*x = ExecutionTypeRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionTypeRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionTypeRequestProto) ProtoMessage() {}

func (x *ExecutionTypeRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionTypeRequestProto.ProtoReflect.Descriptor instead.
func (*ExecutionTypeRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{35}
}

func (x *ExecutionTypeRequestProto) GetExecutionType() ExecutionTypeProto {
	if x != nil && x.ExecutionType != nil {
		return *x.ExecutionType
	}
	return Default_ExecutionTypeRequestProto_ExecutionType
}

func (x *ExecutionTypeRequestProto) GetEnforceExecutionType() bool {
	if x != nil && x.EnforceExecutionType != nil {
		return *x.EnforceExecutionType
	}
	return Default_ExecutionTypeRequestProto_EnforceExecutionType
}

type SchedulingRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllocationRequestId *int64                     `protobuf:"varint,1,opt,name=allocationRequestId,def=0" json:"allocationRequestId,omitempty"`
	Priority            *PriorityProto             `protobuf:"bytes,2,opt,name=priority" json:"priority,omitempty"`
	ExecutionType       *ExecutionTypeRequestProto `protobuf:"bytes,3,opt,name=executionType" json:"executionType,omitempty"`
	AllocationTags      []string                   `protobuf:"bytes,4,rep,name=allocationTags" json:"allocationTags,omitempty"`
	ResourceSizing      *ResourceSizingProto       `protobuf:"bytes,5,opt,name=resourceSizing" json:"resourceSizing,omitempty"`
	PlacementConstraint *PlacementConstraintProto  `protobuf:"bytes,6,opt,name=placementConstraint" json:"placementConstraint,omitempty"`
}

// Default values for SchedulingRequestProto fields.
const (
	Default_SchedulingRequestProto_AllocationRequestId = int64(0)
)

func (x *SchedulingRequestProto) Reset() {
	*x = SchedulingRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingRequestProto) ProtoMessage() {}

func (x *SchedulingRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingRequestProto.ProtoReflect.Descriptor instead.
func (*SchedulingRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{36}
}

func (x *SchedulingRequestProto) GetAllocationRequestId() int64 {
	if x != nil && x.AllocationRequestId != nil {
		return *x.AllocationRequestId
	}
	return Default_SchedulingRequestProto_AllocationRequestId
}

func (x *SchedulingRequestProto) GetPriority() *PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *SchedulingRequestProto) GetExecutionType() *ExecutionTypeRequestProto {
	if x != nil {
		return x.ExecutionType
	}
	return nil
}

func (x *SchedulingRequestProto) GetAllocationTags() []string {
	if x != nil {
		return x.AllocationTags
	}
	return nil
}

func (x *SchedulingRequestProto) GetResourceSizing() *ResourceSizingProto {
	if x != nil {
		return x.ResourceSizing
	}
	return nil
}

func (x *SchedulingRequestProto) GetPlacementConstraint() *PlacementConstraintProto {
	if x != nil {
		return x.PlacementConstraint
	}
	return nil
}

type ResourceSizingProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumAllocations *int32         `protobuf:"varint,1,opt,name=numAllocations" json:"numAllocations,omitempty"`
	Resources      *ResourceProto `protobuf:"bytes,2,opt,name=resources" json:"resources,omitempty"`
}

func (x *ResourceSizingProto) Reset() {
	*x = ResourceSizingProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSizingProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSizingProto) ProtoMessage() {}

func (x *ResourceSizingProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSizingProto.ProtoReflect.Descriptor instead.
func (*ResourceSizingProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{37}
}

func (x *ResourceSizingProto) GetNumAllocations() int32 {
	if x != nil && x.NumAllocations != nil {
		return *x.NumAllocations
	}
	return 0
}

func (x *ResourceSizingProto) GetResources() *ResourceProto {
	if x != nil {
		return x.Resources
	}
	return nil
}

type RejectedSchedulingRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason  *RejectionReasonProto   `protobuf:"varint,1,req,name=reason,enum=hadoop.yarn.RejectionReasonProto" json:"reason,omitempty"`
	Request *SchedulingRequestProto `protobuf:"bytes,2,req,name=request" json:"request,omitempty"`
}

func (x *RejectedSchedulingRequestProto) Reset() {
	*x = RejectedSchedulingRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectedSchedulingRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedSchedulingRequestProto) ProtoMessage() {}

func (x *RejectedSchedulingRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedSchedulingRequestProto.ProtoReflect.Descriptor instead.
func (*RejectedSchedulingRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{38}
}

func (x *RejectedSchedulingRequestProto) GetReason() RejectionReasonProto {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return RejectionReasonProto_RRP_COULD_NOT_PLACE_ON_NODE
}

func (x *RejectedSchedulingRequestProto) GetRequest() *SchedulingRequestProto {
	if x != nil {
		return x.Request
	}
	return nil
}

type PreemptionMessageProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrictContract *StrictPreemptionContractProto `protobuf:"bytes,1,opt,name=strictContract" json:"strictContract,omitempty"`
	Contract       *PreemptionContractProto       `protobuf:"bytes,2,opt,name=contract" json:"contract,omitempty"`
}

func (x *PreemptionMessageProto) Reset() {
	*x = PreemptionMessageProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreemptionMessageProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreemptionMessageProto) ProtoMessage() {}

func (x *PreemptionMessageProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreemptionMessageProto.ProtoReflect.Descriptor instead.
func (*PreemptionMessageProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{39}
}

func (x *PreemptionMessageProto) GetStrictContract() *StrictPreemptionContractProto {
	if x != nil {
		return x.StrictContract
	}
	return nil
}

func (x *PreemptionMessageProto) GetContract() *PreemptionContractProto {
	if x != nil {
		return x.Contract
	}
	return nil
}

type StrictPreemptionContractProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container []*PreemptionContainerProto `protobuf:"bytes,1,rep,name=container" json:"container,omitempty"`
}

func (x *StrictPreemptionContractProto) Reset() {
	*x = StrictPreemptionContractProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrictPreemptionContractProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrictPreemptionContractProto) ProtoMessage() {}

func (x *StrictPreemptionContractProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrictPreemptionContractProto.ProtoReflect.Descriptor instead.
func (*StrictPreemptionContractProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{40}
}

func (x *StrictPreemptionContractProto) GetContainer() []*PreemptionContainerProto {
	if x != nil {
		return x.Container
	}
	return nil
}

type PreemptionContractProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource  []*PreemptionResourceRequestProto `protobuf:"bytes,1,rep,name=resource" json:"resource,omitempty"`
	Container []*PreemptionContainerProto       `protobuf:"bytes,2,rep,name=container" json:"container,omitempty"`
}

func (x *PreemptionContractProto) Reset() {
	*x = PreemptionContractProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreemptionContractProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreemptionContractProto) ProtoMessage() {}

func (x *PreemptionContractProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreemptionContractProto.ProtoReflect.Descriptor instead.
func (*PreemptionContractProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{41}
}

func (x *PreemptionContractProto) GetResource() []*PreemptionResourceRequestProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *PreemptionContractProto) GetContainer() []*PreemptionContainerProto {
	if x != nil {
		return x.Container
	}
	return nil
}

type PreemptionContainerProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ContainerIdProto `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *PreemptionContainerProto) Reset() {
	*x = PreemptionContainerProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreemptionContainerProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreemptionContainerProto) ProtoMessage() {}

func (x *PreemptionContainerProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreemptionContainerProto.ProtoReflect.Descriptor instead.
func (*PreemptionContainerProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{42}
}

func (x *PreemptionContainerProto) GetId() *ContainerIdProto {
	if x != nil {
		return x.Id
	}
	return nil
}

type PreemptionResourceRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *ResourceRequestProto `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
}

func (x *PreemptionResourceRequestProto) Reset() {
	*x = PreemptionResourceRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreemptionResourceRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreemptionResourceRequestProto) ProtoMessage() {}

func (x *PreemptionResourceRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreemptionResourceRequestProto.ProtoReflect.Descriptor instead.
func (*PreemptionResourceRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{43}
}

func (x *PreemptionResourceRequestProto) GetResource() *ResourceRequestProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ResourceBlacklistRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlacklistAdditions []string `protobuf:"bytes,1,rep,name=blacklist_additions,json=blacklistAdditions" json:"blacklist_additions,omitempty"`
	BlacklistRemovals  []string `protobuf:"bytes,2,rep,name=blacklist_removals,json=blacklistRemovals" json:"blacklist_removals,omitempty"`
}

func (x *ResourceBlacklistRequestProto) Reset() {
	*x = ResourceBlacklistRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceBlacklistRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceBlacklistRequestProto) ProtoMessage() {}

func (x *ResourceBlacklistRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceBlacklistRequestProto.ProtoReflect.Descriptor instead.
func (*ResourceBlacklistRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{44}
}

func (x *ResourceBlacklistRequestProto) GetBlacklistAdditions() []string {
	if x != nil {
		return x.BlacklistAdditions
	}
	return nil
}

func (x *ResourceBlacklistRequestProto) GetBlacklistRemovals() []string {
	if x != nil {
		return x.BlacklistRemovals
	}
	return nil
}

////////////////////////////////////////////////////////////////////////
////// From client_RM_Protocol /////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
type ApplicationSubmissionContextProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId                           *ApplicationIdProto           `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	ApplicationName                         *string                       `protobuf:"bytes,2,opt,name=application_name,json=applicationName,def=N/A" json:"application_name,omitempty"`
	Queue                                   *string                       `protobuf:"bytes,3,opt,name=queue,def=default" json:"queue,omitempty"`
	Priority                                *PriorityProto                `protobuf:"bytes,4,opt,name=priority" json:"priority,omitempty"`
	AmContainerSpec                         *ContainerLaunchContextProto  `protobuf:"bytes,5,opt,name=am_container_spec,json=amContainerSpec" json:"am_container_spec,omitempty"`
	CancelTokensWhenComplete                *bool                         `protobuf:"varint,6,opt,name=cancel_tokens_when_complete,json=cancelTokensWhenComplete,def=1" json:"cancel_tokens_when_complete,omitempty"`
	UnmanagedAm                             *bool                         `protobuf:"varint,7,opt,name=unmanaged_am,json=unmanagedAm,def=0" json:"unmanaged_am,omitempty"`
	MaxAppAttempts                          *int32                        `protobuf:"varint,8,opt,name=maxAppAttempts,def=0" json:"maxAppAttempts,omitempty"`
	Resource                                *ResourceProto                `protobuf:"bytes,9,opt,name=resource" json:"resource,omitempty"`
	ApplicationType                         *string                       `protobuf:"bytes,10,opt,name=applicationType,def=YARN" json:"applicationType,omitempty"`
	KeepContainersAcrossApplicationAttempts *bool                         `protobuf:"varint,11,opt,name=keep_containers_across_application_attempts,json=keepContainersAcrossApplicationAttempts,def=0" json:"keep_containers_across_application_attempts,omitempty"`
	ApplicationTags                         []string                      `protobuf:"bytes,12,rep,name=applicationTags" json:"applicationTags,omitempty"`
	AttemptFailuresValidityInterval         *int64                        `protobuf:"varint,13,opt,name=attempt_failures_validity_interval,json=attemptFailuresValidityInterval,def=-1" json:"attempt_failures_validity_interval,omitempty"`
	LogAggregationContext                   *LogAggregationContextProto   `protobuf:"bytes,14,opt,name=log_aggregation_context,json=logAggregationContext" json:"log_aggregation_context,omitempty"`
	ReservationId                           *ReservationIdProto           `protobuf:"bytes,15,opt,name=reservation_id,json=reservationId" json:"reservation_id,omitempty"`
	NodeLabelExpression                     *string                       `protobuf:"bytes,16,opt,name=node_label_expression,json=nodeLabelExpression" json:"node_label_expression,omitempty"`
	AmContainerResourceRequest              []*ResourceRequestProto       `protobuf:"bytes,17,rep,name=am_container_resource_request,json=amContainerResourceRequest" json:"am_container_resource_request,omitempty"`
	ApplicationTimeouts                     []*ApplicationTimeoutMapProto `protobuf:"bytes,18,rep,name=application_timeouts,json=applicationTimeouts" json:"application_timeouts,omitempty"`
	ApplicationSchedulingProperties         []*StringStringMapProto       `protobuf:"bytes,19,rep,name=application_scheduling_properties,json=applicationSchedulingProperties" json:"application_scheduling_properties,omitempty"`
}

// Default values for ApplicationSubmissionContextProto fields.
const (
	Default_ApplicationSubmissionContextProto_ApplicationName                         = string("N/A")
	Default_ApplicationSubmissionContextProto_Queue                                   = string("default")
	Default_ApplicationSubmissionContextProto_CancelTokensWhenComplete                = bool(true)
	Default_ApplicationSubmissionContextProto_UnmanagedAm                             = bool(false)
	Default_ApplicationSubmissionContextProto_MaxAppAttempts                          = int32(0)
	Default_ApplicationSubmissionContextProto_ApplicationType                         = string("YARN")
	Default_ApplicationSubmissionContextProto_KeepContainersAcrossApplicationAttempts = bool(false)
	Default_ApplicationSubmissionContextProto_AttemptFailuresValidityInterval         = int64(-1)
)

func (x *ApplicationSubmissionContextProto) Reset() {
	*x = ApplicationSubmissionContextProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSubmissionContextProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSubmissionContextProto) ProtoMessage() {}

func (x *ApplicationSubmissionContextProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSubmissionContextProto.ProtoReflect.Descriptor instead.
func (*ApplicationSubmissionContextProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{45}
}

func (x *ApplicationSubmissionContextProto) GetApplicationId() *ApplicationIdProto {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetApplicationName() string {
	if x != nil && x.ApplicationName != nil {
		return *x.ApplicationName
	}
	return Default_ApplicationSubmissionContextProto_ApplicationName
}

func (x *ApplicationSubmissionContextProto) GetQueue() string {
	if x != nil && x.Queue != nil {
		return *x.Queue
	}
	return Default_ApplicationSubmissionContextProto_Queue
}

func (x *ApplicationSubmissionContextProto) GetPriority() *PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetAmContainerSpec() *ContainerLaunchContextProto {
	if x != nil {
		return x.AmContainerSpec
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetCancelTokensWhenComplete() bool {
	if x != nil && x.CancelTokensWhenComplete != nil {
		return *x.CancelTokensWhenComplete
	}
	return Default_ApplicationSubmissionContextProto_CancelTokensWhenComplete
}

func (x *ApplicationSubmissionContextProto) GetUnmanagedAm() bool {
	if x != nil && x.UnmanagedAm != nil {
		return *x.UnmanagedAm
	}
	return Default_ApplicationSubmissionContextProto_UnmanagedAm
}

func (x *ApplicationSubmissionContextProto) GetMaxAppAttempts() int32 {
	if x != nil && x.MaxAppAttempts != nil {
		return *x.MaxAppAttempts
	}
	return Default_ApplicationSubmissionContextProto_MaxAppAttempts
}

func (x *ApplicationSubmissionContextProto) GetResource() *ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetApplicationType() string {
	if x != nil && x.ApplicationType != nil {
		return *x.ApplicationType
	}
	return Default_ApplicationSubmissionContextProto_ApplicationType
}

func (x *ApplicationSubmissionContextProto) GetKeepContainersAcrossApplicationAttempts() bool {
	if x != nil && x.KeepContainersAcrossApplicationAttempts != nil {
		return *x.KeepContainersAcrossApplicationAttempts
	}
	return Default_ApplicationSubmissionContextProto_KeepContainersAcrossApplicationAttempts
}

func (x *ApplicationSubmissionContextProto) GetApplicationTags() []string {
	if x != nil {
		return x.ApplicationTags
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetAttemptFailuresValidityInterval() int64 {
	if x != nil && x.AttemptFailuresValidityInterval != nil {
		return *x.AttemptFailuresValidityInterval
	}
	return Default_ApplicationSubmissionContextProto_AttemptFailuresValidityInterval
}

func (x *ApplicationSubmissionContextProto) GetLogAggregationContext() *LogAggregationContextProto {
	if x != nil {
		return x.LogAggregationContext
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetReservationId() *ReservationIdProto {
	if x != nil {
		return x.ReservationId
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetNodeLabelExpression() string {
	if x != nil && x.NodeLabelExpression != nil {
		return *x.NodeLabelExpression
	}
	return ""
}

func (x *ApplicationSubmissionContextProto) GetAmContainerResourceRequest() []*ResourceRequestProto {
	if x != nil {
		return x.AmContainerResourceRequest
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetApplicationTimeouts() []*ApplicationTimeoutMapProto {
	if x != nil {
		return x.ApplicationTimeouts
	}
	return nil
}

func (x *ApplicationSubmissionContextProto) GetApplicationSchedulingProperties() []*StringStringMapProto {
	if x != nil {
		return x.ApplicationSchedulingProperties
	}
	return nil
}

type ApplicationTimeoutMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationTimeoutType *ApplicationTimeoutTypeProto `protobuf:"varint,1,opt,name=application_timeout_type,json=applicationTimeoutType,enum=hadoop.yarn.ApplicationTimeoutTypeProto" json:"application_timeout_type,omitempty"`
	Timeout                *int64                       `protobuf:"varint,2,opt,name=timeout" json:"timeout,omitempty"`
}

func (x *ApplicationTimeoutMapProto) Reset() {
	*x = ApplicationTimeoutMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationTimeoutMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationTimeoutMapProto) ProtoMessage() {}

func (x *ApplicationTimeoutMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationTimeoutMapProto.ProtoReflect.Descriptor instead.
func (*ApplicationTimeoutMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{46}
}

func (x *ApplicationTimeoutMapProto) GetApplicationTimeoutType() ApplicationTimeoutTypeProto {
	if x != nil && x.ApplicationTimeoutType != nil {
		return *x.ApplicationTimeoutType
	}
	return ApplicationTimeoutTypeProto_APP_TIMEOUT_LIFETIME
}

func (x *ApplicationTimeoutMapProto) GetTimeout() int64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

type ApplicationUpdateTimeoutMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationTimeoutType *ApplicationTimeoutTypeProto `protobuf:"varint,1,opt,name=application_timeout_type,json=applicationTimeoutType,enum=hadoop.yarn.ApplicationTimeoutTypeProto" json:"application_timeout_type,omitempty"`
	ExpireTime             *string                      `protobuf:"bytes,2,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
}

func (x *ApplicationUpdateTimeoutMapProto) Reset() {
	*x = ApplicationUpdateTimeoutMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationUpdateTimeoutMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationUpdateTimeoutMapProto) ProtoMessage() {}

func (x *ApplicationUpdateTimeoutMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationUpdateTimeoutMapProto.ProtoReflect.Descriptor instead.
func (*ApplicationUpdateTimeoutMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{47}
}

func (x *ApplicationUpdateTimeoutMapProto) GetApplicationTimeoutType() ApplicationTimeoutTypeProto {
	if x != nil && x.ApplicationTimeoutType != nil {
		return *x.ApplicationTimeoutType
	}
	return ApplicationTimeoutTypeProto_APP_TIMEOUT_LIFETIME
}

func (x *ApplicationUpdateTimeoutMapProto) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

type LogAggregationContextProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludePattern                 *string `protobuf:"bytes,1,opt,name=include_pattern,json=includePattern,def=.*" json:"include_pattern,omitempty"`
	ExcludePattern                 *string `protobuf:"bytes,2,opt,name=exclude_pattern,json=excludePattern,def=" json:"exclude_pattern,omitempty"`
	RolledLogsIncludePattern       *string `protobuf:"bytes,3,opt,name=rolled_logs_include_pattern,json=rolledLogsIncludePattern,def=" json:"rolled_logs_include_pattern,omitempty"`
	RolledLogsExcludePattern       *string `protobuf:"bytes,4,opt,name=rolled_logs_exclude_pattern,json=rolledLogsExcludePattern,def=.*" json:"rolled_logs_exclude_pattern,omitempty"`
	LogAggregationPolicyClassName  *string `protobuf:"bytes,5,opt,name=log_aggregation_policy_class_name,json=logAggregationPolicyClassName" json:"log_aggregation_policy_class_name,omitempty"`
	LogAggregationPolicyParameters *string `protobuf:"bytes,6,opt,name=log_aggregation_policy_parameters,json=logAggregationPolicyParameters" json:"log_aggregation_policy_parameters,omitempty"`
}

// Default values for LogAggregationContextProto fields.
const (
	Default_LogAggregationContextProto_IncludePattern           = string(".*")
	Default_LogAggregationContextProto_ExcludePattern           = string("")
	Default_LogAggregationContextProto_RolledLogsIncludePattern = string("")
	Default_LogAggregationContextProto_RolledLogsExcludePattern = string(".*")
)

func (x *LogAggregationContextProto) Reset() {
	*x = LogAggregationContextProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogAggregationContextProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogAggregationContextProto) ProtoMessage() {}

func (x *LogAggregationContextProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogAggregationContextProto.ProtoReflect.Descriptor instead.
func (*LogAggregationContextProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{48}
}

func (x *LogAggregationContextProto) GetIncludePattern() string {
	if x != nil && x.IncludePattern != nil {
		return *x.IncludePattern
	}
	return Default_LogAggregationContextProto_IncludePattern
}

func (x *LogAggregationContextProto) GetExcludePattern() string {
	if x != nil && x.ExcludePattern != nil {
		return *x.ExcludePattern
	}
	return Default_LogAggregationContextProto_ExcludePattern
}

func (x *LogAggregationContextProto) GetRolledLogsIncludePattern() string {
	if x != nil && x.RolledLogsIncludePattern != nil {
		return *x.RolledLogsIncludePattern
	}
	return Default_LogAggregationContextProto_RolledLogsIncludePattern
}

func (x *LogAggregationContextProto) GetRolledLogsExcludePattern() string {
	if x != nil && x.RolledLogsExcludePattern != nil {
		return *x.RolledLogsExcludePattern
	}
	return Default_LogAggregationContextProto_RolledLogsExcludePattern
}

func (x *LogAggregationContextProto) GetLogAggregationPolicyClassName() string {
	if x != nil && x.LogAggregationPolicyClassName != nil {
		return *x.LogAggregationPolicyClassName
	}
	return ""
}

func (x *LogAggregationContextProto) GetLogAggregationPolicyParameters() string {
	if x != nil && x.LogAggregationPolicyParameters != nil {
		return *x.LogAggregationPolicyParameters
	}
	return ""
}

type ApplicationACLMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessType *ApplicationAccessTypeProto `protobuf:"varint,1,opt,name=accessType,enum=hadoop.yarn.ApplicationAccessTypeProto" json:"accessType,omitempty"`
	Acl        *string                     `protobuf:"bytes,2,opt,name=acl,def= " json:"acl,omitempty"`
}

// Default values for ApplicationACLMapProto fields.
const (
	Default_ApplicationACLMapProto_Acl = string(" ")
)

func (x *ApplicationACLMapProto) Reset() {
	*x = ApplicationACLMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationACLMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationACLMapProto) ProtoMessage() {}

func (x *ApplicationACLMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationACLMapProto.ProtoReflect.Descriptor instead.
func (*ApplicationACLMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{49}
}

func (x *ApplicationACLMapProto) GetAccessType() ApplicationAccessTypeProto {
	if x != nil && x.AccessType != nil {
		return *x.AccessType
	}
	return ApplicationAccessTypeProto_APPACCESS_VIEW_APP
}

func (x *ApplicationACLMapProto) GetAcl() string {
	if x != nil && x.Acl != nil {
		return *x.Acl
	}
	return Default_ApplicationACLMapProto_Acl
}

type YarnClusterMetricsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumNodeManagers      *int32 `protobuf:"varint,1,opt,name=num_node_managers,json=numNodeManagers" json:"num_node_managers,omitempty"`
	NumDecommissionedNms *int32 `protobuf:"varint,2,opt,name=num_decommissioned_nms,json=numDecommissionedNms" json:"num_decommissioned_nms,omitempty"`
	NumActiveNms         *int32 `protobuf:"varint,3,opt,name=num_active_nms,json=numActiveNms" json:"num_active_nms,omitempty"`
	NumLostNms           *int32 `protobuf:"varint,4,opt,name=num_lost_nms,json=numLostNms" json:"num_lost_nms,omitempty"`
	NumUnhealthyNms      *int32 `protobuf:"varint,5,opt,name=num_unhealthy_nms,json=numUnhealthyNms" json:"num_unhealthy_nms,omitempty"`
	NumRebootedNms       *int32 `protobuf:"varint,6,opt,name=num_rebooted_nms,json=numRebootedNms" json:"num_rebooted_nms,omitempty"`
}

func (x *YarnClusterMetricsProto) Reset() {
	*x = YarnClusterMetricsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YarnClusterMetricsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YarnClusterMetricsProto) ProtoMessage() {}

func (x *YarnClusterMetricsProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YarnClusterMetricsProto.ProtoReflect.Descriptor instead.
func (*YarnClusterMetricsProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{50}
}

func (x *YarnClusterMetricsProto) GetNumNodeManagers() int32 {
	if x != nil && x.NumNodeManagers != nil {
		return *x.NumNodeManagers
	}
	return 0
}

func (x *YarnClusterMetricsProto) GetNumDecommissionedNms() int32 {
	if x != nil && x.NumDecommissionedNms != nil {
		return *x.NumDecommissionedNms
	}
	return 0
}

func (x *YarnClusterMetricsProto) GetNumActiveNms() int32 {
	if x != nil && x.NumActiveNms != nil {
		return *x.NumActiveNms
	}
	return 0
}

func (x *YarnClusterMetricsProto) GetNumLostNms() int32 {
	if x != nil && x.NumLostNms != nil {
		return *x.NumLostNms
	}
	return 0
}

func (x *YarnClusterMetricsProto) GetNumUnhealthyNms() int32 {
	if x != nil && x.NumUnhealthyNms != nil {
		return *x.NumUnhealthyNms
	}
	return 0
}

func (x *YarnClusterMetricsProto) GetNumRebootedNms() int32 {
	if x != nil && x.NumRebootedNms != nil {
		return *x.NumRebootedNms
	}
	return 0
}

type QueueStatisticsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumAppsSubmitted    *int64 `protobuf:"varint,1,opt,name=numAppsSubmitted" json:"numAppsSubmitted,omitempty"`
	NumAppsRunning      *int64 `protobuf:"varint,2,opt,name=numAppsRunning" json:"numAppsRunning,omitempty"`
	NumAppsPending      *int64 `protobuf:"varint,3,opt,name=numAppsPending" json:"numAppsPending,omitempty"`
	NumAppsCompleted    *int64 `protobuf:"varint,4,opt,name=numAppsCompleted" json:"numAppsCompleted,omitempty"`
	NumAppsKilled       *int64 `protobuf:"varint,5,opt,name=numAppsKilled" json:"numAppsKilled,omitempty"`
	NumAppsFailed       *int64 `protobuf:"varint,6,opt,name=numAppsFailed" json:"numAppsFailed,omitempty"`
	NumActiveUsers      *int64 `protobuf:"varint,7,opt,name=numActiveUsers" json:"numActiveUsers,omitempty"`
	AvailableMemoryMB   *int64 `protobuf:"varint,8,opt,name=availableMemoryMB" json:"availableMemoryMB,omitempty"`
	AllocatedMemoryMB   *int64 `protobuf:"varint,9,opt,name=allocatedMemoryMB" json:"allocatedMemoryMB,omitempty"`
	PendingMemoryMB     *int64 `protobuf:"varint,10,opt,name=pendingMemoryMB" json:"pendingMemoryMB,omitempty"`
	ReservedMemoryMB    *int64 `protobuf:"varint,11,opt,name=reservedMemoryMB" json:"reservedMemoryMB,omitempty"`
	AvailableVCores     *int64 `protobuf:"varint,12,opt,name=availableVCores" json:"availableVCores,omitempty"`
	AllocatedVCores     *int64 `protobuf:"varint,13,opt,name=allocatedVCores" json:"allocatedVCores,omitempty"`
	PendingVCores       *int64 `protobuf:"varint,14,opt,name=pendingVCores" json:"pendingVCores,omitempty"`
	ReservedVCores      *int64 `protobuf:"varint,15,opt,name=reservedVCores" json:"reservedVCores,omitempty"`
	AllocatedContainers *int64 `protobuf:"varint,16,opt,name=allocatedContainers" json:"allocatedContainers,omitempty"`
	PendingContainers   *int64 `protobuf:"varint,17,opt,name=pendingContainers" json:"pendingContainers,omitempty"`
	ReservedContainers  *int64 `protobuf:"varint,18,opt,name=reservedContainers" json:"reservedContainers,omitempty"`
}

func (x *QueueStatisticsProto) Reset() {
	*x = QueueStatisticsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueStatisticsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStatisticsProto) ProtoMessage() {}

func (x *QueueStatisticsProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStatisticsProto.ProtoReflect.Descriptor instead.
func (*QueueStatisticsProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{51}
}

func (x *QueueStatisticsProto) GetNumAppsSubmitted() int64 {
	if x != nil && x.NumAppsSubmitted != nil {
		return *x.NumAppsSubmitted
	}
	return 0
}

func (x *QueueStatisticsProto) GetNumAppsRunning() int64 {
	if x != nil && x.NumAppsRunning != nil {
		return *x.NumAppsRunning
	}
	return 0
}

func (x *QueueStatisticsProto) GetNumAppsPending() int64 {
	if x != nil && x.NumAppsPending != nil {
		return *x.NumAppsPending
	}
	return 0
}

func (x *QueueStatisticsProto) GetNumAppsCompleted() int64 {
	if x != nil && x.NumAppsCompleted != nil {
		return *x.NumAppsCompleted
	}
	return 0
}

func (x *QueueStatisticsProto) GetNumAppsKilled() int64 {
	if x != nil && x.NumAppsKilled != nil {
		return *x.NumAppsKilled
	}
	return 0
}

func (x *QueueStatisticsProto) GetNumAppsFailed() int64 {
	if x != nil && x.NumAppsFailed != nil {
		return *x.NumAppsFailed
	}
	return 0
}

func (x *QueueStatisticsProto) GetNumActiveUsers() int64 {
	if x != nil && x.NumActiveUsers != nil {
		return *x.NumActiveUsers
	}
	return 0
}

func (x *QueueStatisticsProto) GetAvailableMemoryMB() int64 {
	if x != nil && x.AvailableMemoryMB != nil {
		return *x.AvailableMemoryMB
	}
	return 0
}

func (x *QueueStatisticsProto) GetAllocatedMemoryMB() int64 {
	if x != nil && x.AllocatedMemoryMB != nil {
		return *x.AllocatedMemoryMB
	}
	return 0
}

func (x *QueueStatisticsProto) GetPendingMemoryMB() int64 {
	if x != nil && x.PendingMemoryMB != nil {
		return *x.PendingMemoryMB
	}
	return 0
}

func (x *QueueStatisticsProto) GetReservedMemoryMB() int64 {
	if x != nil && x.ReservedMemoryMB != nil {
		return *x.ReservedMemoryMB
	}
	return 0
}

func (x *QueueStatisticsProto) GetAvailableVCores() int64 {
	if x != nil && x.AvailableVCores != nil {
		return *x.AvailableVCores
	}
	return 0
}

func (x *QueueStatisticsProto) GetAllocatedVCores() int64 {
	if x != nil && x.AllocatedVCores != nil {
		return *x.AllocatedVCores
	}
	return 0
}

func (x *QueueStatisticsProto) GetPendingVCores() int64 {
	if x != nil && x.PendingVCores != nil {
		return *x.PendingVCores
	}
	return 0
}

func (x *QueueStatisticsProto) GetReservedVCores() int64 {
	if x != nil && x.ReservedVCores != nil {
		return *x.ReservedVCores
	}
	return 0
}

func (x *QueueStatisticsProto) GetAllocatedContainers() int64 {
	if x != nil && x.AllocatedContainers != nil {
		return *x.AllocatedContainers
	}
	return 0
}

func (x *QueueStatisticsProto) GetPendingContainers() int64 {
	if x != nil && x.PendingContainers != nil {
		return *x.PendingContainers
	}
	return 0
}

func (x *QueueStatisticsProto) GetReservedContainers() int64 {
	if x != nil && x.ReservedContainers != nil {
		return *x.ReservedContainers
	}
	return 0
}

type QueueInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName                    *string                        `protobuf:"bytes,1,opt,name=queueName" json:"queueName,omitempty"`
	Capacity                     *float32                       `protobuf:"fixed32,2,opt,name=capacity" json:"capacity,omitempty"`
	MaximumCapacity              *float32                       `protobuf:"fixed32,3,opt,name=maximumCapacity" json:"maximumCapacity,omitempty"`
	CurrentCapacity              *float32                       `protobuf:"fixed32,4,opt,name=currentCapacity" json:"currentCapacity,omitempty"`
	State                        *QueueStateProto               `protobuf:"varint,5,opt,name=state,enum=hadoop.yarn.QueueStateProto" json:"state,omitempty"`
	ChildQueues                  []*QueueInfoProto              `protobuf:"bytes,6,rep,name=childQueues" json:"childQueues,omitempty"`
	Applications                 []*ApplicationReportProto      `protobuf:"bytes,7,rep,name=applications" json:"applications,omitempty"`
	AccessibleNodeLabels         []string                       `protobuf:"bytes,8,rep,name=accessibleNodeLabels" json:"accessibleNodeLabels,omitempty"`
	DefaultNodeLabelExpression   *string                        `protobuf:"bytes,9,opt,name=defaultNodeLabelExpression" json:"defaultNodeLabelExpression,omitempty"`
	QueueStatistics              *QueueStatisticsProto          `protobuf:"bytes,10,opt,name=queueStatistics" json:"queueStatistics,omitempty"`
	PreemptionDisabled           *bool                          `protobuf:"varint,11,opt,name=preemptionDisabled" json:"preemptionDisabled,omitempty"`
	QueueConfigurationsMap       []*QueueConfigurationsMapProto `protobuf:"bytes,12,rep,name=queueConfigurationsMap" json:"queueConfigurationsMap,omitempty"`
	IntraQueuePreemptionDisabled *bool                          `protobuf:"varint,13,opt,name=intraQueuePreemptionDisabled" json:"intraQueuePreemptionDisabled,omitempty"`
}

func (x *QueueInfoProto) Reset() {
	*x = QueueInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueInfoProto) ProtoMessage() {}

func (x *QueueInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueInfoProto.ProtoReflect.Descriptor instead.
func (*QueueInfoProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{52}
}

func (x *QueueInfoProto) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *QueueInfoProto) GetCapacity() float32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *QueueInfoProto) GetMaximumCapacity() float32 {
	if x != nil && x.MaximumCapacity != nil {
		return *x.MaximumCapacity
	}
	return 0
}

func (x *QueueInfoProto) GetCurrentCapacity() float32 {
	if x != nil && x.CurrentCapacity != nil {
		return *x.CurrentCapacity
	}
	return 0
}

func (x *QueueInfoProto) GetState() QueueStateProto {
	if x != nil && x.State != nil {
		return *x.State
	}
	return QueueStateProto_Q_STOPPED
}

func (x *QueueInfoProto) GetChildQueues() []*QueueInfoProto {
	if x != nil {
		return x.ChildQueues
	}
	return nil
}

func (x *QueueInfoProto) GetApplications() []*ApplicationReportProto {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *QueueInfoProto) GetAccessibleNodeLabels() []string {
	if x != nil {
		return x.AccessibleNodeLabels
	}
	return nil
}

func (x *QueueInfoProto) GetDefaultNodeLabelExpression() string {
	if x != nil && x.DefaultNodeLabelExpression != nil {
		return *x.DefaultNodeLabelExpression
	}
	return ""
}

func (x *QueueInfoProto) GetQueueStatistics() *QueueStatisticsProto {
	if x != nil {
		return x.QueueStatistics
	}
	return nil
}

func (x *QueueInfoProto) GetPreemptionDisabled() bool {
	if x != nil && x.PreemptionDisabled != nil {
		return *x.PreemptionDisabled
	}
	return false
}

func (x *QueueInfoProto) GetQueueConfigurationsMap() []*QueueConfigurationsMapProto {
	if x != nil {
		return x.QueueConfigurationsMap
	}
	return nil
}

func (x *QueueInfoProto) GetIntraQueuePreemptionDisabled() bool {
	if x != nil && x.IntraQueuePreemptionDisabled != nil {
		return *x.IntraQueuePreemptionDisabled
	}
	return false
}

type QueueConfigurationsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capacity              *float32       `protobuf:"fixed32,1,opt,name=capacity" json:"capacity,omitempty"`
	AbsoluteCapacity      *float32       `protobuf:"fixed32,2,opt,name=absoluteCapacity" json:"absoluteCapacity,omitempty"`
	MaxCapacity           *float32       `protobuf:"fixed32,3,opt,name=maxCapacity" json:"maxCapacity,omitempty"`
	AbsoluteMaxCapacity   *float32       `protobuf:"fixed32,4,opt,name=absoluteMaxCapacity" json:"absoluteMaxCapacity,omitempty"`
	MaxAMPercentage       *float32       `protobuf:"fixed32,5,opt,name=maxAMPercentage" json:"maxAMPercentage,omitempty"`
	EffectiveMinCapacity  *ResourceProto `protobuf:"bytes,6,opt,name=effectiveMinCapacity" json:"effectiveMinCapacity,omitempty"`
	EffectiveMaxCapacity  *ResourceProto `protobuf:"bytes,7,opt,name=effectiveMaxCapacity" json:"effectiveMaxCapacity,omitempty"`
	ConfiguredMinCapacity *ResourceProto `protobuf:"bytes,8,opt,name=configuredMinCapacity" json:"configuredMinCapacity,omitempty"`
	ConfiguredMaxCapacity *ResourceProto `protobuf:"bytes,9,opt,name=configuredMaxCapacity" json:"configuredMaxCapacity,omitempty"`
}

func (x *QueueConfigurationsProto) Reset() {
	*x = QueueConfigurationsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueConfigurationsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueConfigurationsProto) ProtoMessage() {}

func (x *QueueConfigurationsProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueConfigurationsProto.ProtoReflect.Descriptor instead.
func (*QueueConfigurationsProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{53}
}

func (x *QueueConfigurationsProto) GetCapacity() float32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *QueueConfigurationsProto) GetAbsoluteCapacity() float32 {
	if x != nil && x.AbsoluteCapacity != nil {
		return *x.AbsoluteCapacity
	}
	return 0
}

func (x *QueueConfigurationsProto) GetMaxCapacity() float32 {
	if x != nil && x.MaxCapacity != nil {
		return *x.MaxCapacity
	}
	return 0
}

func (x *QueueConfigurationsProto) GetAbsoluteMaxCapacity() float32 {
	if x != nil && x.AbsoluteMaxCapacity != nil {
		return *x.AbsoluteMaxCapacity
	}
	return 0
}

func (x *QueueConfigurationsProto) GetMaxAMPercentage() float32 {
	if x != nil && x.MaxAMPercentage != nil {
		return *x.MaxAMPercentage
	}
	return 0
}

func (x *QueueConfigurationsProto) GetEffectiveMinCapacity() *ResourceProto {
	if x != nil {
		return x.EffectiveMinCapacity
	}
	return nil
}

func (x *QueueConfigurationsProto) GetEffectiveMaxCapacity() *ResourceProto {
	if x != nil {
		return x.EffectiveMaxCapacity
	}
	return nil
}

func (x *QueueConfigurationsProto) GetConfiguredMinCapacity() *ResourceProto {
	if x != nil {
		return x.ConfiguredMinCapacity
	}
	return nil
}

func (x *QueueConfigurationsProto) GetConfiguredMaxCapacity() *ResourceProto {
	if x != nil {
		return x.ConfiguredMaxCapacity
	}
	return nil
}

type QueueConfigurationsMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartitionName       *string                   `protobuf:"bytes,1,req,name=partitionName" json:"partitionName,omitempty"`
	QueueConfigurations *QueueConfigurationsProto `protobuf:"bytes,2,opt,name=queueConfigurations" json:"queueConfigurations,omitempty"`
}

func (x *QueueConfigurationsMapProto) Reset() {
	*x = QueueConfigurationsMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueConfigurationsMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueConfigurationsMapProto) ProtoMessage() {}

func (x *QueueConfigurationsMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueConfigurationsMapProto.ProtoReflect.Descriptor instead.
func (*QueueConfigurationsMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{54}
}

func (x *QueueConfigurationsMapProto) GetPartitionName() string {
	if x != nil && x.PartitionName != nil {
		return *x.PartitionName
	}
	return ""
}

func (x *QueueConfigurationsMapProto) GetQueueConfigurations() *QueueConfigurationsProto {
	if x != nil {
		return x.QueueConfigurations
	}
	return nil
}

type QueueUserACLInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName *string         `protobuf:"bytes,1,opt,name=queueName" json:"queueName,omitempty"`
	UserAcls  []QueueACLProto `protobuf:"varint,2,rep,name=userAcls,enum=hadoop.yarn.QueueACLProto" json:"userAcls,omitempty"`
}

func (x *QueueUserACLInfoProto) Reset() {
	*x = QueueUserACLInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueUserACLInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueUserACLInfoProto) ProtoMessage() {}

func (x *QueueUserACLInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueUserACLInfoProto.ProtoReflect.Descriptor instead.
func (*QueueUserACLInfoProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{55}
}

func (x *QueueUserACLInfoProto) GetQueueName() string {
	if x != nil && x.QueueName != nil {
		return *x.QueueName
	}
	return ""
}

func (x *QueueUserACLInfoProto) GetUserAcls() []QueueACLProto {
	if x != nil {
		return x.UserAcls
	}
	return nil
}

type PlacementConstraintProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleConstraint    *SimplePlacementConstraintProto    `protobuf:"bytes,1,opt,name=simpleConstraint" json:"simpleConstraint,omitempty"`
	CompositeConstraint *CompositePlacementConstraintProto `protobuf:"bytes,2,opt,name=compositeConstraint" json:"compositeConstraint,omitempty"`
}

func (x *PlacementConstraintProto) Reset() {
	*x = PlacementConstraintProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlacementConstraintProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlacementConstraintProto) ProtoMessage() {}

func (x *PlacementConstraintProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlacementConstraintProto.ProtoReflect.Descriptor instead.
func (*PlacementConstraintProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{56}
}

func (x *PlacementConstraintProto) GetSimpleConstraint() *SimplePlacementConstraintProto {
	if x != nil {
		return x.SimpleConstraint
	}
	return nil
}

func (x *PlacementConstraintProto) GetCompositeConstraint() *CompositePlacementConstraintProto {
	if x != nil {
		return x.CompositeConstraint
	}
	return nil
}

type SimplePlacementConstraintProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope             *string                           `protobuf:"bytes,1,req,name=scope" json:"scope,omitempty"`
	TargetExpressions []*PlacementConstraintTargetProto `protobuf:"bytes,2,rep,name=targetExpressions" json:"targetExpressions,omitempty"`
	MinCardinality    *int32                            `protobuf:"varint,3,opt,name=minCardinality" json:"minCardinality,omitempty"`
	MaxCardinality    *int32                            `protobuf:"varint,4,opt,name=maxCardinality" json:"maxCardinality,omitempty"`
	AttributeOpCode   *NodeAttributeOpCodeProto         `protobuf:"varint,5,opt,name=attributeOpCode,enum=hadoop.yarn.NodeAttributeOpCodeProto" json:"attributeOpCode,omitempty"`
}

func (x *SimplePlacementConstraintProto) Reset() {
	*x = SimplePlacementConstraintProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimplePlacementConstraintProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimplePlacementConstraintProto) ProtoMessage() {}

func (x *SimplePlacementConstraintProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimplePlacementConstraintProto.ProtoReflect.Descriptor instead.
func (*SimplePlacementConstraintProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{57}
}

func (x *SimplePlacementConstraintProto) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *SimplePlacementConstraintProto) GetTargetExpressions() []*PlacementConstraintTargetProto {
	if x != nil {
		return x.TargetExpressions
	}
	return nil
}

func (x *SimplePlacementConstraintProto) GetMinCardinality() int32 {
	if x != nil && x.MinCardinality != nil {
		return *x.MinCardinality
	}
	return 0
}

func (x *SimplePlacementConstraintProto) GetMaxCardinality() int32 {
	if x != nil && x.MaxCardinality != nil {
		return *x.MaxCardinality
	}
	return 0
}

func (x *SimplePlacementConstraintProto) GetAttributeOpCode() NodeAttributeOpCodeProto {
	if x != nil && x.AttributeOpCode != nil {
		return *x.AttributeOpCode
	}
	return NodeAttributeOpCodeProto_NO_OP
}

type PlacementConstraintTargetProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetType   *PlacementConstraintTargetProto_TargetType `protobuf:"varint,1,req,name=targetType,enum=hadoop.yarn.PlacementConstraintTargetProto_TargetType" json:"targetType,omitempty"`
	TargetKey    *string                                    `protobuf:"bytes,2,opt,name=targetKey" json:"targetKey,omitempty"`
	TargetValues []string                                   `protobuf:"bytes,3,rep,name=targetValues" json:"targetValues,omitempty"`
}

func (x *PlacementConstraintTargetProto) Reset() {
	*x = PlacementConstraintTargetProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlacementConstraintTargetProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlacementConstraintTargetProto) ProtoMessage() {}

func (x *PlacementConstraintTargetProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlacementConstraintTargetProto.ProtoReflect.Descriptor instead.
func (*PlacementConstraintTargetProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{58}
}

func (x *PlacementConstraintTargetProto) GetTargetType() PlacementConstraintTargetProto_TargetType {
	if x != nil && x.TargetType != nil {
		return *x.TargetType
	}
	return PlacementConstraintTargetProto_NODE_ATTRIBUTE
}

func (x *PlacementConstraintTargetProto) GetTargetKey() string {
	if x != nil && x.TargetKey != nil {
		return *x.TargetKey
	}
	return ""
}

func (x *PlacementConstraintTargetProto) GetTargetValues() []string {
	if x != nil {
		return x.TargetValues
	}
	return nil
}

type TimedPlacementConstraintProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlacementConstraint *PlacementConstraintProto                `protobuf:"bytes,1,req,name=placementConstraint" json:"placementConstraint,omitempty"`
	SchedulingDelay     *int64                                   `protobuf:"varint,2,req,name=schedulingDelay" json:"schedulingDelay,omitempty"`
	DelayUnit           *TimedPlacementConstraintProto_DelayUnit `protobuf:"varint,3,opt,name=delayUnit,enum=hadoop.yarn.TimedPlacementConstraintProto_DelayUnit,def=1" json:"delayUnit,omitempty"`
}

// Default values for TimedPlacementConstraintProto fields.
const (
	Default_TimedPlacementConstraintProto_DelayUnit = TimedPlacementConstraintProto_MILLISECONDS
)

func (x *TimedPlacementConstraintProto) Reset() {
	*x = TimedPlacementConstraintProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimedPlacementConstraintProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimedPlacementConstraintProto) ProtoMessage() {}

func (x *TimedPlacementConstraintProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimedPlacementConstraintProto.ProtoReflect.Descriptor instead.
func (*TimedPlacementConstraintProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{59}
}

func (x *TimedPlacementConstraintProto) GetPlacementConstraint() *PlacementConstraintProto {
	if x != nil {
		return x.PlacementConstraint
	}
	return nil
}

func (x *TimedPlacementConstraintProto) GetSchedulingDelay() int64 {
	if x != nil && x.SchedulingDelay != nil {
		return *x.SchedulingDelay
	}
	return 0
}

func (x *TimedPlacementConstraintProto) GetDelayUnit() TimedPlacementConstraintProto_DelayUnit {
	if x != nil && x.DelayUnit != nil {
		return *x.DelayUnit
	}
	return Default_TimedPlacementConstraintProto_DelayUnit
}

type CompositePlacementConstraintProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompositeType         *CompositePlacementConstraintProto_CompositeType `protobuf:"varint,1,req,name=compositeType,enum=hadoop.yarn.CompositePlacementConstraintProto_CompositeType" json:"compositeType,omitempty"`
	ChildConstraints      []*PlacementConstraintProto                      `protobuf:"bytes,2,rep,name=childConstraints" json:"childConstraints,omitempty"`
	TimedChildConstraints []*TimedPlacementConstraintProto                 `protobuf:"bytes,3,rep,name=timedChildConstraints" json:"timedChildConstraints,omitempty"`
}

func (x *CompositePlacementConstraintProto) Reset() {
	*x = CompositePlacementConstraintProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompositePlacementConstraintProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositePlacementConstraintProto) ProtoMessage() {}

func (x *CompositePlacementConstraintProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositePlacementConstraintProto.ProtoReflect.Descriptor instead.
func (*CompositePlacementConstraintProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{60}
}

func (x *CompositePlacementConstraintProto) GetCompositeType() CompositePlacementConstraintProto_CompositeType {
	if x != nil && x.CompositeType != nil {
		return *x.CompositeType
	}
	return CompositePlacementConstraintProto_AND
}

func (x *CompositePlacementConstraintProto) GetChildConstraints() []*PlacementConstraintProto {
	if x != nil {
		return x.ChildConstraints
	}
	return nil
}

func (x *CompositePlacementConstraintProto) GetTimedChildConstraints() []*TimedPlacementConstraintProto {
	if x != nil {
		return x.TimedChildConstraints
	}
	return nil
}

// This associates a set of allocation tags to a Placement Constraint.
type PlacementConstraintMapEntryProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllocationTags      []string                  `protobuf:"bytes,1,rep,name=allocation_tags,json=allocationTags" json:"allocation_tags,omitempty"`
	PlacementConstraint *PlacementConstraintProto `protobuf:"bytes,2,opt,name=placement_constraint,json=placementConstraint" json:"placement_constraint,omitempty"`
}

func (x *PlacementConstraintMapEntryProto) Reset() {
	*x = PlacementConstraintMapEntryProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlacementConstraintMapEntryProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlacementConstraintMapEntryProto) ProtoMessage() {}

func (x *PlacementConstraintMapEntryProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlacementConstraintMapEntryProto.ProtoReflect.Descriptor instead.
func (*PlacementConstraintMapEntryProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{61}
}

func (x *PlacementConstraintMapEntryProto) GetAllocationTags() []string {
	if x != nil {
		return x.AllocationTags
	}
	return nil
}

func (x *PlacementConstraintMapEntryProto) GetPlacementConstraint() *PlacementConstraintProto {
	if x != nil {
		return x.PlacementConstraint
	}
	return nil
}

type ReservationIdProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ClusterTimestamp *int64 `protobuf:"varint,2,opt,name=cluster_timestamp,json=clusterTimestamp" json:"cluster_timestamp,omitempty"`
}

func (x *ReservationIdProto) Reset() {
	*x = ReservationIdProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationIdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationIdProto) ProtoMessage() {}

func (x *ReservationIdProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationIdProto.ProtoReflect.Descriptor instead.
func (*ReservationIdProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{62}
}

func (x *ReservationIdProto) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ReservationIdProto) GetClusterTimestamp() int64 {
	if x != nil && x.ClusterTimestamp != nil {
		return *x.ClusterTimestamp
	}
	return 0
}

type ReservationRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capability    *ResourceProto `protobuf:"bytes,1,opt,name=capability" json:"capability,omitempty"`
	NumContainers *int32         `protobuf:"varint,2,opt,name=num_containers,json=numContainers,def=1" json:"num_containers,omitempty"`
	Concurrency   *int32         `protobuf:"varint,3,opt,name=concurrency,def=1" json:"concurrency,omitempty"`
	Duration      *int64         `protobuf:"varint,4,opt,name=duration,def=-1" json:"duration,omitempty"`
}

// Default values for ReservationRequestProto fields.
const (
	Default_ReservationRequestProto_NumContainers = int32(1)
	Default_ReservationRequestProto_Concurrency   = int32(1)
	Default_ReservationRequestProto_Duration      = int64(-1)
)

func (x *ReservationRequestProto) Reset() {
	*x = ReservationRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationRequestProto) ProtoMessage() {}

func (x *ReservationRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationRequestProto.ProtoReflect.Descriptor instead.
func (*ReservationRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{63}
}

func (x *ReservationRequestProto) GetCapability() *ResourceProto {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *ReservationRequestProto) GetNumContainers() int32 {
	if x != nil && x.NumContainers != nil {
		return *x.NumContainers
	}
	return Default_ReservationRequestProto_NumContainers
}

func (x *ReservationRequestProto) GetConcurrency() int32 {
	if x != nil && x.Concurrency != nil {
		return *x.Concurrency
	}
	return Default_ReservationRequestProto_Concurrency
}

func (x *ReservationRequestProto) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return Default_ReservationRequestProto_Duration
}

type ReservationRequestsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationResources []*ReservationRequestProto          `protobuf:"bytes,1,rep,name=reservation_resources,json=reservationResources" json:"reservation_resources,omitempty"`
	Interpreter          *ReservationRequestInterpreterProto `protobuf:"varint,2,opt,name=interpreter,enum=hadoop.yarn.ReservationRequestInterpreterProto,def=1" json:"interpreter,omitempty"`
}

// Default values for ReservationRequestsProto fields.
const (
	Default_ReservationRequestsProto_Interpreter = ReservationRequestInterpreterProto_R_ALL
)

func (x *ReservationRequestsProto) Reset() {
	*x = ReservationRequestsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationRequestsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationRequestsProto) ProtoMessage() {}

func (x *ReservationRequestsProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationRequestsProto.ProtoReflect.Descriptor instead.
func (*ReservationRequestsProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{64}
}

func (x *ReservationRequestsProto) GetReservationResources() []*ReservationRequestProto {
	if x != nil {
		return x.ReservationResources
	}
	return nil
}

func (x *ReservationRequestsProto) GetInterpreter() ReservationRequestInterpreterProto {
	if x != nil && x.Interpreter != nil {
		return *x.Interpreter
	}
	return Default_ReservationRequestsProto_Interpreter
}

type ReservationDefinitionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationRequests  *ReservationRequestsProto `protobuf:"bytes,1,opt,name=reservation_requests,json=reservationRequests" json:"reservation_requests,omitempty"`
	Arrival              *int64                    `protobuf:"varint,2,opt,name=arrival" json:"arrival,omitempty"`
	Deadline             *int64                    `protobuf:"varint,3,opt,name=deadline" json:"deadline,omitempty"`
	ReservationName      *string                   `protobuf:"bytes,4,opt,name=reservation_name,json=reservationName" json:"reservation_name,omitempty"`
	RecurrenceExpression *string                   `protobuf:"bytes,5,opt,name=recurrence_expression,json=recurrenceExpression,def=0" json:"recurrence_expression,omitempty"`
	Priority             *PriorityProto            `protobuf:"bytes,6,opt,name=priority" json:"priority,omitempty"`
}

// Default values for ReservationDefinitionProto fields.
const (
	Default_ReservationDefinitionProto_RecurrenceExpression = string("0")
)

func (x *ReservationDefinitionProto) Reset() {
	*x = ReservationDefinitionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationDefinitionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationDefinitionProto) ProtoMessage() {}

func (x *ReservationDefinitionProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationDefinitionProto.ProtoReflect.Descriptor instead.
func (*ReservationDefinitionProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{65}
}

func (x *ReservationDefinitionProto) GetReservationRequests() *ReservationRequestsProto {
	if x != nil {
		return x.ReservationRequests
	}
	return nil
}

func (x *ReservationDefinitionProto) GetArrival() int64 {
	if x != nil && x.Arrival != nil {
		return *x.Arrival
	}
	return 0
}

func (x *ReservationDefinitionProto) GetDeadline() int64 {
	if x != nil && x.Deadline != nil {
		return *x.Deadline
	}
	return 0
}

func (x *ReservationDefinitionProto) GetReservationName() string {
	if x != nil && x.ReservationName != nil {
		return *x.ReservationName
	}
	return ""
}

func (x *ReservationDefinitionProto) GetRecurrenceExpression() string {
	if x != nil && x.RecurrenceExpression != nil {
		return *x.RecurrenceExpression
	}
	return Default_ReservationDefinitionProto_RecurrenceExpression
}

func (x *ReservationDefinitionProto) GetPriority() *PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

type ResourceAllocationRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *int64         `protobuf:"varint,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   *int64         `protobuf:"varint,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Resource  *ResourceProto `protobuf:"bytes,3,opt,name=resource" json:"resource,omitempty"`
}

func (x *ResourceAllocationRequestProto) Reset() {
	*x = ResourceAllocationRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceAllocationRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAllocationRequestProto) ProtoMessage() {}

func (x *ResourceAllocationRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAllocationRequestProto.ProtoReflect.Descriptor instead.
func (*ResourceAllocationRequestProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{66}
}

func (x *ResourceAllocationRequestProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ResourceAllocationRequestProto) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *ResourceAllocationRequestProto) GetResource() *ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ReservationAllocationStateProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationDefinition *ReservationDefinitionProto       `protobuf:"bytes,1,opt,name=reservation_definition,json=reservationDefinition" json:"reservation_definition,omitempty"`
	AllocationRequests    []*ResourceAllocationRequestProto `protobuf:"bytes,2,rep,name=allocation_requests,json=allocationRequests" json:"allocation_requests,omitempty"`
	StartTime             *int64                            `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime               *int64                            `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	User                  *string                           `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	ContainsGangs         *bool                             `protobuf:"varint,6,opt,name=contains_gangs,json=containsGangs" json:"contains_gangs,omitempty"`
	AcceptanceTime        *int64                            `protobuf:"varint,7,opt,name=acceptance_time,json=acceptanceTime" json:"acceptance_time,omitempty"`
	ReservationId         *ReservationIdProto               `protobuf:"bytes,8,opt,name=reservation_id,json=reservationId" json:"reservation_id,omitempty"`
}

func (x *ReservationAllocationStateProto) Reset() {
	*x = ReservationAllocationStateProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationAllocationStateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationAllocationStateProto) ProtoMessage() {}

func (x *ReservationAllocationStateProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationAllocationStateProto.ProtoReflect.Descriptor instead.
func (*ReservationAllocationStateProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{67}
}

func (x *ReservationAllocationStateProto) GetReservationDefinition() *ReservationDefinitionProto {
	if x != nil {
		return x.ReservationDefinition
	}
	return nil
}

func (x *ReservationAllocationStateProto) GetAllocationRequests() []*ResourceAllocationRequestProto {
	if x != nil {
		return x.AllocationRequests
	}
	return nil
}

func (x *ReservationAllocationStateProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ReservationAllocationStateProto) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *ReservationAllocationStateProto) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *ReservationAllocationStateProto) GetContainsGangs() bool {
	if x != nil && x.ContainsGangs != nil {
		return *x.ContainsGangs
	}
	return false
}

func (x *ReservationAllocationStateProto) GetAcceptanceTime() int64 {
	if x != nil && x.AcceptanceTime != nil {
		return *x.AcceptanceTime
	}
	return 0
}

func (x *ReservationAllocationStateProto) GetReservationId() *ReservationIdProto {
	if x != nil {
		return x.ReservationId
	}
	return nil
}

type ContainerLaunchContextProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalResources        []*StringLocalResourceMapProto `protobuf:"bytes,1,rep,name=localResources" json:"localResources,omitempty"`
	Tokens                []byte                         `protobuf:"bytes,2,opt,name=tokens" json:"tokens,omitempty"`
	ServiceData           []*StringBytesMapProto         `protobuf:"bytes,3,rep,name=service_data,json=serviceData" json:"service_data,omitempty"`
	Environment           []*StringStringMapProto        `protobuf:"bytes,4,rep,name=environment" json:"environment,omitempty"`
	Command               []string                       `protobuf:"bytes,5,rep,name=command" json:"command,omitempty"`
	Application_ACLs      []*ApplicationACLMapProto      `protobuf:"bytes,6,rep,name=application_ACLs,json=applicationACLs" json:"application_ACLs,omitempty"`
	ContainerRetryContext *ContainerRetryContextProto    `protobuf:"bytes,7,opt,name=container_retry_context,json=containerRetryContext" json:"container_retry_context,omitempty"`
	TokensConf            []byte                         `protobuf:"bytes,8,opt,name=tokens_conf,json=tokensConf" json:"tokens_conf,omitempty"`
}

func (x *ContainerLaunchContextProto) Reset() {
	*x = ContainerLaunchContextProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerLaunchContextProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerLaunchContextProto) ProtoMessage() {}

func (x *ContainerLaunchContextProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerLaunchContextProto.ProtoReflect.Descriptor instead.
func (*ContainerLaunchContextProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{68}
}

func (x *ContainerLaunchContextProto) GetLocalResources() []*StringLocalResourceMapProto {
	if x != nil {
		return x.LocalResources
	}
	return nil
}

func (x *ContainerLaunchContextProto) GetTokens() []byte {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ContainerLaunchContextProto) GetServiceData() []*StringBytesMapProto {
	if x != nil {
		return x.ServiceData
	}
	return nil
}

func (x *ContainerLaunchContextProto) GetEnvironment() []*StringStringMapProto {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ContainerLaunchContextProto) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ContainerLaunchContextProto) GetApplication_ACLs() []*ApplicationACLMapProto {
	if x != nil {
		return x.Application_ACLs
	}
	return nil
}

func (x *ContainerLaunchContextProto) GetContainerRetryContext() *ContainerRetryContextProto {
	if x != nil {
		return x.ContainerRetryContext
	}
	return nil
}

func (x *ContainerLaunchContextProto) GetTokensConf() []byte {
	if x != nil {
		return x.TokensConf
	}
	return nil
}

type ContainerStatusProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId         *ContainerIdProto       `protobuf:"bytes,1,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	State               *ContainerStateProto    `protobuf:"varint,2,opt,name=state,enum=hadoop.yarn.ContainerStateProto" json:"state,omitempty"`
	Diagnostics         *string                 `protobuf:"bytes,3,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	ExitStatus          *int32                  `protobuf:"varint,4,opt,name=exit_status,json=exitStatus,def=-1000" json:"exit_status,omitempty"`
	Capability          *ResourceProto          `protobuf:"bytes,5,opt,name=capability" json:"capability,omitempty"`
	ExecutionType       *ExecutionTypeProto     `protobuf:"varint,6,opt,name=executionType,enum=hadoop.yarn.ExecutionTypeProto,def=1" json:"executionType,omitempty"`
	ContainerAttributes []*StringStringMapProto `protobuf:"bytes,7,rep,name=container_attributes,json=containerAttributes" json:"container_attributes,omitempty"`
	ContainerSubState   *ContainerSubStateProto `protobuf:"varint,8,opt,name=container_sub_state,json=containerSubState,enum=hadoop.yarn.ContainerSubStateProto" json:"container_sub_state,omitempty"`
}

// Default values for ContainerStatusProto fields.
const (
	Default_ContainerStatusProto_Diagnostics   = string("N/A")
	Default_ContainerStatusProto_ExitStatus    = int32(-1000)
	Default_ContainerStatusProto_ExecutionType = ExecutionTypeProto_GUARANTEED
)

func (x *ContainerStatusProto) Reset() {
	*x = ContainerStatusProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStatusProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatusProto) ProtoMessage() {}

func (x *ContainerStatusProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatusProto.ProtoReflect.Descriptor instead.
func (*ContainerStatusProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{69}
}

func (x *ContainerStatusProto) GetContainerId() *ContainerIdProto {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *ContainerStatusProto) GetState() ContainerStateProto {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ContainerStateProto_C_NEW
}

func (x *ContainerStatusProto) GetDiagnostics() string {
	if x != nil && x.Diagnostics != nil {
		return *x.Diagnostics
	}
	return Default_ContainerStatusProto_Diagnostics
}

func (x *ContainerStatusProto) GetExitStatus() int32 {
	if x != nil && x.ExitStatus != nil {
		return *x.ExitStatus
	}
	return Default_ContainerStatusProto_ExitStatus
}

func (x *ContainerStatusProto) GetCapability() *ResourceProto {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *ContainerStatusProto) GetExecutionType() ExecutionTypeProto {
	if x != nil && x.ExecutionType != nil {
		return *x.ExecutionType
	}
	return Default_ContainerStatusProto_ExecutionType
}

func (x *ContainerStatusProto) GetContainerAttributes() []*StringStringMapProto {
	if x != nil {
		return x.ContainerAttributes
	}
	return nil
}

func (x *ContainerStatusProto) GetContainerSubState() ContainerSubStateProto {
	if x != nil && x.ContainerSubState != nil {
		return *x.ContainerSubState
	}
	return ContainerSubStateProto_CSS_SCHEDULED
}

type ContainerRetryContextProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetryPolicy              *ContainerRetryPolicyProto `protobuf:"varint,1,opt,name=retry_policy,json=retryPolicy,enum=hadoop.yarn.ContainerRetryPolicyProto,def=0" json:"retry_policy,omitempty"`
	ErrorCodes               []int32                    `protobuf:"varint,2,rep,name=error_codes,json=errorCodes" json:"error_codes,omitempty"`
	MaxRetries               *int32                     `protobuf:"varint,3,opt,name=max_retries,json=maxRetries,def=0" json:"max_retries,omitempty"`
	RetryInterval            *int32                     `protobuf:"varint,4,opt,name=retry_interval,json=retryInterval,def=0" json:"retry_interval,omitempty"`
	FailuresValidityInterval *int64                     `protobuf:"varint,5,opt,name=failures_validity_interval,json=failuresValidityInterval,def=-1" json:"failures_validity_interval,omitempty"`
}

// Default values for ContainerRetryContextProto fields.
const (
	Default_ContainerRetryContextProto_RetryPolicy              = ContainerRetryPolicyProto_NEVER_RETRY
	Default_ContainerRetryContextProto_MaxRetries               = int32(0)
	Default_ContainerRetryContextProto_RetryInterval            = int32(0)
	Default_ContainerRetryContextProto_FailuresValidityInterval = int64(-1)
)

func (x *ContainerRetryContextProto) Reset() {
	*x = ContainerRetryContextProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerRetryContextProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRetryContextProto) ProtoMessage() {}

func (x *ContainerRetryContextProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRetryContextProto.ProtoReflect.Descriptor instead.
func (*ContainerRetryContextProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{70}
}

func (x *ContainerRetryContextProto) GetRetryPolicy() ContainerRetryPolicyProto {
	if x != nil && x.RetryPolicy != nil {
		return *x.RetryPolicy
	}
	return Default_ContainerRetryContextProto_RetryPolicy
}

func (x *ContainerRetryContextProto) GetErrorCodes() []int32 {
	if x != nil {
		return x.ErrorCodes
	}
	return nil
}

func (x *ContainerRetryContextProto) GetMaxRetries() int32 {
	if x != nil && x.MaxRetries != nil {
		return *x.MaxRetries
	}
	return Default_ContainerRetryContextProto_MaxRetries
}

func (x *ContainerRetryContextProto) GetRetryInterval() int32 {
	if x != nil && x.RetryInterval != nil {
		return *x.RetryInterval
	}
	return Default_ContainerRetryContextProto_RetryInterval
}

func (x *ContainerRetryContextProto) GetFailuresValidityInterval() int64 {
	if x != nil && x.FailuresValidityInterval != nil {
		return *x.FailuresValidityInterval
	}
	return Default_ContainerRetryContextProto_FailuresValidityInterval
}

////////////////////////////////////////////////////////////////////////
////// From common//////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
type StringLocalResourceMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string             `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *LocalResourceProto `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *StringLocalResourceMapProto) Reset() {
	*x = StringLocalResourceMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringLocalResourceMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringLocalResourceMapProto) ProtoMessage() {}

func (x *StringLocalResourceMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringLocalResourceMapProto.ProtoReflect.Descriptor instead.
func (*StringLocalResourceMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{71}
}

func (x *StringLocalResourceMapProto) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *StringLocalResourceMapProto) GetValue() *LocalResourceProto {
	if x != nil {
		return x.Value
	}
	return nil
}

type StringStringMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *StringStringMapProto) Reset() {
	*x = StringStringMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringStringMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringStringMapProto) ProtoMessage() {}

func (x *StringStringMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringStringMapProto.ProtoReflect.Descriptor instead.
func (*StringStringMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{72}
}

func (x *StringStringMapProto) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *StringStringMapProto) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type StringBytesMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *StringBytesMapProto) Reset() {
	*x = StringBytesMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringBytesMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringBytesMapProto) ProtoMessage() {}

func (x *StringBytesMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringBytesMapProto.ProtoReflect.Descriptor instead.
func (*StringBytesMapProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{73}
}

func (x *StringBytesMapProto) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *StringBytesMapProto) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CollectorInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorAddr  *string                  `protobuf:"bytes,1,opt,name=collector_addr,json=collectorAddr" json:"collector_addr,omitempty"`
	CollectorToken *hadoopcommon.TokenProto `protobuf:"bytes,2,opt,name=collector_token,json=collectorToken" json:"collector_token,omitempty"`
}

func (x *CollectorInfoProto) Reset() {
	*x = CollectorInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_protos_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorInfoProto) ProtoMessage() {}

func (x *CollectorInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_protos_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorInfoProto.ProtoReflect.Descriptor instead.
func (*CollectorInfoProto) Descriptor() ([]byte, []int) {
	return file_yarn_protos_proto_rawDescGZIP(), []int{74}
}

func (x *CollectorInfoProto) GetCollectorAddr() string {
	if x != nil && x.CollectorAddr != nil {
		return *x.CollectorAddr
	}
	return ""
}

func (x *CollectorInfoProto) GetCollectorToken() *hadoopcommon.TokenProto {
	if x != nil {
		return x.CollectorToken
	}
	return nil
}

var File_yarn_protos_proto protoreflect.FileDescriptor

var file_yarn_protos_proto_rawDesc = []byte{
	0x0a, 0x11, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x1a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa6, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x05,
	0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x12, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x81, 0x01, 0x0a,
	0x19, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64,
	0x22, 0xa8, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x4c, 0x0a,
	0x0e, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x18,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x15, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x33,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x22, 0x54, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6d, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x6d, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6d, 0x65, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x6d, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x63, 0x70, 0x75, 0x22, 0x7d, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x64, 0x0a, 0x14,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x6e, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x55, 0x0a, 0x15, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4d,
	0x61, 0x70, 0x22, 0x94, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x31, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x49,
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x0d, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0xa3, 0x04, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x74, 0x74, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x52, 0x0a, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x3a, 0x0a, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54, 0x45, 0x45, 0x44, 0x52,
	0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36,
	0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d,
	0x31, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x22, 0x88, 0x05, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x10, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x03, 0x4e, 0x2f, 0x41, 0x52,
	0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x74, 0x74, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x0a, 0x47, 0x55,
	0x41, 0x52, 0x41, 0x4e, 0x54, 0x45, 0x45, 0x44, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7a, 0x0a, 0x08, 0x55, 0x52, 0x4c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x55, 0x52, 0x4c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x49, 0x0a,
	0x22, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x73, 0x68, 0x6f, 0x75, 0x6c,
	0x64, 0x42, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x3c, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4c, 0x6f, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xef, 0x06, 0x0a, 0x23, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e,
	0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x75, 0x6d,
	0x55, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x36,
	0x0a, 0x17, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f, 0x6e, 0x65, 0x65, 0x64,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x63, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x71, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a,
	0x18, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x16, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x65, 0x6d,
	0x70, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x70, 0x72, 0x65, 0x65, 0x6d,
	0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x76,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x56, 0x63, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x64, 0x0a, 0x1e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x1b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x12,
	0x77, 0x0a, 0x28, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x24, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x22, 0xc8, 0x0b, 0x0a, 0x16, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x45, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x46, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x5c, 0x0a, 0x16, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x59, 0x61,
	0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x79, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x3a, 0x03, 0x4e, 0x2f, 0x41, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5e, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x61, 0x70, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x68, 0x0a, 0x1b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x6d,
	0x5f, 0x72, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x61, 0x6d, 0x52, 0x6d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x5c, 0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4c, 0x6f,
	0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x6c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a,
	0x15, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x14, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x61, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x6d, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x6d, 0x4e, 0x6f, 0x64, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x42, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x1a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x4d, 0x61,
	0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x62, 0x0a, 0x18, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x55, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x62, 0x0a, 0x18, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa3,
	0x04, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x5c, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x03, 0x4e, 0x2f, 0x41, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x72, 0x0a, 0x1e, 0x79, 0x61, 0x72, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x59, 0x61,
	0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1b,
	0x79, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x61,
	0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xcb, 0x06, 0x0a, 0x0f,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x30, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12,
	0x3a, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x5c, 0x0a, 0x16, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x55, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x55,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x17, 0x64, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x64, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x48, 0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x54, 0x6f, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x30, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x68, 0x0a, 0x14, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x54, 0x6f, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f,
	0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0e,
	0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0b, 0x69, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0b, 0x69,
	0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x22, 0x73, 0x0a, 0x15, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x34, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x0a, 0x72, 0x6d,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x69, 0x6f, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xd9, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x46, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x51,
	0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x06, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x52, 0x0e, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x16,
	0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x46, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x49,
	0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x19, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x6f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x4a,
	0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x6e, 0x6f,
	0x64, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x22, 0x74, 0x0a, 0x15, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x6f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x22, 0xcd, 0x03, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x0e, 0x72, 0x65, 0x6c,
	0x61, 0x78, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x78, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x16, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x13, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x22, 0xac, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x52,
	0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x0a, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54,
	0x45, 0x45, 0x44, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x3b, 0x0a, 0x16, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x14, 0x65, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x9e, 0x03, 0x0a, 0x16, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x33, 0x0a, 0x13, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x01, 0x30, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x12, 0x48, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x12, 0x57, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x22, 0x77, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x1e, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x39, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x52, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x50, 0x72,
	0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x64, 0x0a, 0x1d, 0x53, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0xa7, 0x01,
	0x0a, 0x17, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x47, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x5f, 0x0a, 0x1e, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x7f, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x12, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x61, 0x6c, 0x73, 0x22, 0xb8, 0x0a, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x03, 0x4e, 0x2f,
	0x41, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x3a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x6d, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f,
	0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x43, 0x0a, 0x1b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x18, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x57, 0x68, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0c, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x5f, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x0b, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x6d, 0x12, 0x29,
	0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x41, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x41, 0x70,
	0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x04, 0x59, 0x41, 0x52, 0x4e,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x63, 0x0a, 0x2b, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x27, 0x6b,
	0x65, 0x65, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x41, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x4f, 0x0a, 0x22, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x1f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x5f, 0x0a, 0x17, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x4c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x6c, 0x6f, 0x67,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x64,
	0x0a, 0x1d, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1a, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x12, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73,
	0x12, 0x6d, 0x0a, 0x21, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x9a, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x62,
	0x0a, 0x18, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xa7, 0x01, 0x0a,
	0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x62, 0x0a, 0x18, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8d, 0x03, 0x0a, 0x1a, 0x4c, 0x6f, 0x67, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x02,
	0x2e, 0x2a, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x12, 0x29, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x52, 0x0e, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x3f, 0x0a,
	0x1b, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x3a, 0x00, 0x52, 0x18, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x41,
	0x0a, 0x1b, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x3a, 0x02, 0x2e, 0x2a, 0x52, 0x18, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x4c,
	0x6f, 0x67, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x48, 0x0a, 0x21, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x6c, 0x6f,
	0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x21, 0x6c,
	0x6f, 0x67, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x6c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x76, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x43, 0x4c, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x47, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x03, 0x61, 0x63, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x01, 0x20, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x99,
	0x02, 0x0a, 0x17, 0x59, 0x61, 0x72, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75,
	0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x4e, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x5f, 0x6e,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x73,
	0x74, 0x4e, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x75, 0x6e, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x79, 0x5f, 0x6e, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x4e, 0x6d, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x65, 0x64,
	0x5f, 0x6e, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x52,
	0x65, 0x62, 0x6f, 0x6f, 0x74, 0x65, 0x64, 0x4e, 0x6d, 0x73, 0x22, 0x96, 0x06, 0x0a, 0x14, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6e,
	0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x70,
	0x70, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x70,
	0x70, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70,
	0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x2c, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4d, 0x42, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x42, 0x12, 0x2c, 0x0a,
	0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x4d, 0x42, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x42, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x42, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x4d, 0x42, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x42, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d,
	0x42, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x56, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x56,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x56, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x22, 0xf1, 0x05, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70,
	0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x60, 0x0a, 0x16, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4d, 0x61, 0x70, 0x12, 0x42, 0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xa4, 0x04, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x61, 0x62, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x30,
	0x0a, 0x13, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x61, 0x62, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x4d, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x4d,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x14, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x14, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x15, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x64, 0x4d, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x15,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x9c,
	0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6d, 0x0a,
	0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x43, 0x4c, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x43, 0x4c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x6c, 0x73, 0x22, 0xd5, 0x01, 0x0a,
	0x18, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x57, 0x0a, 0x10, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x10, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x12, 0x60, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x22, 0xb2, 0x02, 0x0a, 0x1e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x59, 0x0a,
	0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x43,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x1e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x56, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x36, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x4c, 0x4f,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x47, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x45, 0x4c, 0x46, 0x10, 0x03, 0x22, 0xb6, 0x02, 0x0a, 0x1d, 0x54, 0x69, 0x6d, 0x65, 0x64,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x57, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x60, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x55, 0x6e, 0x69, 0x74, 0x3a, 0x0c, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x53, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x30, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x49,
	0x4c, 0x4c, 0x49, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x4f, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x49, 0x54, 0x49, 0x45, 0x53, 0x10, 0x02, 0x22,
	0xee, 0x02, 0x0a, 0x21, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x62, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x60, 0x0a, 0x15,
	0x74, 0x69, 0x6d, 0x65, 0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x30,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x45, 0x44, 0x5f, 0x4f, 0x52, 0x10, 0x03,
	0x22, 0xa5, 0x01, 0x0a, 0x20, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x12, 0x58,
	0x0a, 0x14, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xc4, 0x01, 0x0a, 0x17,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0d,
	0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1e, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xcf, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x59, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x3a, 0x05, 0x52, 0x5f, 0x41, 0x4c, 0x4c, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x65, 0x74, 0x65, 0x72, 0x22, 0xc7, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x58, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x15, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x01, 0x30,
	0x52, 0x14, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x92,
	0x01, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0xc5, 0x03, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x5e, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x5f,
	0x67, 0x61, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x47, 0x61, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfd, 0x03, 0x0a, 0x1b,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x50, 0x0a, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x4e, 0x0a, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x43, 0x4c, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x43, 0x4c,
	0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x43, 0x4c, 0x73, 0x12, 0x5f, 0x0a, 0x17, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x22, 0x99, 0x04, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x3a, 0x03, 0x4e, 0x2f, 0x41, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x26, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x05, 0x2d, 0x31, 0x30, 0x30,
	0x30, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x0d, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x3a, 0x0a, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54, 0x45, 0x45, 0x44, 0x52, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x14,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x53, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x56, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x0b, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x54, 0x52,
	0x59, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0d,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x40, 0x0a,
	0x1a, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x18, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22,
	0x66, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7f, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x23, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x2a, 0x3f, 0x0a, 0x13,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x6e, 0x0a,
	0x16, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x53, 0x53, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x53,
	0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x53, 0x53, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x53, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x2a, 0x84, 0x01,
	0x0a, 0x19, 0x59, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x45, 0x57, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x45, 0x57, 0x5f, 0x53, 0x41, 0x56, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0c,
	0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x49, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x08, 0x2a, 0xc2, 0x02, 0x0a, 0x20, 0x59, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x50, 0x50,
	0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x50, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x53, 0x55,
	0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x50, 0x50,
	0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x50, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x45,
	0x4d, 0x50, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x41,
	0x56, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x50, 0x50, 0x5f, 0x41, 0x54,
	0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x50, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54,
	0x5f, 0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x45, 0x44, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x41,
	0x50, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x50, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d,
	0x50, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15,
	0x41, 0x50, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x49,
	0x53, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x50, 0x50, 0x5f, 0x41,
	0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10,
	0x0a, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x50, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54,
	0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0b, 0x2a, 0x72, 0x0a, 0x1b, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x5f,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41,
	0x50, 0x50, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x50, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x50, 0x50, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x50, 0x50, 0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x48, 0x0a,
	0x1c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49,
	0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x2a, 0x3c, 0x0a, 0x16, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x54, 0x54,
	0x45, 0x52, 0x4e, 0x10, 0x03, 0x2a, 0xa4, 0x01, 0x0a, 0x19, 0x4c, 0x6f, 0x67, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x4f, 0x47, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f, 0x47, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x4f, 0x47, 0x5f,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f, 0x47,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x4c, 0x4f, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c,
	0x4c, 0x4f, 0x47, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x1c,
	0x0a, 0x18, 0x4c, 0x4f, 0x47, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x07, 0x2a, 0x9c, 0x01, 0x0a,
	0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4e,
	0x53, 0x5f, 0x55, 0x4e, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x03, 0x12, 0x15, 0x0a,
	0x11, 0x4e, 0x53, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x53, 0x5f, 0x4c, 0x4f, 0x53, 0x54, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x53, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x53, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x53,
	0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x08, 0x2a, 0x53, 0x0a, 0x13, 0x4e,
	0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x55, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x44,
	0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x2a, 0x24, 0x0a, 0x16, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x2a, 0x36, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x53, 0x54,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x02, 0x2a, 0x37,
	0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54, 0x45,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x55, 0x4e,
	0x49, 0x53, 0x54, 0x49, 0x43, 0x10, 0x02, 0x2a, 0x30, 0x0a, 0x0e, 0x41, 0x4d, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4d, 0x5f,
	0x52, 0x45, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4d, 0x5f, 0x53,
	0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x2a, 0x5b, 0x0a, 0x14, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x52, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4c, 0x44, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x52, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4c, 0x44, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x2a, 0x37, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x2a,
	0x4e, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a,
	0x12, 0x41, 0x50, 0x50, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f,
	0x41, 0x50, 0x50, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x50, 0x50, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x02, 0x2a,
	0x3f, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x51, 0x5f, 0x44, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x2a, 0x48, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x43, 0x4c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1c, 0x0a, 0x18, 0x51, 0x41, 0x43, 0x4c, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54,
	0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x51, 0x41, 0x43, 0x4c, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x02, 0x2a, 0x63, 0x0a, 0x1b, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x55, 0x54,
	0x50, 0x55, 0x54, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x44, 0x55, 0x4d, 0x50, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x52, 0x41, 0x43, 0x45, 0x46, 0x55, 0x4c, 0x5f, 0x53, 0x48,
	0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4f, 0x52, 0x43,
	0x45, 0x46, 0x55, 0x4c, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x2a,
	0x35, 0x0a, 0x18, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x0a, 0x05, 0x4e,
	0x4f, 0x5f, 0x4f, 0x50, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x51, 0x10, 0x02, 0x12, 0x06,
	0x0a, 0x02, 0x4e, 0x45, 0x10, 0x03, 0x2a, 0x5b, 0x0a, 0x22, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x5f, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x5f, 0x47, 0x41,
	0x50, 0x10, 0x03, 0x2a, 0x6e, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x07,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x98, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x14, 0x0a, 0x07, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x9c, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x19, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x4b,
	0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x2a, 0x68, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x41, 0x4c,
	0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45,
	0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x43, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x53, 0x10, 0x02, 0x42, 0x30, 0x0a,
	0x1c, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0a, 0x59,
	0x61, 0x72, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01,
}

var (
	file_yarn_protos_proto_rawDescOnce sync.Once
	file_yarn_protos_proto_rawDescData = file_yarn_protos_proto_rawDesc
)

func file_yarn_protos_proto_rawDescGZIP() []byte {
	file_yarn_protos_proto_rawDescOnce.Do(func() {
		file_yarn_protos_proto_rawDescData = protoimpl.X.CompressGZIP(file_yarn_protos_proto_rawDescData)
	})
	return file_yarn_protos_proto_rawDescData
}

var file_yarn_protos_proto_enumTypes = make([]protoimpl.EnumInfo, 28)
var file_yarn_protos_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_yarn_protos_proto_goTypes = []interface{}{
	(ResourceTypesProto)(0),                              // 0: hadoop.yarn.ResourceTypesProto
	(ContainerStateProto)(0),                             // 1: hadoop.yarn.ContainerStateProto
	(ContainerSubStateProto)(0),                          // 2: hadoop.yarn.ContainerSubStateProto
	(YarnApplicationStateProto)(0),                       // 3: hadoop.yarn.YarnApplicationStateProto
	(YarnApplicationAttemptStateProto)(0),                // 4: hadoop.yarn.YarnApplicationAttemptStateProto
	(FinalApplicationStatusProto)(0),                     // 5: hadoop.yarn.FinalApplicationStatusProto
	(LocalResourceVisibilityProto)(0),                    // 6: hadoop.yarn.LocalResourceVisibilityProto
	(LocalResourceTypeProto)(0),                          // 7: hadoop.yarn.LocalResourceTypeProto
	(LogAggregationStatusProto)(0),                       // 8: hadoop.yarn.LogAggregationStatusProto
	(NodeStateProto)(0),                                  // 9: hadoop.yarn.NodeStateProto
	(NodeUpdateTypeProto)(0),                             // 10: hadoop.yarn.NodeUpdateTypeProto
	(NodeAttributeTypeProto)(0),                          // 11: hadoop.yarn.NodeAttributeTypeProto
	(ContainerTypeProto)(0),                              // 12: hadoop.yarn.ContainerTypeProto
	(ExecutionTypeProto)(0),                              // 13: hadoop.yarn.ExecutionTypeProto
	(AMCommandProto)(0),                                  // 14: hadoop.yarn.AMCommandProto
	(RejectionReasonProto)(0),                            // 15: hadoop.yarn.RejectionReasonProto
	(ApplicationTimeoutTypeProto)(0),                     // 16: hadoop.yarn.ApplicationTimeoutTypeProto
	(ApplicationAccessTypeProto)(0),                      // 17: hadoop.yarn.ApplicationAccessTypeProto
	(QueueStateProto)(0),                                 // 18: hadoop.yarn.QueueStateProto
	(QueueACLProto)(0),                                   // 19: hadoop.yarn.QueueACLProto
	(SignalContainerCommandProto)(0),                     // 20: hadoop.yarn.SignalContainerCommandProto
	(NodeAttributeOpCodeProto)(0),                        // 21: hadoop.yarn.NodeAttributeOpCodeProto
	(ReservationRequestInterpreterProto)(0),              // 22: hadoop.yarn.ReservationRequestInterpreterProto
	(ContainerExitStatusProto)(0),                        // 23: hadoop.yarn.ContainerExitStatusProto
	(ContainerRetryPolicyProto)(0),                       // 24: hadoop.yarn.ContainerRetryPolicyProto
	(PlacementConstraintTargetProto_TargetType)(0),       // 25: hadoop.yarn.PlacementConstraintTargetProto.TargetType
	(TimedPlacementConstraintProto_DelayUnit)(0),         // 26: hadoop.yarn.TimedPlacementConstraintProto.DelayUnit
	(CompositePlacementConstraintProto_CompositeType)(0), // 27: hadoop.yarn.CompositePlacementConstraintProto.CompositeType
	(*SerializedExceptionProto)(nil),                     // 28: hadoop.yarn.SerializedExceptionProto
	(*ApplicationIdProto)(nil),                           // 29: hadoop.yarn.ApplicationIdProto
	(*ApplicationAttemptIdProto)(nil),                    // 30: hadoop.yarn.ApplicationAttemptIdProto
	(*ContainerIdProto)(nil),                             // 31: hadoop.yarn.ContainerIdProto
	(*ResourceInformationProto)(nil),                     // 32: hadoop.yarn.ResourceInformationProto
	(*ResourceTypeInfoProto)(nil),                        // 33: hadoop.yarn.ResourceTypeInfoProto
	(*ResourceProto)(nil),                                // 34: hadoop.yarn.ResourceProto
	(*ResourceUtilizationProto)(nil),                     // 35: hadoop.yarn.ResourceUtilizationProto
	(*ResourceOptionProto)(nil),                          // 36: hadoop.yarn.ResourceOptionProto
	(*ResourceProfileEntry)(nil),                         // 37: hadoop.yarn.ResourceProfileEntry
	(*ResourceProfilesProto)(nil),                        // 38: hadoop.yarn.ResourceProfilesProto
	(*NodeResourceMapProto)(nil),                         // 39: hadoop.yarn.NodeResourceMapProto
	(*PriorityProto)(nil),                                // 40: hadoop.yarn.PriorityProto
	(*ContainerProto)(nil),                               // 41: hadoop.yarn.ContainerProto
	(*ContainerReportProto)(nil),                         // 42: hadoop.yarn.ContainerReportProto
	(*URLProto)(nil),                                     // 43: hadoop.yarn.URLProto
	(*LocalResourceProto)(nil),                           // 44: hadoop.yarn.LocalResourceProto
	(*StringLongMapProto)(nil),                           // 45: hadoop.yarn.StringLongMapProto
	(*ApplicationResourceUsageReportProto)(nil),          // 46: hadoop.yarn.ApplicationResourceUsageReportProto
	(*ApplicationReportProto)(nil),                       // 47: hadoop.yarn.ApplicationReportProto
	(*AppTimeoutsMapProto)(nil),                          // 48: hadoop.yarn.AppTimeoutsMapProto
	(*ApplicationTimeoutProto)(nil),                      // 49: hadoop.yarn.ApplicationTimeoutProto
	(*ApplicationAttemptReportProto)(nil),                // 50: hadoop.yarn.ApplicationAttemptReportProto
	(*NodeIdProto)(nil),                                  // 51: hadoop.yarn.NodeIdProto
	(*NodeReportProto)(nil),                              // 52: hadoop.yarn.NodeReportProto
	(*NodeIdToLabelsProto)(nil),                          // 53: hadoop.yarn.NodeIdToLabelsProto
	(*LabelsToNodeIdsProto)(nil),                         // 54: hadoop.yarn.LabelsToNodeIdsProto
	(*NodeLabelProto)(nil),                               // 55: hadoop.yarn.NodeLabelProto
	(*NodeAttributeKeyProto)(nil),                        // 56: hadoop.yarn.NodeAttributeKeyProto
	(*NodeAttributeProto)(nil),                           // 57: hadoop.yarn.NodeAttributeProto
	(*NodeAttributeInfoProto)(nil),                       // 58: hadoop.yarn.NodeAttributeInfoProto
	(*NodeToAttributeValueProto)(nil),                    // 59: hadoop.yarn.NodeToAttributeValueProto
	(*AttributeToNodesProto)(nil),                        // 60: hadoop.yarn.AttributeToNodesProto
	(*NodeToAttributesProto)(nil),                        // 61: hadoop.yarn.NodeToAttributesProto
	(*ResourceRequestProto)(nil),                         // 62: hadoop.yarn.ResourceRequestProto
	(*ExecutionTypeRequestProto)(nil),                    // 63: hadoop.yarn.ExecutionTypeRequestProto
	(*SchedulingRequestProto)(nil),                       // 64: hadoop.yarn.SchedulingRequestProto
	(*ResourceSizingProto)(nil),                          // 65: hadoop.yarn.ResourceSizingProto
	(*RejectedSchedulingRequestProto)(nil),               // 66: hadoop.yarn.RejectedSchedulingRequestProto
	(*PreemptionMessageProto)(nil),                       // 67: hadoop.yarn.PreemptionMessageProto
	(*StrictPreemptionContractProto)(nil),                // 68: hadoop.yarn.StrictPreemptionContractProto
	(*PreemptionContractProto)(nil),                      // 69: hadoop.yarn.PreemptionContractProto
	(*PreemptionContainerProto)(nil),                     // 70: hadoop.yarn.PreemptionContainerProto
	(*PreemptionResourceRequestProto)(nil),               // 71: hadoop.yarn.PreemptionResourceRequestProto
	(*ResourceBlacklistRequestProto)(nil),                // 72: hadoop.yarn.ResourceBlacklistRequestProto
	(*ApplicationSubmissionContextProto)(nil),            // 73: hadoop.yarn.ApplicationSubmissionContextProto
	(*ApplicationTimeoutMapProto)(nil),                   // 74: hadoop.yarn.ApplicationTimeoutMapProto
	(*ApplicationUpdateTimeoutMapProto)(nil),             // 75: hadoop.yarn.ApplicationUpdateTimeoutMapProto
	(*LogAggregationContextProto)(nil),                   // 76: hadoop.yarn.LogAggregationContextProto
	(*ApplicationACLMapProto)(nil),                       // 77: hadoop.yarn.ApplicationACLMapProto
	(*YarnClusterMetricsProto)(nil),                      // 78: hadoop.yarn.YarnClusterMetricsProto
	(*QueueStatisticsProto)(nil),                         // 79: hadoop.yarn.QueueStatisticsProto
	(*QueueInfoProto)(nil),                               // 80: hadoop.yarn.QueueInfoProto
	(*QueueConfigurationsProto)(nil),                     // 81: hadoop.yarn.QueueConfigurationsProto
	(*QueueConfigurationsMapProto)(nil),                  // 82: hadoop.yarn.QueueConfigurationsMapProto
	(*QueueUserACLInfoProto)(nil),                        // 83: hadoop.yarn.QueueUserACLInfoProto
	(*PlacementConstraintProto)(nil),                     // 84: hadoop.yarn.PlacementConstraintProto
	(*SimplePlacementConstraintProto)(nil),               // 85: hadoop.yarn.SimplePlacementConstraintProto
	(*PlacementConstraintTargetProto)(nil),               // 86: hadoop.yarn.PlacementConstraintTargetProto
	(*TimedPlacementConstraintProto)(nil),                // 87: hadoop.yarn.TimedPlacementConstraintProto
	(*CompositePlacementConstraintProto)(nil),            // 88: hadoop.yarn.CompositePlacementConstraintProto
	(*PlacementConstraintMapEntryProto)(nil),             // 89: hadoop.yarn.PlacementConstraintMapEntryProto
	(*ReservationIdProto)(nil),                           // 90: hadoop.yarn.ReservationIdProto
	(*ReservationRequestProto)(nil),                      // 91: hadoop.yarn.ReservationRequestProto
	(*ReservationRequestsProto)(nil),                     // 92: hadoop.yarn.ReservationRequestsProto
	(*ReservationDefinitionProto)(nil),                   // 93: hadoop.yarn.ReservationDefinitionProto
	(*ResourceAllocationRequestProto)(nil),               // 94: hadoop.yarn.ResourceAllocationRequestProto
	(*ReservationAllocationStateProto)(nil),              // 95: hadoop.yarn.ReservationAllocationStateProto
	(*ContainerLaunchContextProto)(nil),                  // 96: hadoop.yarn.ContainerLaunchContextProto
	(*ContainerStatusProto)(nil),                         // 97: hadoop.yarn.ContainerStatusProto
	(*ContainerRetryContextProto)(nil),                   // 98: hadoop.yarn.ContainerRetryContextProto
	(*StringLocalResourceMapProto)(nil),                  // 99: hadoop.yarn.StringLocalResourceMapProto
	(*StringStringMapProto)(nil),                         // 100: hadoop.yarn.StringStringMapProto
	(*StringBytesMapProto)(nil),                          // 101: hadoop.yarn.StringBytesMapProto
	(*CollectorInfoProto)(nil),                           // 102: hadoop.yarn.CollectorInfoProto
	(*hadoopcommon.TokenProto)(nil),                      // 103: hadoop.common.TokenProto
}
var file_yarn_protos_proto_depIdxs = []int32{
	28,  // 0: hadoop.yarn.SerializedExceptionProto.cause:type_name -> hadoop.yarn.SerializedExceptionProto
	29,  // 1: hadoop.yarn.ApplicationAttemptIdProto.application_id:type_name -> hadoop.yarn.ApplicationIdProto
	29,  // 2: hadoop.yarn.ContainerIdProto.app_id:type_name -> hadoop.yarn.ApplicationIdProto
	30,  // 3: hadoop.yarn.ContainerIdProto.app_attempt_id:type_name -> hadoop.yarn.ApplicationAttemptIdProto
	0,   // 4: hadoop.yarn.ResourceInformationProto.type:type_name -> hadoop.yarn.ResourceTypesProto
	0,   // 5: hadoop.yarn.ResourceTypeInfoProto.type:type_name -> hadoop.yarn.ResourceTypesProto
	32,  // 6: hadoop.yarn.ResourceProto.resource_value_map:type_name -> hadoop.yarn.ResourceInformationProto
	34,  // 7: hadoop.yarn.ResourceOptionProto.resource:type_name -> hadoop.yarn.ResourceProto
	34,  // 8: hadoop.yarn.ResourceProfileEntry.resources:type_name -> hadoop.yarn.ResourceProto
	37,  // 9: hadoop.yarn.ResourceProfilesProto.resource_profiles_map:type_name -> hadoop.yarn.ResourceProfileEntry
	51,  // 10: hadoop.yarn.NodeResourceMapProto.node_id:type_name -> hadoop.yarn.NodeIdProto
	36,  // 11: hadoop.yarn.NodeResourceMapProto.resource_option:type_name -> hadoop.yarn.ResourceOptionProto
	31,  // 12: hadoop.yarn.ContainerProto.id:type_name -> hadoop.yarn.ContainerIdProto
	51,  // 13: hadoop.yarn.ContainerProto.nodeId:type_name -> hadoop.yarn.NodeIdProto
	34,  // 14: hadoop.yarn.ContainerProto.resource:type_name -> hadoop.yarn.ResourceProto
	40,  // 15: hadoop.yarn.ContainerProto.priority:type_name -> hadoop.yarn.PriorityProto
	103, // 16: hadoop.yarn.ContainerProto.container_token:type_name -> hadoop.common.TokenProto
	13,  // 17: hadoop.yarn.ContainerProto.execution_type:type_name -> hadoop.yarn.ExecutionTypeProto
	31,  // 18: hadoop.yarn.ContainerReportProto.container_id:type_name -> hadoop.yarn.ContainerIdProto
	34,  // 19: hadoop.yarn.ContainerReportProto.resource:type_name -> hadoop.yarn.ResourceProto
	51,  // 20: hadoop.yarn.ContainerReportProto.node_id:type_name -> hadoop.yarn.NodeIdProto
	40,  // 21: hadoop.yarn.ContainerReportProto.priority:type_name -> hadoop.yarn.PriorityProto
	1,   // 22: hadoop.yarn.ContainerReportProto.container_state:type_name -> hadoop.yarn.ContainerStateProto
	13,  // 23: hadoop.yarn.ContainerReportProto.executionType:type_name -> hadoop.yarn.ExecutionTypeProto
	43,  // 24: hadoop.yarn.LocalResourceProto.resource:type_name -> hadoop.yarn.URLProto
	7,   // 25: hadoop.yarn.LocalResourceProto.type:type_name -> hadoop.yarn.LocalResourceTypeProto
	6,   // 26: hadoop.yarn.LocalResourceProto.visibility:type_name -> hadoop.yarn.LocalResourceVisibilityProto
	34,  // 27: hadoop.yarn.ApplicationResourceUsageReportProto.used_resources:type_name -> hadoop.yarn.ResourceProto
	34,  // 28: hadoop.yarn.ApplicationResourceUsageReportProto.reserved_resources:type_name -> hadoop.yarn.ResourceProto
	34,  // 29: hadoop.yarn.ApplicationResourceUsageReportProto.needed_resources:type_name -> hadoop.yarn.ResourceProto
	45,  // 30: hadoop.yarn.ApplicationResourceUsageReportProto.application_resource_usage_map:type_name -> hadoop.yarn.StringLongMapProto
	45,  // 31: hadoop.yarn.ApplicationResourceUsageReportProto.application_preempted_resource_usage_map:type_name -> hadoop.yarn.StringLongMapProto
	29,  // 32: hadoop.yarn.ApplicationReportProto.applicationId:type_name -> hadoop.yarn.ApplicationIdProto
	103, // 33: hadoop.yarn.ApplicationReportProto.client_to_am_token:type_name -> hadoop.common.TokenProto
	3,   // 34: hadoop.yarn.ApplicationReportProto.yarn_application_state:type_name -> hadoop.yarn.YarnApplicationStateProto
	5,   // 35: hadoop.yarn.ApplicationReportProto.final_application_status:type_name -> hadoop.yarn.FinalApplicationStatusProto
	46,  // 36: hadoop.yarn.ApplicationReportProto.app_resource_Usage:type_name -> hadoop.yarn.ApplicationResourceUsageReportProto
	30,  // 37: hadoop.yarn.ApplicationReportProto.currentApplicationAttemptId:type_name -> hadoop.yarn.ApplicationAttemptIdProto
	103, // 38: hadoop.yarn.ApplicationReportProto.am_rm_token:type_name -> hadoop.common.TokenProto
	8,   // 39: hadoop.yarn.ApplicationReportProto.log_aggregation_status:type_name -> hadoop.yarn.LogAggregationStatusProto
	40,  // 40: hadoop.yarn.ApplicationReportProto.priority:type_name -> hadoop.yarn.PriorityProto
	48,  // 41: hadoop.yarn.ApplicationReportProto.appTimeouts:type_name -> hadoop.yarn.AppTimeoutsMapProto
	16,  // 42: hadoop.yarn.AppTimeoutsMapProto.application_timeout_type:type_name -> hadoop.yarn.ApplicationTimeoutTypeProto
	49,  // 43: hadoop.yarn.AppTimeoutsMapProto.application_timeout:type_name -> hadoop.yarn.ApplicationTimeoutProto
	16,  // 44: hadoop.yarn.ApplicationTimeoutProto.application_timeout_type:type_name -> hadoop.yarn.ApplicationTimeoutTypeProto
	30,  // 45: hadoop.yarn.ApplicationAttemptReportProto.application_attempt_id:type_name -> hadoop.yarn.ApplicationAttemptIdProto
	4,   // 46: hadoop.yarn.ApplicationAttemptReportProto.yarn_application_attempt_state:type_name -> hadoop.yarn.YarnApplicationAttemptStateProto
	31,  // 47: hadoop.yarn.ApplicationAttemptReportProto.am_container_id:type_name -> hadoop.yarn.ContainerIdProto
	51,  // 48: hadoop.yarn.NodeReportProto.nodeId:type_name -> hadoop.yarn.NodeIdProto
	34,  // 49: hadoop.yarn.NodeReportProto.used:type_name -> hadoop.yarn.ResourceProto
	34,  // 50: hadoop.yarn.NodeReportProto.capability:type_name -> hadoop.yarn.ResourceProto
	9,   // 51: hadoop.yarn.NodeReportProto.node_state:type_name -> hadoop.yarn.NodeStateProto
	35,  // 52: hadoop.yarn.NodeReportProto.containers_utilization:type_name -> hadoop.yarn.ResourceUtilizationProto
	35,  // 53: hadoop.yarn.NodeReportProto.node_utilization:type_name -> hadoop.yarn.ResourceUtilizationProto
	10,  // 54: hadoop.yarn.NodeReportProto.node_update_type:type_name -> hadoop.yarn.NodeUpdateTypeProto
	57,  // 55: hadoop.yarn.NodeReportProto.node_attributes:type_name -> hadoop.yarn.NodeAttributeProto
	51,  // 56: hadoop.yarn.NodeIdToLabelsProto.nodeId:type_name -> hadoop.yarn.NodeIdProto
	51,  // 57: hadoop.yarn.LabelsToNodeIdsProto.nodeId:type_name -> hadoop.yarn.NodeIdProto
	56,  // 58: hadoop.yarn.NodeAttributeProto.attributeKey:type_name -> hadoop.yarn.NodeAttributeKeyProto
	11,  // 59: hadoop.yarn.NodeAttributeProto.attributeType:type_name -> hadoop.yarn.NodeAttributeTypeProto
	56,  // 60: hadoop.yarn.NodeAttributeInfoProto.attributeKey:type_name -> hadoop.yarn.NodeAttributeKeyProto
	11,  // 61: hadoop.yarn.NodeAttributeInfoProto.attributeType:type_name -> hadoop.yarn.NodeAttributeTypeProto
	56,  // 62: hadoop.yarn.AttributeToNodesProto.nodeAttribute:type_name -> hadoop.yarn.NodeAttributeKeyProto
	59,  // 63: hadoop.yarn.AttributeToNodesProto.nodeValueMap:type_name -> hadoop.yarn.NodeToAttributeValueProto
	57,  // 64: hadoop.yarn.NodeToAttributesProto.nodeAttributes:type_name -> hadoop.yarn.NodeAttributeProto
	40,  // 65: hadoop.yarn.ResourceRequestProto.priority:type_name -> hadoop.yarn.PriorityProto
	34,  // 66: hadoop.yarn.ResourceRequestProto.capability:type_name -> hadoop.yarn.ResourceProto
	63,  // 67: hadoop.yarn.ResourceRequestProto.execution_type_request:type_name -> hadoop.yarn.ExecutionTypeRequestProto
	13,  // 68: hadoop.yarn.ExecutionTypeRequestProto.execution_type:type_name -> hadoop.yarn.ExecutionTypeProto
	40,  // 69: hadoop.yarn.SchedulingRequestProto.priority:type_name -> hadoop.yarn.PriorityProto
	63,  // 70: hadoop.yarn.SchedulingRequestProto.executionType:type_name -> hadoop.yarn.ExecutionTypeRequestProto
	65,  // 71: hadoop.yarn.SchedulingRequestProto.resourceSizing:type_name -> hadoop.yarn.ResourceSizingProto
	84,  // 72: hadoop.yarn.SchedulingRequestProto.placementConstraint:type_name -> hadoop.yarn.PlacementConstraintProto
	34,  // 73: hadoop.yarn.ResourceSizingProto.resources:type_name -> hadoop.yarn.ResourceProto
	15,  // 74: hadoop.yarn.RejectedSchedulingRequestProto.reason:type_name -> hadoop.yarn.RejectionReasonProto
	64,  // 75: hadoop.yarn.RejectedSchedulingRequestProto.request:type_name -> hadoop.yarn.SchedulingRequestProto
	68,  // 76: hadoop.yarn.PreemptionMessageProto.strictContract:type_name -> hadoop.yarn.StrictPreemptionContractProto
	69,  // 77: hadoop.yarn.PreemptionMessageProto.contract:type_name -> hadoop.yarn.PreemptionContractProto
	70,  // 78: hadoop.yarn.StrictPreemptionContractProto.container:type_name -> hadoop.yarn.PreemptionContainerProto
	71,  // 79: hadoop.yarn.PreemptionContractProto.resource:type_name -> hadoop.yarn.PreemptionResourceRequestProto
	70,  // 80: hadoop.yarn.PreemptionContractProto.container:type_name -> hadoop.yarn.PreemptionContainerProto
	31,  // 81: hadoop.yarn.PreemptionContainerProto.id:type_name -> hadoop.yarn.ContainerIdProto
	62,  // 82: hadoop.yarn.PreemptionResourceRequestProto.resource:type_name -> hadoop.yarn.ResourceRequestProto
	29,  // 83: hadoop.yarn.ApplicationSubmissionContextProto.application_id:type_name -> hadoop.yarn.ApplicationIdProto
	40,  // 84: hadoop.yarn.ApplicationSubmissionContextProto.priority:type_name -> hadoop.yarn.PriorityProto
	96,  // 85: hadoop.yarn.ApplicationSubmissionContextProto.am_container_spec:type_name -> hadoop.yarn.ContainerLaunchContextProto
	34,  // 86: hadoop.yarn.ApplicationSubmissionContextProto.resource:type_name -> hadoop.yarn.ResourceProto
	76,  // 87: hadoop.yarn.ApplicationSubmissionContextProto.log_aggregation_context:type_name -> hadoop.yarn.LogAggregationContextProto
	90,  // 88: hadoop.yarn.ApplicationSubmissionContextProto.reservation_id:type_name -> hadoop.yarn.ReservationIdProto
	62,  // 89: hadoop.yarn.ApplicationSubmissionContextProto.am_container_resource_request:type_name -> hadoop.yarn.ResourceRequestProto
	74,  // 90: hadoop.yarn.ApplicationSubmissionContextProto.application_timeouts:type_name -> hadoop.yarn.ApplicationTimeoutMapProto
	100, // 91: hadoop.yarn.ApplicationSubmissionContextProto.application_scheduling_properties:type_name -> hadoop.yarn.StringStringMapProto
	16,  // 92: hadoop.yarn.ApplicationTimeoutMapProto.application_timeout_type:type_name -> hadoop.yarn.ApplicationTimeoutTypeProto
	16,  // 93: hadoop.yarn.ApplicationUpdateTimeoutMapProto.application_timeout_type:type_name -> hadoop.yarn.ApplicationTimeoutTypeProto
	17,  // 94: hadoop.yarn.ApplicationACLMapProto.accessType:type_name -> hadoop.yarn.ApplicationAccessTypeProto
	18,  // 95: hadoop.yarn.QueueInfoProto.state:type_name -> hadoop.yarn.QueueStateProto
	80,  // 96: hadoop.yarn.QueueInfoProto.childQueues:type_name -> hadoop.yarn.QueueInfoProto
	47,  // 97: hadoop.yarn.QueueInfoProto.applications:type_name -> hadoop.yarn.ApplicationReportProto
	79,  // 98: hadoop.yarn.QueueInfoProto.queueStatistics:type_name -> hadoop.yarn.QueueStatisticsProto
	82,  // 99: hadoop.yarn.QueueInfoProto.queueConfigurationsMap:type_name -> hadoop.yarn.QueueConfigurationsMapProto
	34,  // 100: hadoop.yarn.QueueConfigurationsProto.effectiveMinCapacity:type_name -> hadoop.yarn.ResourceProto
	34,  // 101: hadoop.yarn.QueueConfigurationsProto.effectiveMaxCapacity:type_name -> hadoop.yarn.ResourceProto
	34,  // 102: hadoop.yarn.QueueConfigurationsProto.configuredMinCapacity:type_name -> hadoop.yarn.ResourceProto
	34,  // 103: hadoop.yarn.QueueConfigurationsProto.configuredMaxCapacity:type_name -> hadoop.yarn.ResourceProto
	81,  // 104: hadoop.yarn.QueueConfigurationsMapProto.queueConfigurations:type_name -> hadoop.yarn.QueueConfigurationsProto
	19,  // 105: hadoop.yarn.QueueUserACLInfoProto.userAcls:type_name -> hadoop.yarn.QueueACLProto
	85,  // 106: hadoop.yarn.PlacementConstraintProto.simpleConstraint:type_name -> hadoop.yarn.SimplePlacementConstraintProto
	88,  // 107: hadoop.yarn.PlacementConstraintProto.compositeConstraint:type_name -> hadoop.yarn.CompositePlacementConstraintProto
	86,  // 108: hadoop.yarn.SimplePlacementConstraintProto.targetExpressions:type_name -> hadoop.yarn.PlacementConstraintTargetProto
	21,  // 109: hadoop.yarn.SimplePlacementConstraintProto.attributeOpCode:type_name -> hadoop.yarn.NodeAttributeOpCodeProto
	25,  // 110: hadoop.yarn.PlacementConstraintTargetProto.targetType:type_name -> hadoop.yarn.PlacementConstraintTargetProto.TargetType
	84,  // 111: hadoop.yarn.TimedPlacementConstraintProto.placementConstraint:type_name -> hadoop.yarn.PlacementConstraintProto
	26,  // 112: hadoop.yarn.TimedPlacementConstraintProto.delayUnit:type_name -> hadoop.yarn.TimedPlacementConstraintProto.DelayUnit
	27,  // 113: hadoop.yarn.CompositePlacementConstraintProto.compositeType:type_name -> hadoop.yarn.CompositePlacementConstraintProto.CompositeType
	84,  // 114: hadoop.yarn.CompositePlacementConstraintProto.childConstraints:type_name -> hadoop.yarn.PlacementConstraintProto
	87,  // 115: hadoop.yarn.CompositePlacementConstraintProto.timedChildConstraints:type_name -> hadoop.yarn.TimedPlacementConstraintProto
	84,  // 116: hadoop.yarn.PlacementConstraintMapEntryProto.placement_constraint:type_name -> hadoop.yarn.PlacementConstraintProto
	34,  // 117: hadoop.yarn.ReservationRequestProto.capability:type_name -> hadoop.yarn.ResourceProto
	91,  // 118: hadoop.yarn.ReservationRequestsProto.reservation_resources:type_name -> hadoop.yarn.ReservationRequestProto
	22,  // 119: hadoop.yarn.ReservationRequestsProto.interpreter:type_name -> hadoop.yarn.ReservationRequestInterpreterProto
	92,  // 120: hadoop.yarn.ReservationDefinitionProto.reservation_requests:type_name -> hadoop.yarn.ReservationRequestsProto
	40,  // 121: hadoop.yarn.ReservationDefinitionProto.priority:type_name -> hadoop.yarn.PriorityProto
	34,  // 122: hadoop.yarn.ResourceAllocationRequestProto.resource:type_name -> hadoop.yarn.ResourceProto
	93,  // 123: hadoop.yarn.ReservationAllocationStateProto.reservation_definition:type_name -> hadoop.yarn.ReservationDefinitionProto
	94,  // 124: hadoop.yarn.ReservationAllocationStateProto.allocation_requests:type_name -> hadoop.yarn.ResourceAllocationRequestProto
	90,  // 125: hadoop.yarn.ReservationAllocationStateProto.reservation_id:type_name -> hadoop.yarn.ReservationIdProto
	99,  // 126: hadoop.yarn.ContainerLaunchContextProto.localResources:type_name -> hadoop.yarn.StringLocalResourceMapProto
	101, // 127: hadoop.yarn.ContainerLaunchContextProto.service_data:type_name -> hadoop.yarn.StringBytesMapProto
	100, // 128: hadoop.yarn.ContainerLaunchContextProto.environment:type_name -> hadoop.yarn.StringStringMapProto
	77,  // 129: hadoop.yarn.ContainerLaunchContextProto.application_ACLs:type_name -> hadoop.yarn.ApplicationACLMapProto
	98,  // 130: hadoop.yarn.ContainerLaunchContextProto.container_retry_context:type_name -> hadoop.yarn.ContainerRetryContextProto
	31,  // 131: hadoop.yarn.ContainerStatusProto.container_id:type_name -> hadoop.yarn.ContainerIdProto
	1,   // 132: hadoop.yarn.ContainerStatusProto.state:type_name -> hadoop.yarn.ContainerStateProto
	34,  // 133: hadoop.yarn.ContainerStatusProto.capability:type_name -> hadoop.yarn.ResourceProto
	13,  // 134: hadoop.yarn.ContainerStatusProto.executionType:type_name -> hadoop.yarn.ExecutionTypeProto
	100, // 135: hadoop.yarn.ContainerStatusProto.container_attributes:type_name -> hadoop.yarn.StringStringMapProto
	2,   // 136: hadoop.yarn.ContainerStatusProto.container_sub_state:type_name -> hadoop.yarn.ContainerSubStateProto
	24,  // 137: hadoop.yarn.ContainerRetryContextProto.retry_policy:type_name -> hadoop.yarn.ContainerRetryPolicyProto
	44,  // 138: hadoop.yarn.StringLocalResourceMapProto.value:type_name -> hadoop.yarn.LocalResourceProto
	103, // 139: hadoop.yarn.CollectorInfoProto.collector_token:type_name -> hadoop.common.TokenProto
	140, // [140:140] is the sub-list for method output_type
	140, // [140:140] is the sub-list for method input_type
	140, // [140:140] is the sub-list for extension type_name
	140, // [140:140] is the sub-list for extension extendee
	0,   // [0:140] is the sub-list for field type_name
}

func init() { file_yarn_protos_proto_init() }
func file_yarn_protos_proto_init() {
	if File_yarn_protos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yarn_protos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedExceptionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationIdProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttemptIdProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerIdProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInformationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTypeInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceUtilizationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceOptionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceProfileEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceProfilesProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeResourceMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriorityProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalResourceProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringLongMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationResourceUsageReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTimeoutsMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationTimeoutProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttemptReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeIdProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeIdToLabelsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelsToNodeIdsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeLabelProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAttributeKeyProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAttributeProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAttributeInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeToAttributeValueProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeToNodesProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeToAttributesProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionTypeRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSizingProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectedSchedulingRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreemptionMessageProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrictPreemptionContractProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreemptionContractProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreemptionContainerProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreemptionResourceRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceBlacklistRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSubmissionContextProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationTimeoutMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationUpdateTimeoutMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogAggregationContextProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationACLMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YarnClusterMetricsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueStatisticsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueConfigurationsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueConfigurationsMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueUserACLInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlacementConstraintProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimplePlacementConstraintProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlacementConstraintTargetProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimedPlacementConstraintProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompositePlacementConstraintProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlacementConstraintMapEntryProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationIdProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationRequestsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationDefinitionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceAllocationRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationAllocationStateProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerLaunchContextProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStatusProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerRetryContextProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringLocalResourceMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringStringMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringBytesMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_protos_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectorInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yarn_protos_proto_rawDesc,
			NumEnums:      28,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yarn_protos_proto_goTypes,
		DependencyIndexes: file_yarn_protos_proto_depIdxs,
		EnumInfos:         file_yarn_protos_proto_enumTypes,
		MessageInfos:      file_yarn_protos_proto_msgTypes,
	}.Build()
	File_yarn_protos_proto = out.File
	file_yarn_protos_proto_rawDesc = nil
	file_yarn_protos_proto_goTypes = nil
	file_yarn_protos_proto_depIdxs = nil
}
